import{o as a,c as e,a as s,b as n,d as t}from"./app.c5bc0572.js";const r='{"title":"这个博客从0到0.9的详细过程","description":"","frontmatter":{"title":"这个博客从0到0.9的详细过程","date":"2021-04-23T00:00:00.000Z","categories":["front-end"],"tags":["vitepress"],"author":"QiYoe","publish":false,"feed":{"enable":true,"title":"心经","description":"心经","author":[{"name":"唐玄奘"}]}},"headers":[{"level":2,"title":"创建本地项目","slug":"创建本地项目"},{"level":3,"title":"Method 1","slug":"method-1"},{"level":3,"title":"Method 2","slug":"method-2"},{"level":2,"title":"把本地项目推送到github","slug":"把本地项目推送到github"},{"level":2,"title":"自动化部署","slug":"自动化部署"},{"level":3,"title":"travis","slug":"travis"},{"level":3,"title":"git actions","slug":"git-actions"},{"level":2,"title":"Go for it","slug":"go-for-it"}],"relativePath":"front-end/blog-build.md","lastUpdated":1622552572670}',o={},l=n("div",{class:"tip custom-block"},[n("p",{class:"custom-block-title"},"TIP"),n("p",null,"0.9系列——无脑搭建篇")],-1),c=t('<h2 id="创建本地项目"><a class="header-anchor" href="#创建本地项目" aria-hidden="true">#</a> 创建本地项目</h2><h3 id="method-1"><a class="header-anchor" href="#method-1" aria-hidden="true">#</a> Method 1</h3><p>打开 <a href="https://vuepress-reco-doc.vercel.app/" target="_black" rel="nofollow noopener noreferrer">vuepress-theme-reco官方文档</a>，导航到”快速开始“，自己查看文档。。。</p><p>当然，觉得麻烦不想看文档的童鞋，可以直接运行：</p><div class="language-bash line-numbers-mode"><pre><code>  npx @vuepress-reco/theme-cli init\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>回车! Wait a minute...</p><p>下载好之后改改名字配置就可以啦 😄</p><h3 id="method-2"><a class="header-anchor" href="#method-2" aria-hidden="true">#</a> Method 2</h3><p>从github上把<a href="https://github.com/QiYoe/c-blog" target="_black" rel="nofollow noopener noreferrer">我的项目</a>clone下来，改一改名字啥的 🤣</p><h2 id="把本地项目推送到github"><a class="header-anchor" href="#把本地项目推送到github" aria-hidden="true">#</a> 把本地项目推送到github</h2><p>这个如果不懂的话可以<a href="https://www.cnblogs.com/sdcs/p/8270029.html" target="_black" rel="nofollow noopener noreferrer">百度</a></p><h2 id="自动化部署"><a class="header-anchor" href="#自动化部署" aria-hidden="true">#</a> 自动化部署</h2><h3 id="travis"><a class="header-anchor" href="#travis" aria-hidden="true">#</a> travis</h3><p>目前不讲这个，但我的项目里已配置。如有需求。可自行<a href="https://www.baidu.com/" target="_black" rel="nofollow noopener noreferrer">百度</a></p><h3 id="git-actions"><a class="header-anchor" href="#git-actions" aria-hidden="true">#</a> git actions</h3><p>请首先看这篇<a href="https://zhuanlan.zhihu.com/p/93829286" target="_black" rel="nofollow noopener noreferrer">说明</a>。其中有几点注意事项：</p><h4 id="yaml文件配置之创建yaml文件"><a class="header-anchor" href="#yaml文件配置之创建yaml文件" aria-hidden="true">#</a> yaml文件配置之创建yaml文件</h4><p>在github项目tab栏点击actions，选择第一个模板。创建的模板yaml文件名字可以随意命名，比如main.yaml、cli.yaml等等（文件内容配置可看我的<a href="https://github.com/QiYoe/c-blog/blob/main/.github/workflows/main.yml" target="_black" rel="nofollow noopener noreferrer">workflows配置</a>）</p><h4 id="yaml文件配置之配置yaml文件"><a class="header-anchor" href="#yaml文件配置之配置yaml文件" aria-hidden="true">#</a> yaml文件配置之配置yaml文件</h4><div class="language-yaml line-numbers-mode"><pre><code><span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> main  <span class="token comment"># 这是项目主分支的名称，如果项目主分支名为master，此处就改为master</span>\n  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>  <span class="token comment"># 这个选项为手动触发actions，主要用于第一次第一次push没成功，然后手动触发actions事件</span>\n\n<span class="token punctuation">...</span>\n\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>\n    <span class="token key atrule">strps</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy\n      <span class="token key atrule">with</span><span class="token punctuation">:</span>\n        <span class="token key atrule">ACCESS_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>  \n        <span class="token comment">#此处有两点注意：</span>\n        <span class="token comment">#1、如果此处改为secrets.GITHUB_TOKEN，则无需额外配置ACCESS_TOKEN，但此种方法不安全而且无法兼容travis</span>\n        <span class="token comment">#2、如果此处设为secrets.ACCESS_TOKEN，则需要配置ACCESS_TOKEN</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="yaml文件配置创建secrets-access-token"><a class="header-anchor" href="#yaml文件配置创建secrets-access-token" aria-hidden="true">#</a> yaml文件配置创建secrets.ACCESS_TOKEN</h4><h5 id="创建personal-access-token（个人访问令牌）"><a class="header-anchor" href="#创建personal-access-token（个人访问令牌）" aria-hidden="true">#</a> 创建personal access token（个人访问令牌）</h5><p><a href="https://docs.github.com/cn/github/authenticating-to-github/creating-a-personal-access-token" target="_black" rel="nofollow noopener noreferrer">官网配置文档</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>创建token选择scopes一定选上<code>repo</code>和<code>workflow</code>，其他的自己看情况选择；最后获取到的token记得先<code>保存</code>下来</strong></p></div><h5 id="创建secrets-access-token"><a class="header-anchor" href="#创建secrets-access-token" aria-hidden="true">#</a> 创建secrets.ACCESS_TOKEN</h5><p><a href="https://zhuanlan.zhihu.com/p/93829286" target="_black" rel="nofollow noopener noreferrer">教程</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>name为<code>ACCESS_TOKEN</code>；value为刚才复制的值</strong></p></div><h4 id="创建git-pages"><a class="header-anchor" href="#创建git-pages" aria-hidden="true">#</a> 创建git pages</h4><h5 id="创建站点仓库"><a class="header-anchor" href="#创建站点仓库" aria-hidden="true">#</a> 创建站点仓库</h5><p><a href="https://docs.github.com/cn/pages/getting-started-with-github-pages/creating-a-github-pages-site" target="_black" rel="nofollow noopener noreferrer">官方文档</a></p><h5 id="创建项目gh-pages分支"><a class="header-anchor" href="#创建项目gh-pages分支" aria-hidden="true">#</a> 创建项目gh-pages分支</h5><p>在github的项目上创建<code>gh_pages</code>分支。如不会，请自行<a href="https://blog.csdn.net/qq_30607843/article/details/84404000" target="_black" rel="nofollow noopener noreferrer">百度</a></p><h5 id="设置项目pages"><a class="header-anchor" href="#设置项目pages" aria-hidden="true">#</a> 设置项目pages</h5><p><a href="https://docs.github.com/cn/pages/getting-started-with-github-pages/securing-your-github-pages-site-with-https" target="_black" rel="nofollow noopener noreferrer">官方文档</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>source栏下的Branch选择为<code>gh-pages</code>，后面的选项选则<code>/(root)</code>，其他的都按官方文档</p></div><h4 id="验证"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h4><h5 id="method1"><a class="header-anchor" href="#method1" aria-hidden="true">#</a> Method1</h5><p>本地push一次代码，然后看github上的actions的变化</p><h5 id="method2"><a class="header-anchor" href="#method2" aria-hidden="true">#</a> Method2</h5><p>GitHub上随便修改一个文件内容，提交，然后观察github上的actions的变化</p><h2 id="go-for-it"><a class="header-anchor" href="#go-for-it" aria-hidden="true">#</a> Go for it</h2><blockquote><p><strong>阳光正好，未来可期</strong>💪</p></blockquote>',42);o.render=function(n,t,r,o,p,i){return a(),e("div",null,[l,s(" more "),c])};export default o;export{r as __pageData};
