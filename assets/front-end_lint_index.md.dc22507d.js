import{o as e,c as t,b as a}from"./app.e234469c.js";const i='{"title":"介绍","description":"前端代码风格规范","frontmatter":{"title":"介绍","head":[["meta",{"name":"description","content":"前端代码风格规范"}],["meta",{"name":"keywords","content":"前端代码风格规范 介绍"}]]},"headers":[{"level":2,"title":"目的","slug":"目的"},{"level":2,"title":"适用","slug":"适用"},{"level":2,"title":"学习顺序","slug":"学习顺序"}],"relativePath":"front-end/lint/index.md","lastUpdated":1631852225668}',l={},d=[a('<h2 id="目的"><a class="header-anchor" href="#目的" aria-hidden="true">#</a> 目的</h2><p>代码风格和性格一样，每个程序员都有自己的特点，但对于大家协同开发的项目，还是需要力求代码风格的一致性，以减少Bug，方便互相修改，短时间内能上手，在这条路上诞生了许许多多的工具。本系列主要介绍目前主流的前端代码格式化的工具。</p><h2 id="适用"><a class="header-anchor" href="#适用" aria-hidden="true">#</a> 适用</h2><p>该系列规范主要是利用 <code>git hook</code> 钩子来触发的, 也就是说只适用于 <code>Git</code></p><h2 id="学习顺序"><a class="header-anchor" href="#学习顺序" aria-hidden="true">#</a> 学习顺序</h2><ol><li><a href="./husky.html">Husky</a></li><li><a href="./commitlint.html">Commitlint</a></li><li><a href="./commitizen.html">Commitizen</a></li><li><a href="./lint-staged.html">Lint-staged</a></li></ol><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>本系列所有 <code>npm</code> 包都为局部安装。这是为了保证团队所有人都可以统一使用要求和简便环境安装</p></div>',7)];l.render=function(a,i,l,r,n,o){return e(),t("div",null,d)};export{i as __pageData,l as default};
