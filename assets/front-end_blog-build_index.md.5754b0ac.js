import{o as e,c as a,b as s}from"./app.d440ca51.js";const t='{"title":"博客搭建","description":"vitepress静态网站博客搭建详细教程","frontmatter":{"title":"博客搭建","head":[["meta",{"name":"description","content":"vitepress静态网站博客搭建详细教程"}],["meta",{"name":"keywords","content":"vitepress 博客 自动部署 github pages"}]]},"headers":[{"level":2,"title":"为什么选择vitepress？","slug":"为什么选择vitepress？"},{"level":2,"title":"创建本地项目","slug":"创建本地项目"},{"level":2,"title":"把本地项目推送到github","slug":"把本地项目推送到github"},{"level":2,"title":"自动化部署(git actions)","slug":"自动化部署-git-actions"},{"level":3,"title":"创建yaml文件","slug":"创建yaml文件"},{"level":3,"title":"配置yaml文件","slug":"配置yaml文件"},{"level":3,"title":"创建personal access token（个人访问令牌）","slug":"创建personal-access-token（个人访问令牌）"},{"level":3,"title":"创建secrets.ACCESS_TOKEN","slug":"创建secrets-access-token"},{"level":3,"title":"创建git pages站点仓库","slug":"创建git-pages站点仓库"},{"level":3,"title":"创建项目gh-pages分支","slug":"创建项目gh-pages分支"},{"level":3,"title":"设置项目pages","slug":"设置项目pages"},{"level":3,"title":"验证","slug":"验证"}],"relativePath":"front-end/blog-build/index.md","lastUpdated":1624524551937}',n={},r=s('<h2 id="为什么选择vitepress？"><a class="header-anchor" href="#为什么选择vitepress？" aria-hidden="true">#</a> 为什么选择vitepress？</h2><p>首先是它的构建速度非常快。之前用vuepress，每次构建至少得花11s，现在构建一次200ms左右，对于时常需要编辑代码的我来说，这个效率非常高⚡</p><p>其次非常简洁，相比于vuepress花里胡哨的表现形式，vitepress就是单纯文档的应用</p><h2 id="创建本地项目"><a class="header-anchor" href="#创建本地项目" aria-hidden="true">#</a> 创建本地项目</h2><p>创建方法可以参考<a href="https://vitepress.vuejs.org/guide/getting-started.html" target="_blank" rel="noopener noreferrer">vitepress官方文档</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>建议先阅读<a href="https://vuepress.vuejs.org/" target="_blank" rel="noopener noreferrer">vuepress官方文档</a>，然后阅读<a href="https://vitepress.vuejs.org/" target="_blank" rel="noopener noreferrer">vitepress官方文档</a>。因为vitepress是在vuepress基础上的一个衍生版本 <code>VitePress is VuePress&#39; little brother, built on top of Vite.</code></p></div><h2 id="把本地项目推送到github"><a class="header-anchor" href="#把本地项目推送到github" aria-hidden="true">#</a> 把本地项目推送到github</h2><p>这个如果不懂的话可以<a href="https://www.cnblogs.com/sdcs/p/8270029.html" target="_blank" rel="noopener noreferrer">百度</a></p><h2 id="自动化部署-git-actions"><a class="header-anchor" href="#自动化部署-git-actions" aria-hidden="true">#</a> 自动化部署(git actions)</h2><p>请首先看这篇<a href="https://zhuanlan.zhihu.com/p/93829286" target="_blank" rel="noopener noreferrer">说明</a>。其中有几点注意事项：</p><h3 id="创建yaml文件"><a class="header-anchor" href="#创建yaml文件" aria-hidden="true">#</a> 创建yaml文件</h3><p>在github项目tab栏点击actions，选择第一个模板。创建的模板yaml文件名字可以随意命名，比如main.yaml、cli.yaml等等（文件内容配置可看我的<a href="https://github.com/QiYoe/c-blog/blob/main/.github/workflows/main.yml" target="_blank" rel="noopener noreferrer">workflows配置</a>）</p><h3 id="配置yaml文件"><a class="header-anchor" href="#配置yaml文件" aria-hidden="true">#</a> 配置yaml文件</h3><div class="language-yaml"><pre><code><span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> main  <span class="token comment"># 这是项目主分支的名称，如果项目主分支名为master，此处就改为master</span>\n  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>  <span class="token comment"># 这个选项为手动触发actions，主要用于第一次第一次push没成功，然后手动触发actions事件</span>\n\n<span class="token punctuation">...</span>\n\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>\n    <span class="token key atrule">strps</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy\n      <span class="token key atrule">with</span><span class="token punctuation">:</span>\n        <span class="token key atrule">ACCESS_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>  \n        <span class="token comment">#此处有两点注意：</span>\n        <span class="token comment">#1、如果此处改为secrets.GITHUB_TOKEN，则无需额外配置ACCESS_TOKEN，但此种方法不安全而且无法兼容travis</span>\n        <span class="token comment">#2、如果此处设为secrets.ACCESS_TOKEN，则需要配置ACCESS_TOKEN</span>\n</code></pre></div><h3 id="创建personal-access-token（个人访问令牌）"><a class="header-anchor" href="#创建personal-access-token（个人访问令牌）" aria-hidden="true">#</a> 创建personal access token（个人访问令牌）</h3><p><a href="https://docs.github.com/cn/github/authenticating-to-github/creating-a-personal-access-token" target="_blank" rel="noopener noreferrer">官网配置文档</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>创建token选择scopes一定选上<code>repo</code>和<code>workflow</code>，其他的自己看情况选择；最后获取到的token记得先<code>保存</code>下来</strong></p></div><h3 id="创建secrets-access-token"><a class="header-anchor" href="#创建secrets-access-token" aria-hidden="true">#</a> 创建secrets.ACCESS_TOKEN</h3><p><a href="https://zhuanlan.zhihu.com/p/93829286" target="_blank" rel="noopener noreferrer">教程</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>name为<code>ACCESS_TOKEN</code>；value为刚才复制的值</strong></p></div><h3 id="创建git-pages站点仓库"><a class="header-anchor" href="#创建git-pages站点仓库" aria-hidden="true">#</a> 创建git pages站点仓库</h3><p><a href="https://docs.github.com/cn/pages/getting-started-with-github-pages/creating-a-github-pages-site" target="_blank" rel="noopener noreferrer">官方文档</a></p><h3 id="创建项目gh-pages分支"><a class="header-anchor" href="#创建项目gh-pages分支" aria-hidden="true">#</a> 创建项目gh-pages分支</h3><p>在github的项目上创建<code>gh_pages</code>分支。如不会，请自行<a href="https://blog.csdn.net/qq_30607843/article/details/84404000" target="_blank" rel="noopener noreferrer">百度</a></p><h3 id="设置项目pages"><a class="header-anchor" href="#设置项目pages" aria-hidden="true">#</a> 设置项目pages</h3><p><a href="https://docs.github.com/cn/pages/getting-started-with-github-pages/securing-your-github-pages-site-with-https" target="_blank" rel="noopener noreferrer">官方文档</a></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>source栏下的Branch选择为<code>gh-pages</code>，后面的选项选则<code>/(root)</code>，其他的都按官方文档</p></div><h3 id="验证"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3><ul><li><p>本地push一次代码，然后看github上的actions的变化</p></li><li><p>GitHub上随便修改一个文件内容，提交，然后观察github上的actions的变化</p></li></ul>',29);n.render=function(s,t,n,o,p,l){return e(),a("div",null,[r])};export default n;export{t as __pageData};
