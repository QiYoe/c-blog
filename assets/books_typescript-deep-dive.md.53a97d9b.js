import{_ as n,c as s,o as a,d as p}from"./app.9d8e5904.js";const y='{"title":"\u6DF1\u5165\u7406\u89E3 TypeScript","description":"TypeScript \u6DF1\u5165\u7406\u89E3 TS","frontmatter":{"title":"\u6DF1\u5165\u7406\u89E3 TypeScript","head":[["meta",{"name":"description","content":"TypeScript \u6DF1\u5165\u7406\u89E3 TS"}],["meta",{"name":"keywords","content":"TypeScript \u6DF1\u5165\u7406\u89E3 TS"}]]},"headers":[{"level":2,"title":"TypeScript \u9879\u76EE","slug":"typescript"},{"level":3,"title":"\u7F16\u8BD1\u4E0A\u4E0B\u6587","slug":"\u7F16\u8BD1\u4E0A\u4E0B\u6587"},{"level":3,"title":"\u58F0\u660E\u7A7A\u95F4","slug":"-4"},{"level":3,"title":"\u6A21\u5757","slug":"-7"},{"level":3,"title":"\u547D\u540D\u7A7A\u95F4","slug":"-19"},{"level":3,"title":"\u52A8\u6001\u5BFC\u5165\u8868\u8FBE\u5F0F","slug":"-20"},{"level":2,"title":"TypeScript \u7C7B\u578B\u7CFB\u7EDF","slug":"typescript-2"},{"level":3,"title":"\u6982\u89C8","slug":"-21"},{"level":3,"title":"\u4ECEJavaScript \u8FC1\u79FB","slug":"javascript"},{"level":3,"title":"@types","slug":"types"},{"level":3,"title":"\u73AF\u5883\u58F0\u660E","slug":"-37"},{"level":3,"title":"\u63A5\u53E3","slug":"-40"},{"level":3,"title":"\u679A\u4E3E","slug":"-44"},{"level":3,"title":"lib.d.ts","slug":"libdts"},{"level":3,"title":"\u51FD\u6570","slug":"-56"},{"level":3,"title":"\u53EF\u8C03\u7528\u7684","slug":"-62"},{"level":3,"title":"\u7C7B\u578B\u65AD\u8A00","slug":"-66"},{"level":3,"title":"Freshness","slug":"freshness"},{"level":3,"title":"\u7C7B\u578B\u4FDD\u62A4","slug":"-71"},{"level":3,"title":"\u5B57\u9762\u91CF\u7C7B\u578B","slug":"-74"},{"level":3,"title":"readonly","slug":"readonly"},{"level":3,"title":"\u8303\u578B","slug":"-83"},{"level":3,"title":"\u7C7B\u578B\u63A8\u65AD","slug":"-87"},{"level":3,"title":"\u7C7B\u578B\u517C\u5BB9\u6027","slug":"-97"},{"level":3,"title":"Never","slug":"never"},{"level":3,"title":"\u8FA8\u6790\u8054\u5408\u7C7B\u578B","slug":"-109"},{"level":3,"title":"\u7D22\u5F15\u7B7E\u540D","slug":"-111"},{"level":3,"title":"\u6D41\u52A8\u7684\u7C7B\u578B","slug":"-117"},{"level":3,"title":"\u5F02\u5E38\u5904\u7406","slug":"-123"},{"level":3,"title":"\u6DF7\u5408","slug":"-129"},{"level":3,"title":"ThisType","slug":"thistype"},{"level":2,"title":"TypeScript \u7F16\u8BD1\u539F\u7406","slug":"typescript-6"},{"level":3,"title":"\u6982\u89C8","slug":"-132"},{"level":3,"title":"\u7A0B\u5E8F","slug":"-137"},{"level":3,"title":"\u62BD\u8C61\u8BED\u6CD5\u6811","slug":"-138"},{"level":3,"title":"\u626B\u63CF\u5668","slug":"-140"},{"level":3,"title":"\u89E3\u6790\u5668","slug":"-144"},{"level":3,"title":"\u7ED1\u5B9A\u5668","slug":"-149"},{"level":3,"title":"\u68C0\u67E5\u5668","slug":"-160"},{"level":3,"title":"\u53D1\u5C04\u5668","slug":"-165"}],"relativePath":"books/typescript-deep-dive.md","lastUpdated":1641808541908}',t={},o=p(`<h2 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript">#</a> TypeScript \u9879\u76EE</h2><h3 id="" tabindex="-1"><a class="header-anchor" href="#">#</a> \u7F16\u8BD1\u4E0A\u4E0B\u6587</h3><p>\u7F16\u8BD1\u4E0A\u4E0B\u6587\u7B97\u662F\u4E00\u4E2A\u6BD4\u8F83\u82B1\u54E8\u7684\u672F\u8BED\uFF0C\u53EF\u4EE5\u7528\u5B83\u6765\u7ED9\u6587\u4EF6\u5206\u7EC4\uFF0C\u544A\u8BC9 TypeScript \u54EA\u4E9B\u6587\u4EF6\u662F\u6709\u6548\u7684\uFF0C\u54EA\u4E9B\u662F\u65E0\u6548\u7684\u3002\u9664\u4E86\u6709\u6548\u6587\u4EF6\u6240\u643A\u5E26\u4FE1\u606F\u5916\uFF0C\u7F16\u8BD1\u4E0A\u4E0B\u6587\u8FD8\u5305\u542B\u6709\u6B63\u5728\u88AB\u4F7F\u7528\u7684\u7F16\u8BD1\u9009\u9879\u7684\u4FE1\u606F\u3002\u5B9A\u4E49\u8FD9\u79CD\u903B\u8F91\u5206\u7EC4\uFF0C\u4E00\u4E2A\u6BD4\u8F83\u597D\u7684\u65B9\u5F0F\u662F\u4F7F\u7528 <code>tsconfig.json</code> \u6587\u4EF6\u3002</p><h4 id="tsconfigjson" tabindex="-1"><a class="header-anchor" href="#tsconfigjson">#</a> tsconfig.json</h4><h5 id="-1" tabindex="-1"><a class="header-anchor" href="#-1">#</a> \u57FA\u7840</h5><p>\u5F00\u59CB\u4F7F\u7528 <code>tsconfig.json</code> \u662F\u4E00\u4EF6\u6BD4\u8F83\u5BB9\u6613\u7684\u4E8B\uFF0C\u4F60\u4EC5\u4EC5\u9700\u8981\u5199\u4E0B\uFF1A</p><div class="language-json"><pre><code><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><p>\u4F8B\u5982\uFF0C\u5728\u9879\u76EE\u7684\u6839\u76EE\u5F55\u4E0B\u521B\u5EFA\u4E00\u4E2A\u7A7A JSON \u6587\u4EF6\u3002\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0CTypeScript \u5C06 \u4F1A\u628A\u6B64\u76EE\u5F55\u548C\u5B50\u76EE\u5F55\u4E0B\u7684\u6240\u6709 .ts \u6587\u4EF6\u4F5C\u4E3A\u7F16\u8BD1\u4E0A\u4E0B\u6587\u7684\u4E00\u90E8\u5206\uFF0C\u5B83\u8FD8\u4F1A\u5305\u542B\u4E00\u90E8\u5206\u9ED8\u8BA4\u7684\u7F16\u8BD1\u9009\u9879\u3002</p><h5 id="-2" tabindex="-1"><a class="header-anchor" href="#-2">#</a> \u7F16\u8BD1\u9009\u9879</h5><p>\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>compilerOptions</code> \u6765\u5B9A\u5236\u4F60\u7684\u7F16\u8BD1\u9009\u9879\uFF1A</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>

    <span class="token comment">/* \u57FA\u672C\u9009\u9879 */</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span>                       <span class="token comment">// \u6307\u5B9A ECMAScript \u76EE\u6807\u7248\u672C: &#39;ES3&#39; (default), &#39;ES5&#39;, &#39;ES6&#39;/&#39;ES2015&#39;, &#39;ES2016&#39;, &#39;ES2017&#39;, or &#39;ESNEXT&#39;</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commonjs&quot;</span><span class="token punctuation">,</span>                  <span class="token comment">// \u6307\u5B9A\u4F7F\u7528\u6A21\u5757: &#39;commonjs&#39;, &#39;amd&#39;, &#39;system&#39;, &#39;umd&#39; or &#39;es2015&#39;</span>
    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                             <span class="token comment">// \u6307\u5B9A\u8981\u5305\u542B\u5728\u7F16\u8BD1\u4E2D\u7684\u5E93\u6587\u4EF6</span>
    <span class="token property">&quot;allowJs&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                       <span class="token comment">// \u5141\u8BB8\u7F16\u8BD1 javascript \u6587\u4EF6</span>
    <span class="token property">&quot;checkJs&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                       <span class="token comment">// \u62A5\u544A javascript \u6587\u4EF6\u4E2D\u7684\u9519\u8BEF</span>
    <span class="token property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;preserve&quot;</span><span class="token punctuation">,</span>                     <span class="token comment">// \u6307\u5B9A jsx \u4EE3\u7801\u7684\u751F\u6210: &#39;preserve&#39;, &#39;react-native&#39;, or &#39;react&#39;</span>
    <span class="token property">&quot;declaration&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                   <span class="token comment">// \u751F\u6210\u76F8\u5E94\u7684 &#39;.d.ts&#39; \u6587\u4EF6</span>
    <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                     <span class="token comment">// \u751F\u6210\u76F8\u5E94\u7684 &#39;.map&#39; \u6587\u4EF6</span>
    <span class="token property">&quot;outFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>                       <span class="token comment">// \u5C06\u8F93\u51FA\u6587\u4EF6\u5408\u5E76\u4E3A\u4E00\u4E2A\u6587\u4EF6</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>                        <span class="token comment">// \u6307\u5B9A\u8F93\u51FA\u76EE\u5F55</span>
    <span class="token property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>                       <span class="token comment">// \u7528\u6765\u63A7\u5236\u8F93\u51FA\u76EE\u5F55\u7ED3\u6784 --outDir.</span>
    <span class="token property">&quot;removeComments&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token comment">// \u5220\u9664\u7F16\u8BD1\u540E\u7684\u6240\u6709\u7684\u6CE8\u91CA</span>
    <span class="token property">&quot;noEmit&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                        <span class="token comment">// \u4E0D\u751F\u6210\u8F93\u51FA\u6587\u4EF6</span>
    <span class="token property">&quot;importHelpers&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                 <span class="token comment">// \u4ECE tslib \u5BFC\u5165\u8F85\u52A9\u5DE5\u5177\u51FD\u6570</span>
    <span class="token property">&quot;isolatedModules&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>               <span class="token comment">// \u5C06\u6BCF\u4E2A\u6587\u4EF6\u4F5C\u4E3A\u5355\u72EC\u7684\u6A21\u5757 \uFF08\u4E0E &#39;ts.transpileModule&#39; \u7C7B\u4F3C\uFF09.</span>

    <span class="token comment">/* \u4E25\u683C\u7684\u7C7B\u578B\u68C0\u67E5\u9009\u9879 */</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                        <span class="token comment">// \u542F\u7528\u6240\u6709\u4E25\u683C\u7C7B\u578B\u68C0\u67E5\u9009\u9879</span>
    <span class="token property">&quot;noImplicitAny&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                 <span class="token comment">// \u5728\u8868\u8FBE\u5F0F\u548C\u58F0\u660E\u4E0A\u6709\u9690\u542B\u7684 any\u7C7B\u578B\u65F6\u62A5\u9519</span>
    <span class="token property">&quot;strictNullChecks&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>              <span class="token comment">// \u542F\u7528\u4E25\u683C\u7684 null \u68C0\u67E5</span>
    <span class="token property">&quot;noImplicitThis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token comment">// \u5F53 this \u8868\u8FBE\u5F0F\u503C\u4E3A any \u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u751F\u6210\u4E00\u4E2A\u9519\u8BEF</span>
    <span class="token property">&quot;alwaysStrict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                  <span class="token comment">// \u4EE5\u4E25\u683C\u6A21\u5F0F\u68C0\u67E5\u6BCF\u4E2A\u6A21\u5757\uFF0C\u5E76\u5728\u6BCF\u4E2A\u6587\u4EF6\u91CC\u52A0\u5165 &#39;use strict&#39;</span>

    <span class="token comment">/* \u989D\u5916\u7684\u68C0\u67E5 */</span>
    <span class="token property">&quot;noUnusedLocals&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                <span class="token comment">// \u6709\u672A\u4F7F\u7528\u7684\u53D8\u91CF\u65F6\uFF0C\u629B\u51FA\u9519\u8BEF</span>
    <span class="token property">&quot;noUnusedParameters&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token comment">// \u6709\u672A\u4F7F\u7528\u7684\u53C2\u6570\u65F6\uFF0C\u629B\u51FA\u9519\u8BEF</span>
    <span class="token property">&quot;noImplicitReturns&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>             <span class="token comment">// \u5E76\u4E0D\u662F\u6240\u6709\u51FD\u6570\u91CC\u7684\u4EE3\u7801\u90FD\u6709\u8FD4\u56DE\u503C\u65F6\uFF0C\u629B\u51FA\u9519\u8BEF</span>
    <span class="token property">&quot;noFallthroughCasesInSwitch&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// \u62A5\u544A switch \u8BED\u53E5\u7684 fallthrough \u9519\u8BEF\u3002\uFF08\u5373\uFF0C\u4E0D\u5141\u8BB8 switch \u7684 case \u8BED\u53E5\u8D2F\u7A7F\uFF09</span>

    <span class="token comment">/* \u6A21\u5757\u89E3\u6790\u9009\u9879 */</span>
    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>            <span class="token comment">// \u9009\u62E9\u6A21\u5757\u89E3\u6790\u7B56\u7565\uFF1A &#39;node&#39; (Node.js) or &#39;classic&#39; (TypeScript pre-1.6)</span>
    <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>                       <span class="token comment">// \u7528\u4E8E\u89E3\u6790\u975E\u76F8\u5BF9\u6A21\u5757\u540D\u79F0\u7684\u57FA\u76EE\u5F55</span>
    <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                           <span class="token comment">// \u6A21\u5757\u540D\u5230\u57FA\u4E8E baseUrl \u7684\u8DEF\u5F84\u6620\u5C04\u7684\u5217\u8868</span>
    <span class="token property">&quot;rootDirs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token comment">// \u6839\u6587\u4EF6\u5939\u5217\u8868\uFF0C\u5176\u7EC4\u5408\u5185\u5BB9\u8868\u793A\u9879\u76EE\u8FD0\u884C\u65F6\u7684\u7ED3\u6784\u5185\u5BB9</span>
    <span class="token property">&quot;typeRoots&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token comment">// \u5305\u542B\u7C7B\u578B\u58F0\u660E\u7684\u6587\u4EF6\u5217\u8868</span>
    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                           <span class="token comment">// \u9700\u8981\u5305\u542B\u7684\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u540D\u5217\u8868</span>
    <span class="token property">&quot;allowSyntheticDefaultImports&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// \u5141\u8BB8\u4ECE\u6CA1\u6709\u8BBE\u7F6E\u9ED8\u8BA4\u5BFC\u51FA\u7684\u6A21\u5757\u4E2D\u9ED8\u8BA4\u5BFC\u5165\u3002</span>

    <span class="token comment">/* Source Map Options */</span>
    <span class="token property">&quot;sourceRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>                    <span class="token comment">// \u6307\u5B9A\u8C03\u8BD5\u5668\u5E94\u8BE5\u627E\u5230 TypeScript \u6587\u4EF6\u800C\u4E0D\u662F\u6E90\u6587\u4EF6\u7684\u4F4D\u7F6E</span>
    <span class="token property">&quot;mapRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>                       <span class="token comment">// \u6307\u5B9A\u8C03\u8BD5\u5668\u5E94\u8BE5\u627E\u5230\u6620\u5C04\u6587\u4EF6\u800C\u4E0D\u662F\u751F\u6210\u6587\u4EF6\u7684\u4F4D\u7F6E</span>
    <span class="token property">&quot;inlineSourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>               <span class="token comment">// \u751F\u6210\u5355\u4E2A soucemaps \u6587\u4EF6\uFF0C\u800C\u4E0D\u662F\u5C06 sourcemaps \u751F\u6210\u4E0D\u540C\u7684\u6587\u4EF6</span>
    <span class="token property">&quot;inlineSources&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                 <span class="token comment">// \u5C06\u4EE3\u7801\u4E0E sourcemaps \u751F\u6210\u5230\u4E00\u4E2A\u6587\u4EF6\u4E2D\uFF0C\u8981\u6C42\u540C\u65F6\u8BBE\u7F6E\u4E86 --inlineSourceMap \u6216 --sourceMap \u5C5E\u6027</span>

    <span class="token comment">/* \u5176\u4ED6\u9009\u9879 */</span>
    <span class="token property">&quot;experimentalDecorators&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// \u542F\u7528\u88C5\u9970\u5668</span>
    <span class="token property">&quot;emitDecoratorMetadata&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>          <span class="token comment">// \u4E3A\u88C5\u9970\u5668\u63D0\u4F9B\u5143\u6570\u636E\u7684\u652F\u6301</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5173\u4E8E\u8FD9\u4E9B\uFF08\u6216\u8005\u66F4\u591A\uFF09\u7F16\u8BD1\u9009\u9879\uFF0C\u7A0D\u540E\u5C06\u4F1A\u8BA8\u8BBA\u3002</p><h5 id="typescript-1" tabindex="-1"><a class="header-anchor" href="#typescript-1">#</a> TypeScript \u7F16\u8BD1</h5><p>\u597D\u7684 IDE \u652F\u6301\u5BF9 TypeScript \u7684\u5373\u65F6\u7F16\u8BD1\u3002\u4F46\u662F\uFF0C\u5982\u679C\u4F60\u60F3\u5728\u4F7F\u7528 <code>tsconfig.json</code> \u65F6\u4ECE\u547D\u4EE4\u884C\u624B\u52A8\u8FD0\u884C TypeScript \u7F16\u8BD1\u5668\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\uFF1A</p><p>\u8FD0\u884C tsc\uFF0C\u5B83\u4F1A\u5728\u5F53\u524D\u76EE\u5F55\u6216\u8005\u662F\u7236\u7EA7\u76EE\u5F55\u5BFB\u627E <code>tsconfig.json</code> \u6587\u4EF6\u3002 \u8FD0\u884C <code>tsc -p ./path-to-project-directory</code> \u3002\u5F53\u7136\uFF0C\u8FD9\u4E2A\u8DEF\u5F84\u53EF\u4EE5\u662F\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u4E5F\u53EF\u4EE5\u662F\u76F8\u5BF9\u4E8E\u5F53\u524D\u76EE\u5F55\u7684\u76F8\u5BF9\u8DEF\u5F84\u3002 \u4F60\u751A\u81F3\u53EF\u4EE5\u4F7F\u7528 <code>tsc -w</code> \u6765\u542F\u7528 TypeScript \u7F16\u8BD1\u5668\u7684\u89C2\u6D4B\u6A21\u5F0F\uFF0C\u5728\u68C0\u6D4B\u5230\u6587\u4EF6\u6539\u52A8\u4E4B\u540E\uFF0C\u5B83\u5C06\u91CD\u65B0\u7F16\u8BD1\u3002</p><h4 id="-3" tabindex="-1"><a class="header-anchor" href="#-3">#</a> \u5236\u5B9A\u6587\u4EF6</h4><p>\u4F60\u4E5F\u53EF\u4EE5\u663E\u5F0F\u6307\u5B9A\u9700\u8981\u7F16\u8BD1\u7684\u6587\u4EF6\uFF1A</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;./some/file.ts&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F60\u8FD8\u53EF\u4EE5\u4F7F\u7528 <code>include</code> \u548C <code>exclude</code> \u9009\u9879\u6765\u6307\u5B9A\u9700\u8981\u5305\u542B\u7684\u6587\u4EF6\u548C\u6392\u9664\u7684\u6587\u4EF6\uFF1A</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;./folder&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;./folder/**/*.spec.ts&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./folder/someSubFolder&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4F7F\u7528 <code>globs</code>\uFF1A<code>**/*</code> \uFF08\u4E00\u4E2A\u793A\u4F8B\u7528\u6CD5\uFF1A<code>some/folder/**/*</code>\uFF09\u610F\u5473\u7740\u5339\u914D\u6240\u6709\u7684\u6587\u4EF6\u5939\u548C\u6240\u6709\u6587\u4EF6\uFF08\u6269\u5C55\u540D\u4E3A <code>.ts/.tsx</code>\uFF0C\u5F53\u5F00\u542F\u4E86 <code>allowJs: true</code> \u9009\u9879\u65F6\uFF0C\u6269\u5C55\u540D\u53EF\u4EE5\u662F <code>.js/.jsx</code>\uFF09\u3002</p></div><h3 id="-4" tabindex="-1"><a class="header-anchor" href="#-4">#</a> \u58F0\u660E\u7A7A\u95F4</h3><p>\u5728 TypeScript \u91CC\u5B58\u5728\u4E24\u79CD\u58F0\u660E\u7A7A\u95F4\uFF1A\u7C7B\u578B\u58F0\u660E\u7A7A\u95F4\u4E0E\u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\u3002\u4E0B\u6587\u5C06\u5206\u522B\u8BA8\u8BBA\u8FD9\u4E24\u4E2A\u6982\u5FF5\u3002</p><h4 id="-5" tabindex="-1"><a class="header-anchor" href="#-5">#</a> \u7C7B\u578B\u58F0\u660E\u7A7A\u95F4</h4><p>\u7C7B\u578B\u58F0\u660E\u7A7A\u95F4\u5305\u542B\u7528\u6765\u5F53\u505A\u7C7B\u578B\u6CE8\u89E3\u7684\u5185\u5BB9\uFF0C\u4F8B\u5982\u4E0B\u9762\u7684\u7C7B\u578B\u58F0\u660E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Bas</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4F60\u53EF\u4EE5\u5C06 <code>Foo</code>, <code>Bar</code>, <code>Bas</code> \u4F5C\u4E3A\u7C7B\u578B\u6CE8\u89E3\u4F7F\u7528\uFF0C\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Bas</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u6CE8\u610F\uFF0C\u5C3D\u7BA1\u4F60\u5B9A\u4E49\u4E86 interface Bar\uFF0C\u5374\u5E76\u4E0D\u80FD\u591F\u628A\u5B83\u4F5C\u4E3A\u4E00\u4E2A\u53D8\u91CF\u6765\u4F7F\u7528\uFF0C\u56E0\u4E3A\u5B83\u6CA1\u6709\u5B9A\u4E49\u5728\u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\u4E2D\u3002</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> Bar<span class="token punctuation">;</span> <span class="token comment">// Error: &quot;cannot find name &#39;Bar&#39;&quot;</span>
</code></pre></div><p>\u51FA\u73B0\u9519\u8BEF\u63D0\u793A\uFF1A <code>cannot find name &#39;Bar&#39;</code> \u7684\u539F\u56E0\u662F\u540D\u79F0 <code>Bar</code> \u5E76\u672A\u5B9A\u4E49\u5728\u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\u3002\u8FD9\u5C06\u5E26\u9886\u6211\u4EEC\u8FDB\u5165\u4E0B\u4E00\u4E2A\u4E3B\u9898 -- \u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\u3002</p><h4 id="-6" tabindex="-1"><a class="header-anchor" href="#-6">#</a> \u53D8\u91CF\u58F0\u660E\u7A7A\u95F4</h4><p>\u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\u5305\u542B\u53EF\u7528\u4F5C\u53D8\u91CF\u7684\u5185\u5BB9\uFF0C\u5728\u4E0A\u6587\u4E2D <code>Class Foo</code> \u63D0\u4F9B\u4E86\u4E00\u4E2A\u7C7B\u578B <code>Foo</code> \u5230\u7C7B\u578B\u58F0\u660E\u7A7A\u95F4\uFF0C\u6B64\u5916\u5B83\u540C\u6837\u63D0\u4F9B\u4E86\u4E00\u4E2A\u53D8\u91CF Foo \u5230\u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> someVar <span class="token operator">=</span> Foo<span class="token punctuation">;</span>
<span class="token keyword">const</span> someOtherVar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u5F88\u68D2\uFF0C\u5C24\u5176\u662F\u5F53\u4F60\u60F3\u628A\u4E00\u4E2A\u7C7B\u6765\u5F53\u505A\u53D8\u91CF\u4F20\u9012\u65F6\u3002</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>\u6211\u4EEC\u5E76\u4E0D\u80FD\u628A\u4E00\u4E9B\u5982 <code>interface</code> \u5B9A\u4E49\u7684\u5185\u5BB9\u5F53\u4F5C\u53D8\u91CF\u4F7F\u7528\u3002</p></div><p>\u4E0E\u6B64\u76F8\u4F3C\uFF0C\u4E00\u4E9B\u7528 <code>var</code> \u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u4E5F\u53EA\u80FD\u5728\u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\u4F7F\u7528\uFF0C\u4E0D\u80FD\u7528\u4F5C\u7C7B\u578B\u6CE8\u89E3\u3002</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> foo<span class="token punctuation">;</span> <span class="token comment">// ERROR: &quot;cannot find name &#39;foo&#39;&quot;</span>
</code></pre></div><p>\u63D0\u793A <code>ERROR: &quot;cannot find name &#39;foo&#39;&quot;</code> \u539F\u56E0\u662F\uFF0C\u540D\u79F0 foo \u6CA1\u6709\u5B9A\u4E49\u5728\u7C7B\u578B\u58F0\u660E\u7A7A\u95F4\u91CC\u3002</p><h3 id="-7" tabindex="-1"><a class="header-anchor" href="#-7">#</a> \u6A21\u5757</h3><h4 id="-8" tabindex="-1"><a class="header-anchor" href="#-8">#</a> \u5168\u5C40\u6A21\u5757</h4><p>\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5F53\u4F60\u5F00\u59CB\u5728\u4E00\u4E2A\u65B0\u7684 TypeScript \u6587\u4EF6\u4E2D\u5199\u4E0B\u4EE3\u7801\u65F6\uFF0C\u5B83\u5904\u4E8E\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u4E2D\u3002\u5982\u5728 foo.ts \u91CC\u7684\u4EE5\u4E0B\u4EE3\u7801\u3002</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u4F60\u5728\u76F8\u540C\u7684\u9879\u76EE\u91CC\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u7684\u6587\u4EF6 bar.ts\uFF0CTypeScript \u7C7B\u578B\u7CFB\u7EDF\u5C06\u4F1A\u5141\u8BB8\u4F60\u4F7F\u7528\u53D8\u91CF foo\uFF0C\u5C31\u597D\u50CF\u5B83\u5728\u5168\u5C40\u53EF\u7528\u4E00\u6837\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span> <span class="token comment">// allowed</span>
</code></pre></div><p>\u6BCB\u5EB8\u7F6E\u7591\uFF0C\u4F7F\u7528\u5168\u5C40\u53D8\u91CF\u7A7A\u95F4\u662F\u5371\u9669\u7684\uFF0C\u56E0\u4E3A\u5B83\u4F1A\u4E0E\u6587\u4EF6\u5185\u7684\u4EE3\u7801\u547D\u540D\u51B2\u7A81\u3002\u6211\u4EEC\u63A8\u8350\u4F7F\u7528\u4E0B\u6587\u4E2D\u5C06\u8981\u63D0\u5230\u7684\u6587\u4EF6\u6A21\u5757\u3002</p><h4 id="-9" tabindex="-1"><a class="header-anchor" href="#-9">#</a> \u6587\u4EF6\u6A21\u5757</h4><p>\u6587\u4EF6\u6A21\u5757\u4E5F\u88AB\u79F0\u4E3A\u5916\u90E8\u6A21\u5757\u3002\u5982\u679C\u5728\u4F60\u7684 TypeScript \u6587\u4EF6\u7684\u6839\u7EA7\u522B\u4F4D\u7F6E\u542B\u6709 <code>import</code> \u6216\u8005 <code>export</code>\uFF0C\u90A3\u4E48\u5B83\u4F1A\u5728\u8FD9\u4E2A\u6587\u4EF6\u4E2D\u521B\u5EFA\u4E00\u4E2A\u672C\u5730\u7684\u4F5C\u7528\u57DF\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u628A\u4E0A\u6587 <code>foo.ts</code> \u6539\u6210\u5982\u4E0B\u65B9\u5F0F\uFF08\u6CE8\u610F <code>export</code> \u7528\u6CD5\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u91CC\uFF0C\u6211\u4EEC\u4E0D\u518D\u6709 <code>foo</code>\uFF0C\u8FD9\u53EF\u4EE5\u901A\u8FC7\u521B\u5EFA\u4E00\u4E2A\u65B0\u6587\u4EF6 <code>bar.ts</code> \u6765\u8BC1\u660E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span> <span class="token comment">// ERROR: &quot;cannot find name &#39;foo&#39;&quot;</span>
</code></pre></div><p>\u5982\u679C\u4F60\u60F3\u5728 <code>bar.ts</code> \u91CC\u4F7F\u7528\u6765\u81EA <code>foo.ts</code> \u7684\u5185\u5BB9\uFF0C\u4F60\u5FC5\u987B\u663E\u5F0F\u5730\u5BFC\u5165\u5B83\uFF0C\u66F4\u65B0\u540E\u7684 <code>bar.ts</code> \u5982\u4E0B\u6240\u793A\u3002</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span> <span class="token comment">// allow</span>
</code></pre></div><p>\u5728 <code>bar.ts</code> \u6587\u4EF6\u91CC\u4F7F\u7528 <code>import</code> \u65F6\uFF0C\u5B83\u4E0D\u4EC5\u5141\u8BB8\u4F60\u4F7F\u7528\u4ECE\u5176\u4ED6\u6587\u4EF6\u5BFC\u5165\u7684\u5185\u5BB9\uFF0C\u8FD8\u4F1A\u5C06\u6B64\u6587\u4EF6 <code>bar.ts</code> \u6807\u8BB0\u4E3A\u4E00\u4E2A\u6A21\u5757\uFF0C\u6587\u4EF6\u5185\u5B9A\u4E49\u7684\u58F0\u660E\u4E5F\u4E0D\u4F1A\u201C\u6C61\u67D3\u201D\u5168\u5C40\u547D\u540D\u7A7A\u95F4</p><h4 id="-10" tabindex="-1"><a class="header-anchor" href="#-10">#</a> \u6587\u4EF6\u6A21\u5757\u8BE6\u60C5</h4><p>\u6587\u4EF6\u6A21\u5757\u62E5\u6709\u5F3A\u5927\u7684\u529F\u80FD\u548C\u8F83\u5F3A\u7684\u53EF\u7528\u6027\u3002\u4E0B\u9762\u6211\u4EEC\u6765\u8BA8\u8BBA\u5B83\u7684\u529F\u80FD\u53CA\u4E00\u4E9B\u7528\u6CD5\u3002</p><h5 id="commonjs-amd-esmodules-others" tabindex="-1"><a class="header-anchor" href="#commonjs-amd-esmodules-others">#</a> \u6F84\u6E05: commonjs, amd, esmodules, others</h5><p>\u9996\u5148\uFF0C\u6211\u4EEC\u9700\u8981\u6F84\u6E05\u8FD9\u4E9B\u6A21\u5757\u7CFB\u7EDF\u7684\u4E0D\u4E00\u81F4\u6027\u3002\u6211\u5C06\u4F1A\u63D0\u4F9B\u7ED9\u4F60\u6211\u5F53\u524D\u7684\u5EFA\u8BAE\uFF0C\u4EE5\u53CA\u6D88\u9664\u4E00\u4E9B\u4F60\u7684\u987E\u8651\u3002</p><p>\u4F60\u53EF\u4EE5\u6839\u636E\u4E0D\u540C\u7684 <code>module</code> \u9009\u9879\u6765\u628A TypeScript \u7F16\u8BD1\u6210\u4E0D\u540C\u7684 JavaScript \u6A21\u5757\u7C7B\u578B\uFF0C\u8FD9\u6709\u4E00\u4E9B\u4F60\u53EF\u4EE5\u5FFD\u7565\u7684\u4E1C\u897F\uFF1A</p><ul><li>AMD\uFF1A\u4E0D\u8981\u4F7F\u7528\u5B83\uFF0C\u5B83\u4EC5\u80FD\u5728\u6D4F\u89C8\u5668\u5DE5\u4F5C\uFF1B</li><li>SystemJS\uFF1A\u8FD9\u662F\u4E00\u4E2A\u597D\u7684\u5B9E\u9A8C\uFF0C\u5DF2\u7ECF\u88AB ES \u6A21\u5757\u66FF\u4EE3\uFF1B</li><li>ES \u6A21\u5757\uFF1A\u5B83\u5E76\u6CA1\u6709\u51C6\u5907\u597D\u3002</li></ul><p>\u4F7F\u7528 <code>module: commonjs</code> \u9009\u9879\u6765\u66FF\u4EE3\u8FD9\u4E9B\u6A21\u5F0F\uFF0C\u5C06\u4F1A\u662F\u4E00\u4E2A\u597D\u7684\u4E3B\u610F\u3002</p><p>\u600E\u4E48\u4E66\u5199 TypeScript \u6A21\u5757\u5462\uFF1F\uFF0C\u8FD9\u4E5F\u662F\u4E00\u4EF6\u8BA9\u4EBA\u56F0\u60D1\u7684\u4E8B\u3002\u5728\u4ECA\u5929\u6211\u4EEC\u5E94\u8BE5\u8FD9\u4E48\u505A\uFF1A</p><ul><li>\u653E\u5F03\u4F7F\u7528 <code>import/require</code> \u8BED\u6CD5\u5373 <code>import foo = require(&#39;foo&#39;)</code> \u5199\u6CD5</li><li>\u63A8\u8350\u4F7F\u7528 ES \u6A21\u5757\u8BED\u6CD5</li></ul><p>\u8FD9\u5F88\u9177\uFF0C\u63A5\u4E0B\u6765\uFF0C\u8BA9\u6211\u4EEC\u770B\u770B ES \u6A21\u5757\u8BED\u6CD5\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4F7F\u7528 <code>module: commonjs</code> \u9009\u9879\u4EE5\u53CA\u4F7F\u7528 ES \u6A21\u5757\u8BED\u6CD5\u5BFC\u5165\u3001\u5BFC\u51FA\u3001\u7F16\u5199\u6A21\u5757\u3002</p></div><h5 id="es" tabindex="-1"><a class="header-anchor" href="#es">#</a> ES \u6A21\u5757\u8BED\u6CD5</h5><ul><li>\u4F7F\u7528 <code>export</code> \u5173\u952E\u5B57\u5BFC\u51FA\u4E00\u4E2A\u53D8\u91CF\u6216\u7C7B\u578B</li></ul><div class="language-ts"><pre><code><span class="token comment">// foo.ts</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> someVar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">someType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><code>export</code> \u7684\u5199\u6CD5\u9664\u4E86\u4E0A\u9762\u8FD9\u79CD\uFF0C\u8FD8\u6709\u53E6\u5916\u4E00\u79CD\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token comment">// foo.ts</span>
<span class="token keyword">const</span> someVar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">someType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> someVar<span class="token punctuation">,</span> someType <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>\u4F60\u4E5F\u53EF\u4EE5\u7528\u91CD\u547D\u540D\u53D8\u91CF\u7684\u65B9\u5F0F\u5BFC\u51FA\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token comment">// foo.ts</span>
<span class="token keyword">const</span> someVar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> someVar <span class="token keyword">as</span> aDifferentName <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>\u4F7F\u7528 <code>import</code> \u5173\u952E\u5B57\u5BFC\u5165\u4E00\u4E2A\u53D8\u91CF\u6216\u8005\u662F\u4E00\u4E2A\u7C7B\u578B\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token comment">// bar.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> someVar<span class="token punctuation">,</span> someType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>\u901A\u8FC7\u91CD\u547D\u540D\u7684\u65B9\u5F0F\u5BFC\u5165\u53D8\u91CF\u6216\u8005\u7C7B\u578B\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token comment">// bar.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> someVar <span class="token keyword">as</span> aDifferentName <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>\u9664\u4E86\u6307\u5B9A\u52A0\u8F7D\u67D0\u4E2A\u8F93\u51FA\u503C\uFF0C\u8FD8\u53EF\u4EE5\u4F7F\u7528\u6574\u4F53\u52A0\u8F7D\uFF0C\u5373\u7528\u661F\u53F7\uFF08*\uFF09\u6307\u5B9A\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6240\u6709\u8F93\u51FA\u503C\u90FD\u52A0\u8F7D\u5728\u8FD9\u4E2A\u5BF9\u8C61\u4E0A\u9762\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token comment">// bar.ts</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> foo <span class="token keyword">from</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// \u4F60\u53EF\u4EE5\u4F7F\u7528 \`foo.someVar\` \u548C \`foo.someType\` \u4EE5\u53CA\u5176\u4ED6\u4EFB\u4F55\u4ECE \`foo\` \u5BFC\u51FA\u7684\u53D8\u91CF\u6216\u8005\u7C7B\u578B</span>
</code></pre></div><ul><li>\u53EA\u5BFC\u5165\u6A21\u5757\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;core-js&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u4E00\u4E2A\u666E\u901A\u7684 polyfill \u5E93</span>
</code></pre></div><ul><li>\u4ECE\u5176\u4ED6\u6A21\u5757\u5BFC\u5165\u540E\u6574\u4F53\u5BFC\u51FA\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>\u4ECE\u5176\u4ED6\u6A21\u5757\u5BFC\u5165\u540E\uFF0C\u90E8\u5206\u5BFC\u51FA\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token punctuation">{</span> someVar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>\u901A\u8FC7\u91CD\u547D\u540D\uFF0C\u90E8\u5206\u5BFC\u51FA\u4ECE\u53E6\u4E00\u4E2A\u6A21\u5757\u5BFC\u5165\u7684\u9879\u76EE\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token punctuation">{</span> someVar <span class="token keyword">as</span> aDifferentName <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h6 id="-11" tabindex="-1"><a class="header-anchor" href="#-11">#</a> \u9ED8\u8BA4\u5BFC\u5165\uFF0F\u5BFC\u51FA</h6><p>\u6211\u5E76\u4E0D\u559C\u6B22\u7528\u9ED8\u8BA4\u5BFC\u51FA\uFF0C\u867D\u7136\u6709\u9ED8\u8BA4\u5BFC\u51FA\u7684\u8BED\u6CD5\uFF1A</p><ul><li>\u4F7F\u7528 export default <ul><li>\u5728\u4E00\u4E2A\u53D8\u91CF\u4E4B\u524D\uFF08\u4E0D\u9700\u8981\u4F7F\u7528 let/const/var\uFF09\uFF1B</li><li>\u5728\u4E00\u4E2A\u51FD\u6570\u4E4B\u524D\uFF1B</li><li>\u5728\u4E00\u4E2A\u7C7B\u4E4B\u524D\u3002</li></ul></li></ul><div class="language-ts"><pre><code><span class="token comment">// some var</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>someVar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// some function</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">someFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// some class</span>
<span class="token class-name"><span class="token keyword">export</span></span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">someClass</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><ul><li>\u5BFC\u5165\u4F7F\u7528 <code>import someName from &#39;someModule&#39;</code> \u8BED\u6CD5\uFF08\u4F60\u53EF\u4EE5\u6839\u636E\u9700\u8981\u4E3A\u5BFC\u5165\u547D\u540D\uFF09\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token keyword">import</span> someLocalNameForThisFile <span class="token keyword">from</span> <span class="token string">&#39;./foo&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h5 id="-12" tabindex="-1"><a class="header-anchor" href="#-12">#</a> \u6A21\u5757\u8DEF\u5F84</h5><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u5982\u679C\u4F60\u9700\u8981\u4F7F\u7528 <code>moduleResolution: node</code> \u9009\u9879\uFF0C\u4F60\u5E94\u8BE5\u5C06\u6B64\u9009\u9879\u653E\u5165\u4F60\u7684\u914D\u7F6E\u6587\u4EF6\u4E2D\u3002\u5982\u679C\u4F60\u4F7F\u7528\u4E86 <code>module: commonjs</code> \u9009\u9879\uFF0C <code>moduleResolution: node</code> \u5C06\u4F1A\u9ED8\u8BA4\u5F00\u542F\u3002</p></div><p>\u8FD9\u91CC\u5B58\u5728\u4E24\u79CD\u622A\u7136\u4E0D\u540C\u7684\u6A21\u5757\uFF1A</p><ul><li>\u76F8\u5BF9\u6A21\u5757\u8DEF\u5F84\uFF08\u8DEF\u5F84\u4EE5 <code>.</code> \u5F00\u5934\uFF0C\u4F8B\u5982\uFF1A<code>./someFile</code> \u6216\u8005 <code>../../someFolder/someFile</code> \u7B49\uFF09\uFF1B</li><li>\u5176\u4ED6\u52A8\u6001\u67E5\u627E\u6A21\u5757\uFF08\u5982\uFF1A<code>core-js</code>\uFF0C<code>typestyle</code>\uFF0C<code>react</code> \u6216\u8005\u751A\u81F3\u662F <code>react/core</code> \u7B49\uFF09\u3002</li></ul><p>\u5B83\u4EEC\u7684\u4E3B\u8981\u533A\u522B\u5728\u4E8E\u7CFB\u7EDF\u5982\u4F55\u89E3\u6790\u6A21\u5757\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u6211\u5C06\u4F1A\u4F7F\u7528\u4E00\u4E2A\u6982\u5FF5\u6027\u672F\u8BED\uFF0C<code>place</code> -- \u5C06\u5728\u63D0\u53CA\u67E5\u627E\u6A21\u5F0F\u540E\u89E3\u91CA\u5B83\u3002</p></div><h6 id="-13" tabindex="-1"><a class="header-anchor" href="#-13">#</a> \u76F8\u5BF9\u6A21\u5757\u8DEF\u5F84</h6><p>\u8FD9\u5F88\u7B80\u5355\uFF0C\u4EC5\u4EC5\u662F\u6309\u7167\u76F8\u5BF9\u8DEF\u5F84\u6765\u5C31\u53EF\u4EE5\u4E86\uFF1A</p><ul><li>\u5982\u679C\u6587\u4EF6 <code>bar.ts</code> \u4E2D\u542B\u6709 <code>import * as foo from &#39;./foo&#39;</code>\uFF0C\u90A3\u4E48 <code>foo</code> \u6587\u4EF6\u5FC5\u987B\u4E0E <code>bar.ts</code> \u6587\u4EF6\u5B58\u5728\u4E8E\u76F8\u540C\u7684\u6587\u4EF6\u5939\u4E0B</li><li>\u5982\u679C\u6587\u4EF6 <code>bar.ts</code> \u4E2D\u542B\u6709 <code>import * as foo from &#39;../foo&#39;</code>\uFF0C\u90A3\u4E48 <code>foo</code> \u6587\u4EF6\u6240\u5B58\u5728\u7684\u5730\u65B9\u5FC5\u987B\u662F <code>bar.ts</code> \u7684\u4E0A\u4E00\u7EA7\u76EE\u5F55\uFF1B</li><li>\u5982\u679C\u6587\u4EF6 <code>bar.ts</code> \u4E2D\u542B\u6709 <code>import * as foo from &#39;../someFolder/foo&#39;</code>\uFF0C\u90A3\u4E48 <code>foo</code> \u6587\u4EF6\u6240\u5728\u7684\u6587\u4EF6\u5939 someFolder \u5FC5\u987B\u4E0E <code>bar.ts</code> \u6587\u4EF6\u6240\u5728\u6587\u4EF6\u5939\u5728\u76F8\u540C\u7684\u76EE\u5F55\u4E0B\u3002</li></ul><p>\u4F60\u8FD8\u53EF\u4EE5\u601D\u8003\u4E00\u4E0B\u5176\u4ED6\u76F8\u5BF9\u8DEF\u5F84\u5BFC\u5165\u7684\u573A\u666F\u3002\u{1F603}</p><h6 id="-14" tabindex="-1"><a class="header-anchor" href="#-14">#</a> \u52A8\u6001\u67E5\u627E</h6><p>\u5F53\u5BFC\u5165\u8DEF\u5F84\u4E0D\u662F\u76F8\u5BF9\u8DEF\u5F84\u65F6\uFF0C\u6A21\u5757\u89E3\u6790\u5C06\u4F1A\u6A21\u4EFF <a href="https://nodejs.org/api/modules.html#modules_all_together" target="_blank" rel="noopener noreferrer">Node \u6A21\u5757\u89E3\u6790\u7B56\u7565</a>\uFF0C\u4E0B\u9762\u6211\u5C06\u7ED9\u51FA\u4E00\u4E2A\u7B80\u5355\u4F8B\u5B50\uFF1A</p><ul><li>\u5F53\u4F60\u4F7F\u7528 <code>import * as foo from &#39;foo&#39;</code>\uFF0C\u5C06\u4F1A\u6309\u5982\u4E0B\u987A\u5E8F\u67E5\u627E\u6A21\u5757\uFF1A <ul><li><code>./node_modules/foo</code></li><li><code>../node_modules/foo</code></li><li><code>../../node_modules/foo</code></li><li>\u76F4\u5230\u7CFB\u7EDF\u7684\u6839\u76EE\u5F55</li></ul></li><li>\u5F53\u4F60\u4F7F\u7528 <code>import * as foo from &#39;something/foo&#39;</code>\uFF0C\u5C06\u4F1A\u6309\u7167\u5982\u4E0B\u987A\u5E8F\u67E5\u627E\u5185\u5BB9 <ul><li><code>./node_modules/something/foo</code></li><li><code>../node_modules/something/foo</code></li><li><code>../../node_modules/something/foo</code></li><li>\u76F4\u5230\u7CFB\u7EDF\u7684\u6839\u76EE\u5F55</li></ul></li></ul><h5 id="place" tabindex="-1"><a class="header-anchor" href="#place">#</a> \u4EC0\u4E48\u662F <code>place</code></h5><p>\u5F53\u6211\u63D0\u53CA\u88AB\u68C0\u67E5\u7684 <code>place</code> \u65F6\uFF0C\u6211\u60F3\u8868\u8FBE\u7684\u662F\u5728\u8FD9\u4E2A <code>place</code> \u4E0A\uFF0CTypeScript \u5C06\u4F1A\u68C0\u67E5\u4EE5\u4E0B\u5185\u5BB9\uFF08\u4F8B\u5982\u4E00\u4E2A <code>foo</code> \u7684 <code>place</code>\uFF09\uFF1A</p><ul><li>\u5982\u679C\u8FD9\u4E2A <code>place</code> \u8868\u793A\u4E00\u4E2A\u6587\u4EF6\uFF0C\u5982\uFF1A<code>foo.ts</code>\uFF0C\u6B22\u547C\uFF01</li><li>\u5426\u5219\uFF0C\u5982\u679C\u8FD9\u4E2A <code>place</code> \u662F\u4E00\u4E2A\u6587\u4EF6\u5939\uFF0C\u5E76\u4E14\u5B58\u5728\u4E00\u4E2A\u6587\u4EF6 <code>foo/index.ts</code>\uFF0C\u6B22\u547C\uFF01</li><li>\u5426\u5219\uFF0C\u5982\u679C\u8FD9\u4E2A <code>place</code> \u662F\u4E00\u4E2A\u6587\u4EF6\u5939\uFF0C\u5E76\u4E14\u5B58\u5728\u4E00\u4E2A <code>foo/package.json</code> \u6587\u4EF6\uFF0C\u5728\u8BE5\u6587\u4EF6\u4E2D\u6307\u5B9A <code>types</code> \u7684\u6587\u4EF6\u5B58\u5728\uFF0C\u90A3\u4E48\u5C31\u6B22\u547C\uFF01</li><li>\u5426\u5219\uFF0C\u5982\u679C\u8FD9\u4E2A <code>place</code> \u662F\u4E00\u4E2A\u6587\u4EF6\u5939\uFF0C\u5E76\u4E14\u5B58\u5728\u4E00\u4E2A <code>package.json</code> \u6587\u4EF6\uFF0C\u5728\u8BE5\u6587\u4EF6\u4E2D\u6307\u5B9A <code>main</code> \u7684\u6587\u4EF6\u5B58\u5728\uFF0C\u90A3\u4E48\u5C31\u6B22\u547C\uFF01</li></ul><p>\u4ECE\u6587\u4EF6\u7C7B\u578B\u4E0A\u6765\u8BF4\uFF0C\u6211\u5B9E\u9645\u4E0A\u662F\u6307 <code>.ts</code>\uFF0C <code>.d.ts</code> \u6216\u8005 <code>.js</code></p><p>\u5C31\u662F\u8FD9\u6837\uFF0C\u73B0\u5728\u4F60\u5DF2\u7ECF\u662F\u4E00\u4E2A\u6A21\u5757\u67E5\u627E\u4E13\u5BB6\uFF08\u8FD9\u5E76\u4E0D\u662F\u4E00\u4E2A\u5C0F\u5C0F\u7684\u6210\u529F\uFF09\u3002</p><h5 id="-15" tabindex="-1"><a class="header-anchor" href="#-15">#</a> \u91CD\u5199\u7C7B\u578B\u7684\u52A8\u6001\u67E5\u627E</h5><p>\u5728\u4F60\u7684\u9879\u76EE\u91CC\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>declare module &#39;somePath&#39;</code> \u58F0\u660E\u4E00\u4E2A\u5168\u5C40\u6A21\u5757\u7684\u65B9\u5F0F\uFF0C\u6765\u89E3\u51B3\u67E5\u627E\u6A21\u5757\u8DEF\u5F84\u7684\u95EE\u9898\u3002</p><div class="language-ts"><pre><code><span class="token comment">// global.d.ts</span>
<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">{</span>
  <span class="token comment">// some variable declarations</span>
  <span class="token keyword">export</span> <span class="token keyword">var</span> bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u63A5\u7740 \uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// anyOtherTsFileInYourProject.ts</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> foo <span class="token keyword">from</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// TypeScript \u5C06\u5047\u8BBE\uFF08\u5728\u6CA1\u6709\u505A\u5176\u4ED6\u67E5\u627E\u7684\u60C5\u51B5\u4E0B\uFF09</span>
<span class="token comment">// foo \u662F { bar: number }</span>
</code></pre></div><h5 id="importrequire" tabindex="-1"><a class="header-anchor" href="#importrequire">#</a> import/require \u4EC5\u4EC5\u662F\u5BFC\u5165\u7C7B\u578B</h5><p>\u4EE5\u4E0B\u5BFC\u5165\u8BED\u6CD5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5B83\u5B9E\u9645\u4E0A\u53EA\u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1A</p><ul><li>\u5BFC\u5165 foo \u6A21\u5757\u7684\u6240\u6709\u7C7B\u578B\u4FE1\u606F\uFF1B</li><li>\u786E\u5B9A foo \u6A21\u5757\u8FD0\u884C\u65F6\u7684\u4F9D\u8D56\u5173\u7CFB\u3002</li></ul><p>\u4F60\u53EF\u4EE5\u9009\u62E9\u4EC5\u52A0\u8F7D\u7C7B\u578B\u4FE1\u606F\uFF0C\u800C\u6CA1\u6709\u8FD0\u884C\u65F6\u7684\u4F9D\u8D56\u5173\u7CFB\u3002\u5728\u7EE7\u7EED\u4E4B\u524D\uFF0C\u4F60\u53EF\u80FD\u9700\u8981\u91CD\u65B0\u9605\u8BFB\u672C\u4E66 <a href="#%E5%A3%B0%E6%98%8E%E7%A9%BA%E9%97%B4">\u58F0\u660E\u7A7A\u95F4\u90E8\u5206</a>\u3002</p><p>\u5982\u679C\u4F60\u6CA1\u6709\u628A\u5BFC\u5165\u7684\u540D\u79F0\u5F53\u505A\u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\u6765\u7528\uFF0C\u5728\u7F16\u8BD1\u6210 JavaScript \u65F6\uFF0C\u5BFC\u5165\u7684\u6A21\u5757\u5C06\u4F1A\u88AB\u5B8C\u5168\u79FB\u9664\u3002\u8FD9\u6700\u597D\u7528\u4F8B\u5B50\u6765\u89E3\u91CA\uFF0C\u4E0B\u9762\u6211\u4EEC\u5C06\u4F1A\u7ED9\u51FA\u4E00\u4E9B\u793A\u4F8B\u3002</p><h6 id="1" tabindex="-1"><a class="header-anchor" href="#1">#</a> \u4F8B\u5B50 1</h6><div class="language-ts"><pre><code><span class="token keyword">import</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5C06\u4F1A\u7F16\u8BD1\u6210 JavaScript\uFF1A</p><div class="language-js"><pre><code></code></pre></div><p>\u8FD9\u662F\u6B63\u786E\u7684\uFF0C\u4E00\u4E2A\u6CA1\u6709\u88AB\u4F7F\u7528\u7684\u7A7A\u6587\u4EF6\u3002</p><h6 id="2" tabindex="-1"><a class="header-anchor" href="#2">#</a> \u4F8B\u5B50 2</h6><div class="language-ts"><pre><code><span class="token keyword">import</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> bar<span class="token operator">:</span> foo<span class="token punctuation">;</span>
</code></pre></div><p>\u5C06\u4F1A\u88AB\u7F16\u8BD1\u6210\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">let</span> bar<span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u662F\u56E0\u4E3A foo \uFF08\u6216\u8005\u5176\u4ED6\u4EFB\u4F55\u5C5E\u6027\u5982\uFF1A<code>foo.bas</code>\uFF09\u6CA1\u6709\u88AB\u5F53\u505A\u4E00\u4E2A\u53D8\u91CF\u4F7F\u7528\u3002</p><h6 id="3" tabindex="-1"><a class="header-anchor" href="#3">#</a> \u4F8B\u5B50 3</h6><div class="language-ts"><pre><code><span class="token keyword">import</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span>
</code></pre></div><p>\u5C06\u4F1A\u88AB\u7F16\u8BD1\u6210\uFF08\u5047\u8BBE\u662F commonjs\uFF09\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u662F\u56E0\u4E3A <code>foo</code> \u88AB\u5F53\u505A\u53D8\u91CF\u4F7F\u7528\u4E86\u3002</p><h6 id="-16" tabindex="-1"><a class="header-anchor" href="#-16">#</a> \u4F7F\u7528\u4F8B\u5B50\uFF1A\u61D2\u52A0\u8F7D</h6><p>\u7C7B\u578B\u63A8\u65AD\u9700\u8981\u63D0\u524D\u5B8C\u6210\uFF0C\u8FD9\u610F\u5473\u7740\uFF0C\u5982\u679C\u4F60\u60F3\u5728 <code>bar</code> \u6587\u4EF6\u91CC\uFF0C\u4F7F\u7528\u4ECE\u5176\u4ED6\u6587\u4EF6 <code>foo</code> \u5BFC\u51FA\u7684\u7C7B\u578B\uFF0C\u4F60\u5C06\u4E0D\u5F97\u4E0D\u8FD9\u4E48\u505A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> foo<span class="token punctuation">.</span>SomeType<span class="token punctuation">;</span>
</code></pre></div><p>\u7136\u800C\uFF0C\u5728\u67D0\u4E9B\u60C5\u666F\u4E0B\uFF0C\u4F60\u53EA\u60F3\u5728\u9700\u8981\u65F6\u52A0\u8F7D\u6A21\u5757 <code>foo</code>\uFF0C\u6B64\u65F6\u4F60\u9700\u8981\u4EC5\u5728\u7C7B\u578B\u6CE8\u89E3\u4E2D\u4F7F\u7528\u5BFC\u5165\u7684\u6A21\u5757\u540D\u79F0\uFF0C\u800C<strong>\u4E0D</strong>\u662F\u5728\u53D8\u91CF\u4E2D\u4F7F\u7528\u3002\u5728\u7F16\u8BD1\u6210 JavaScript \u65F6\uFF0C\u8FD9\u4E9B\u5C06\u4F1A\u88AB\u79FB\u9664\u3002\u63A5\u7740\uFF0C\u4F60\u53EF\u4EE5\u624B\u52A8\u5BFC\u5165\u4F60\u9700\u8981\u7684\u6A21\u5757\u3002</p><p>\u4F5C\u4E3A\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u8003\u8651\u4EE5\u4E0B\u57FA\u4E8E <code>commonjs</code> \u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u4EC5\u5728\u4E00\u4E2A\u51FD\u6570\u5185\u5BFC\u5165 <code>foo</code> \u6A21\u5757\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">loadFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u662F\u61D2\u52A0\u8F7D foo\uFF0C\u539F\u59CB\u7684\u52A0\u8F7D\u4EC5\u4EC5\u7528\u6765\u505A\u7C7B\u578B\u6CE8\u89E3</span>
  <span class="token keyword">const</span> _foo<span class="token operator">:</span> <span class="token keyword">typeof</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u73B0\u5728\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 \`_foo\` \u66FF\u4EE3 \`foo\` \u6765\u4F5C\u4E3A\u4E00\u4E2A\u53D8\u91CF\u4F7F\u7528</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E00\u4E2A\u540C\u6837\u7B80\u5355\u7684 <code>amd</code> \u6A21\u5757\uFF08\u4F7F\u7528 requirejs\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">loadFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u662F\u61D2\u52A0\u8F7D foo\uFF0C\u539F\u59CB\u7684\u52A0\u8F7D\u4EC5\u4EC5\u7528\u6765\u505A\u7C7B\u578B\u6CE8\u89E3</span>
  <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>_foo<span class="token operator">:</span> <span class="token keyword">typeof</span> foo<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u73B0\u5728\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 \`_foo\` \u66FF\u4EE3 \`foo\` \u6765\u4F5C\u4E3A\u4E00\u4E2A\u53D8\u91CF\u4F7F\u7528</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u4E9B\u901A\u5E38\u5728\u4EE5\u4E0B\u60C5\u666F\u4F7F\u7528\uFF1A</p><ul><li>\u5728 web app \u91CC\uFF0C \u5F53\u4F60\u5728\u7279\u5B9A\u8DEF\u7531\u4E0A\u52A0\u8F7D JavaScript \u65F6\uFF1B</li><li>\u5728 node \u5E94\u7528\u91CC\uFF0C\u5F53\u4F60\u53EA\u60F3\u52A0\u8F7D\u7279\u5B9A\u6A21\u5757\uFF0C\u7528\u6765\u52A0\u5FEB\u542F\u52A8\u901F\u5EA6\u65F6\u3002</li></ul><h6 id="-17" tabindex="-1"><a class="header-anchor" href="#-17">#</a> \u4F7F\u7528\u4F8B\u5B50\uFF1A\u6253\u7834\u5FAA\u73AF\u4F9D\u8D56</h6><p>\u7C7B\u4F3C\u4E8E\u61D2\u52A0\u8F7D\u7684\u4F7F\u7528\u7528\u4F8B\uFF0C\u67D0\u4E9B\u6A21\u5757\u52A0\u8F7D\u5668\uFF08commonjs/node \u548C amd/requirejs\uFF09\u4E0D\u80FD\u5F88\u597D\u7684\u5904\u7406\u5FAA\u73AF\u4F9D\u8D56\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4E00\u65B9\u9762\u6211\u4EEC\u4F7F\u7528\u5EF6\u8FDF\u52A0\u8F7D\u4EE3\u7801\uFF0C\u5E76\u5728\u53E6\u4E00\u65B9\u9762\u9884\u5148\u52A0\u8F7D\u6A21\u5757\u662F\u5F88\u5B9E\u7528\u7684\u3002</p><h6 id="-18" tabindex="-1"><a class="header-anchor" href="#-18">#</a> \u4F7F\u7528\u4F8B\u5B50\uFF1A\u786E\u4FDD\u5BFC\u5165</h6><p>\u5F53\u4F60\u52A0\u8F7D\u4E00\u4E2A\u6A21\u5757\uFF0C\u53EA\u662F\u60F3\u5F15\u5165\u5176\u9644\u52A0\u7684\u4F5C\u7528\uFF08\u5982\uFF1A\u6A21\u5757\u53EF\u80FD\u4F1A\u6CE8\u518C\u4E00\u4E9B\u50CF <a href="https://codemirror.net/doc/manual.html#addons" target="_blank" rel="noopener noreferrer">CodeMirror addons</a>\uFF09\u65F6\uFF0C\u7136\u800C\uFF0C\u5982\u679C\u4F60\u4EC5\u4EC5\u662F <code>import/require</code> \uFF08\u5BFC\u5165\uFF09\u4E00\u4E9B\u5E76\u6CA1\u6709\u4E0E\u4F60\u7684\u6A21\u5757\u6216\u8005\u6A21\u5757\u52A0\u8F7D\u5668\u6709\u4EFB\u4F55\u4F9D\u8D56\u7684 JavaScript \u4EE3\u7801\uFF0C\uFF08\u5982\uFF1Awebpack\uFF09\uFF0C\u7ECF\u8FC7 TypeScript \u7F16\u8BD1\u540E\uFF0C\u8FD9\u4E9B\u5C06\u4F1A\u88AB\u5B8C\u5168\u5FFD\u89C6\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A <code>ensureImport</code> \u53D8\u91CF\uFF0C\u6765\u786E\u4FDD\u7F16\u8BD1\u7684 JavaScript \u4F9D\u8D56\u4E0E\u6A21\u5757\u3002\u5982\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> foo <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> bar <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> bas <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./bas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> ensureImport<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> foo <span class="token operator">||</span> bar <span class="token operator">||</span> bas<span class="token punctuation">;</span>
</code></pre></div><h4 id="globaldts" tabindex="-1"><a class="header-anchor" href="#globaldts">#</a> global.d.ts</h4><p>\u5728\u4E0A\u6587\u4E2D\uFF0C\u5F53\u6211\u4EEC\u8BA8\u8BBA\u6587\u4EF6\u6A21\u5757\u65F6\uFF0C\u6BD4\u8F83\u4E86\u5168\u5C40\u53D8\u91CF\u4E0E\u6587\u4EF6\u6A21\u5757\uFF0C\u5E76\u4E14\u6211\u4EEC\u63A8\u8350\u4F7F\u7528\u57FA\u4E8E\u6587\u4EF6\u7684\u6A21\u5757\uFF0C\u800C\u4E0D\u662F\u9009\u62E9\u6C61\u67D3\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u3002</p><p>\u7136\u800C\uFF0C\u5982\u679C\u4F60\u7684\u56E2\u961F\u91CC\u6709 TypeScript \u521D\u5B66\u8005\uFF0C\u4F60\u53EF\u4EE5\u63D0\u4F9B\u4ED6\u4EEC\u4E00\u4E2A <code>global.d.ts</code> \u6587\u4EF6\uFF0C\u7528\u6765\u5C06\u4E00\u4E9B\u63A5\u53E3\u6216\u8005\u7C7B\u578B\u653E\u5165\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u91CC\uFF0C\u8FD9\u4E9B\u5B9A\u4E49\u7684\u63A5\u53E3\u548C\u7C7B\u578B\u80FD\u5728\u4F60\u7684\u6240\u6709 TypeScript \u4EE3\u7801\u91CC\u4F7F\u7528\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u5BF9\u4E8E\u4EFB\u4F55\u9700\u8981\u7F16\u8BD1\u6210 <code>JavaScript</code> \u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u5F3A\u70C8\u5EFA\u8BAE\u4F60\u653E\u5165\u6587\u4EF6\u6A21\u5757\u91CC\u3002</p></div><ul><li><code>global.d.ts</code> \u662F\u4E00\u79CD\u6269\u5145 <code>lib.d.ts</code> \u5F88\u597D\u7684\u65B9\u5F0F\uFF0C\u5982\u679C\u4F60\u9700\u8981\u7684\u8BDD\u3002</li><li>\u5F53\u4F60\u4ECE <code>JS</code> \u8FC1\u79FB\u5230 <code>TS</code> \u65F6\uFF0C\u5B9A\u4E49 <code>declare module &quot;some-library-you-dont-care-to-get-defs-for&quot;</code> \u80FD\u8BA9\u4F60\u5FEB\u901F\u5F00\u59CB\u3002</li></ul><h3 id="-19" tabindex="-1"><a class="header-anchor" href="#-19">#</a> \u547D\u540D\u7A7A\u95F4</h3><p>\u5728 JavaScript \u4F7F\u7528\u547D\u540D\u7A7A\u95F4\u65F6\uFF0C \u8FD9\u6709\u4E00\u4E2A\u5E38\u7528\u7684\u3001\u65B9\u4FBF\u7684\u8BED\u6CD5\uFF1A</p><div class="language-js"><pre><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">something</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  something<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>something <span class="token operator">||</span> <span class="token punctuation">(</span>something <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>something || (something = {})</code> \u5141\u8BB8\u533F\u540D\u51FD\u6570 <code>function (something) {}</code> \u5411\u73B0\u6709\u5BF9\u8C61\u6DFB\u52A0\u5185\u5BB9\uFF0C\u6216\u8005\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u7136\u540E\u5411\u8BE5\u5BF9\u8C61\u6DFB\u52A0\u5185\u5BB9\u3002\u8FD9\u610F\u5473\u7740\u4F60\u53EF\u4EE5\u62E5\u6709\u4E24\u4E2A\u7531\u67D0\u4E9B\u8FB9\u754C\u62C6\u6210\u7684\u5757\u3002</p><div class="language-js"><pre><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">something</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  something<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>something <span class="token operator">||</span> <span class="token punctuation">(</span>something <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>something<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { foo: 123 }</span>

<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">something</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  something<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>something <span class="token operator">||</span> <span class="token punctuation">(</span>something <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>something<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { foo: 123, bar: 456 }</span>
</code></pre></div><p>\u5728\u786E\u4FDD\u521B\u5EFA\u7684\u53D8\u91CF\u4E0D\u4F1A\u6CC4\u6F0F\u81F3\u5168\u5C40\u547D\u540D\u7A7A\u95F4\u65F6\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u5728 JavaScript \u4E2D\u5F88\u5E38\u89C1\u3002\u5F53\u57FA\u4E8E\u6587\u4EF6\u6A21\u5757\u4F7F\u7528\u65F6\uFF0C\u4F60\u65E0\u987B\u62C5\u5FC3\u8FD9\u70B9\uFF0C\u4F46\u662F\u8BE5\u6A21\u5F0F\u4ECD\u7136\u9002\u7528\u4E8E\u4E00\u7EC4\u51FD\u6570\u7684\u903B\u8F91\u5206\u7EC4\u3002\u56E0\u6B64 TypeScript \u63D0\u4F9B\u4E86 <code>namespace</code> \u5173\u952E\u5B57\u6765\u63CF\u8FF0\u8FD9\u79CD\u5206\u7EC4\uFF0C\u5982\u4E0B\u6240\u793A\u3002</p><div class="language-ts"><pre><code><span class="token keyword">namespace</span> Utility <span class="token punctuation">{</span>
  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// usage</span>
Utility<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Call me&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Utility<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;maybe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>namespace</code> \u5173\u952E\u5B57\u7F16\u8BD1\u540E\u7684 JavaScript \u4EE3\u7801\uFF0C\u4E0E\u6211\u4EEC\u65E9\u4E9B\u65F6\u5019\u770B\u5230\u7684 JavaScript \u4EE3\u7801\u4E00\u6837\u3002</p><div class="language-js"><pre><code><span class="token keyword">var</span> Utility<span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Utility</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6DFB\u52A0\u5C5E\u6027\u81F3 Utility</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Utility <span class="token operator">||</span> Utility <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u503C\u5F97\u6CE8\u610F\u7684\u4E00\u70B9\u662F\uFF0C\u547D\u540D\u7A7A\u95F4\u662F\u652F\u6301\u5D4C\u5957\u7684\u3002\u56E0\u6B64\uFF0C\u4F60\u53EF\u4EE5\u505A\u4E00\u4E9B\u7C7B\u4F3C\u4E8E\u5728 <code>Utility</code> \u547D\u540D\u7A7A\u95F4\u4E0B\u5D4C\u5957\u4E00\u4E2A\u547D\u540D\u7A7A\u95F4 <code>Messaging</code> \u7684\u4E8B\u60C5\u3002</p><p>\u5BF9\u4E8E\u5927\u591A\u6570\u9879\u76EE\uFF0C\u6211\u4EEC\u5EFA\u8BAE\u4F7F\u7528\u5916\u90E8\u6A21\u5757\u548C\u547D\u540D\u7A7A\u95F4\uFF0C\u6765\u5FEB\u901F\u6F14\u793A\u548C\u79FB\u690D\u65E7\u7684 JavaScript \u4EE3\u7801\u3002</p><h3 id="-20" tabindex="-1"><a class="header-anchor" href="#-20">#</a> \u52A8\u6001\u5BFC\u5165\u8868\u8FBE\u5F0F</h3><p>\u52A8\u6001\u5BFC\u5165\u8868\u8FBE\u5F0F\u662F ECMAScript \u7684\u4E00\u4E2A\u65B0\u529F\u80FD\uFF0C\u5B83\u5141\u8BB8\u4F60\u5728\u7A0B\u5E8F\u7684\u4EFB\u610F\u4F4D\u7F6E\u5F02\u6B65\u52A0\u8F7D\u4E00\u4E2A\u6A21\u5757\uFF0CTC39 JavaScript \u59D4\u5458\u4F1A\u6709\u4E00\u4E2A\u63D0\u6848\uFF0C\u76EE\u524D\u5904\u4E8E\u7B2C\u56DB\u9636\u6BB5\uFF0C\u5B83\u88AB\u79F0\u4E3A <a href="https://github.com/tc39/proposal-dynamic-import" target="_blank" rel="noopener noreferrer">import() proposal for JavaScript</a>\u3002</p><p>\u6B64\u5916\uFF0C<strong>webpack</strong> bundler \u6709\u4E00\u4E2A <code>Code Splitting</code> \u529F\u80FD\uFF0C\u5B83\u80FD\u5141\u8BB8\u4F60\u5C06\u4EE3\u7801\u62C6\u5206\u4E3A\u8BB8\u591A\u5757\uFF0C\u8FD9\u4E9B\u5757\u5728\u5C06\u6765\u53EF\u88AB\u5F02\u6B65\u4E0B\u8F7D\u3002\u56E0\u6B64\uFF0C\u4F60\u53EF\u4EE5\u5728\u7A0B\u5E8F\u4E2D\u9996\u5148\u63D0\u4F9B\u4E00\u4E2A\u6700\u5C0F\u7684\u7A0B\u5E8F\u542F\u52A8\u5305\uFF0C\u5E76\u5728\u5C06\u6765\u5F02\u6B65\u52A0\u8F7D\u5176\u4ED6\u6A21\u5757\u3002</p><p>\u8FD9\u5F88\u81EA\u7136\u5C31\u4F1A\u8BA9\u4EBA\u60F3\u5230\uFF08\u5982\u679C\u6211\u4EEC\u5DE5\u4F5C\u5728 webpack dev \u7684\u5DE5\u4F5C\u6D41\u7A0B\u4E2D\uFF09<a href="https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#dynamic-import-expressions" target="_blank" rel="noopener noreferrer">TypeScript 2.4 dynamic import expressions</a> \u5C06\u4F1A\u628A\u4F60\u6700\u7EC8\u751F\u6210\u7684 JavaScript \u4EE3\u7801\u81EA\u52A8\u5206\u5272\u6210\u5F88\u591A\u5757\u3002\u4F46\u662F\u8FD9\u4F3C\u4E4E\u5E76\u4E0D\u5BB9\u6613\u5B9E\u73B0\uFF0C\u56E0\u4E3A\u5B83\u4F9D\u8D56\u4E8E\u6211\u4EEC\u6B63\u5728\u4F7F\u7528\u7684 <code>tsconfig.json</code> \u914D\u7F6E\u6587\u4EF6\u3002</p><p>webpack \u5B9E\u73B0\u4EE3\u7801\u5206\u5272\u7684\u65B9\u5F0F\u6709\u4E24\u79CD\uFF1A\u4F7F\u7528 <code>import()</code> \uFF08\u9996\u9009\uFF0CECMAScript \u7684\u63D0\u6848\uFF09\u548C <code>require.ensure()</code> \uFF08\u6700\u540E\u8003\u8651\uFF0Cwebpack \u5177\u4F53\u5B9E\u73B0\uFF09\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u671F\u671B TypeScript \u7684\u8F93\u51FA\u662F\u4FDD\u7559 <code>import()</code> \u8BED\u53E5\uFF0C\u800C\u4E0D\u662F\u5C06\u5176\u8F6C\u5316\u4E3A\u5176\u4ED6\u4EFB\u4F55\u4EE3\u7801\u3002</p><p>\u8BA9\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u6F14\u793A\u4E86\u5982\u4F55\u914D\u7F6E webpack \u548C TypeScript 2.4 +\u3002</p><p>\u5728\u4E0B\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u6211\u5E0C\u671B\u61D2\u52A0\u8F7D <code>moment</code> \u5E93\uFF0C\u540C\u65F6\u6211\u4E5F\u5E0C\u671B\u4F7F\u7528\u4EE3\u7801\u5206\u5272\u7684\u529F\u80FD\uFF0C\u8FD9\u610F\u5473 <code>moment</code> \u4F1A\u88AB\u5206\u5272\u5230\u4E00\u4E2A\u5355\u72EC\u7684 JavaScript \u6587\u4EF6\uFF0C\u5F53\u5B83\u88AB\u4F7F\u7528\u65F6\uFF0C\u4F1A\u88AB\u5F02\u6B65\u52A0\u8F7D\u3002</p><div class="language-ts"><pre><code><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* webpackChunkName: &quot;momentjs&quot; */</span> <span class="token string">&#39;moment&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>moment <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u61D2\u52A0\u8F7D\u7684\u6A21\u5757\u62E5\u6709\u6240\u6709\u7684\u7C7B\u578B\uFF0C\u5E76\u4E14\u80FD\u591F\u6309\u671F\u5DE5\u4F5C</span>
    <span class="token comment">// \u7C7B\u578B\u68C0\u67E5\u4F1A\u5DE5\u4F5C\uFF0C\u4EE3\u7801\u5F15\u7528\u4E5F\u4F1A\u5DE5\u4F5C  :100:</span>
    <span class="token keyword">const</span> time <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TypeScript &gt;= 2.4.0 Dynamic Import Expression:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>err <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Failed to load moment&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u662F <code>tsconfig.json</code> \u7684\u914D\u7F6E\u6587\u4EF6\uFF1A</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;dom&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;scripthost&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;es2015.promise&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;declaration&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;typeRoots&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;./node_modules/@types&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;react-dom&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="danger custom-block"><p class="custom-block-title">WARNING</p><ul><li>\u4F7F\u7528 <code>&quot;module&quot;: &quot;esnext&quot;</code> \u9009\u9879\uFF1ATypeScript \u4FDD\u7559 <code>import()</code> \u8BED\u53E5\uFF0C\u8BE5\u8BED\u53E5\u7528\u4E8E Webpack Code Splitting\u3002</li><li>\u8FDB\u4E00\u6B65\u4E86\u89E3\u6709\u5173\u4FE1\u606F\uFF0C\u63A8\u8350\u9605\u8BFB\u8FD9\u7BC7\u6587\u7AE0\uFF1A<a href="https://blog.josequinto.com/2017/06/29/dynamic-import-expressions-and-webpack-code-splitting-integration-with-typescript-2-4/" target="_blank" rel="noopener noreferrer">Dynamic Import Expressions and webpack 2 Code Splitting integration with TypeScript 2.4</a>.</li></ul></div><h2 id="typescript-2" tabindex="-1"><a class="header-anchor" href="#typescript-2">#</a> TypeScript \u7C7B\u578B\u7CFB\u7EDF</h2><h3 id="-21" tabindex="-1"><a class="header-anchor" href="#-21">#</a> \u6982\u89C8</h3><h4 id="typescript-3" tabindex="-1"><a class="header-anchor" href="#typescript-3">#</a> TypeScript \u7C7B\u578B\u7CFB\u7EDF</h4><p>TypeScript \u7C7B\u578B\u7CFB\u7EDF\u7684\u4E3B\u8981\u529F\u80FD\u3002\u4EE5\u4E0B\u662F\u4E00\u4E9B\u5173\u952E\u70B9\uFF1A</p><ul><li>TypeScript \u7684\u7C7B\u578B\u7CFB\u7EDF\u88AB\u8BBE\u8BA1\u4E3A\u53EF\u9009\u7684\uFF0C\u56E0\u6B64\uFF0C\u4F60\u7684 JavaScript \u5C31\u662F TypeScript;</li><li>TypeScript \u4E0D\u4F1A\u963B\u6B62 JavaScript \u7684\u8FD0\u884C\uFF0C\u5373\u4F7F\u5B58\u5728\u7C7B\u578B\u9519\u8BEF\u4E5F\u4E0D\u4F8B\u5916\uFF0C\u8FD9\u80FD\u8BA9\u4F60\u7684 JavaScript \u9010\u6B65\u8FC1\u79FB\u81F3 TypeScript\u3002</li></ul><p>\u73B0\u5728\u8BA9\u6211\u4EEC\u5F00\u59CB\u5B66\u4E60 TypeScript \u7C7B\u578B\u7CFB\u7EDF\u7684\u8BED\u6CD5\u5427\uFF0C\u5728\u8FD9\u4E00\u7AE0\u8282\u4E2D\uFF0C\u4F60\u5C06\u80FD\u7ED9\u4F60\u7684\u4EE3\u7801\u52A0\u4E0A\u7C7B\u578B\u6CE8\u89E3\uFF0C\u5E76\u4E14\u80FD\u770B\u5230\u5B83\u7684\u76CA\u5904\u3002\u8FD9\u5C06\u4E3A\u6211\u4EEC\u8FDB\u4E00\u6B65\u4E86\u89E3\u7C7B\u578B\u7CFB\u7EDF\u505A\u94FA\u57AB\u3002</p><h4 id="-22" tabindex="-1"><a class="header-anchor" href="#-22">#</a> \u57FA\u672C\u6CE8\u89E3</h4><p>\u5982\u524D\u6587\u6240\u63D0\u53CA\uFF0C\u7C7B\u578B\u6CE8\u89E3\u4F7F\u7528 <code>:TypeAnnotation</code> \u8BED\u6CD5\u3002\u5728\u7C7B\u578B\u58F0\u660E\u7A7A\u95F4\u4E2D\u53EF\u7528\u7684\u4EFB\u4F55\u5185\u5BB9\u90FD\u53EF\u4EE5\u7528\u4F5C\u7C7B\u578B\u6CE8\u89E3\u3002</p><p>\u5728\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u4F7F\u7528\u4E86\u53D8\u91CF\u3001\u51FD\u6570\u53C2\u6570\u4EE5\u53CA\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u6CE8\u89E3\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> num<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">identity</span><span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-23" tabindex="-1"><a class="header-anchor" href="#-23">#</a> \u539F\u59CB\u7C7B\u578B</h4><p>JavaScript \u539F\u59CB\u7C7B\u578B\u4E5F\u540C\u6837\u9002\u5E94\u4E8E TypeScript \u7684\u7C7B\u578B\u7CFB\u7EDF\uFF0C\u56E0\u6B64 <code>string</code>\u3001<code>number</code>\u3001<code>boolean</code> \u4E5F\u53EF\u4EE5\u88AB\u7528\u4F5C\u7C7B\u578B\u6CE8\u89E3\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bool<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>

num <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
num <span class="token operator">=</span> <span class="token number">123.456</span><span class="token punctuation">;</span>
num <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>

str <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
str <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>

bool <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
bool <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
bool <span class="token operator">=</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><h4 id="-24" tabindex="-1"><a class="header-anchor" href="#-24">#</a> \u6570\u7EC4</h4><p>TypeScript \u4E3A\u6570\u7EC4\u63D0\u4F9B\u4E86\u4E13\u7528\u7684\u7C7B\u578B\u8BED\u6CD5\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u5F88\u8F7B\u6613\u7684\u6CE8\u89E3\u6570\u7EC4\u3002\u5B83\u4F7F\u7528\u540E\u7F00 <code>[]</code>\uFF0C \u63A5\u7740\u4F60\u53EF\u4EE5\u6839\u636E\u9700\u8981\u8865\u5145\u4EFB\u4F55\u6709\u6548\u7684\u7C7B\u578B\u6CE8\u89E3\uFF08\u5982\uFF1A<code>:boolean[]</code>\uFF09\u3002\u5B83\u80FD\u8BA9\u4F60\u5B89\u5168\u7684\u4F7F\u7528\u4EFB\u4F55\u6709\u5173\u6570\u7EC4\u7684\u64CD\u4F5C\uFF0C\u800C\u4E14\u5B83\u4E5F\u80FD\u9632\u6B62\u4E00\u4E9B\u7C7B\u4F3C\u4E8E\u8D4B\u503C\u9519\u8BEF\u7C7B\u578B\u7ED9\u6210\u5458\u7684\u884C\u4E3A\u3002\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> boolArray<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

boolArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boolArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boolArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>

boolArray<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
boolArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

boolArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
boolArray <span class="token operator">=</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
boolArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><h4 id="-25" tabindex="-1"><a class="header-anchor" href="#-25">#</a> \u63A5\u53E3</h4><p>\u63A5\u53E3\u662F TypeScript \u7684\u4E00\u4E2A\u6838\u5FC3\u77E5\u8BC6\uFF0C\u5B83\u80FD\u5408\u5E76\u4F17\u591A\u7C7B\u578B\u58F0\u660E\u81F3\u4E00\u4E2A\u7C7B\u578B\u58F0\u660E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Name</span> <span class="token punctuation">{</span>
  first<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  second<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> name<span class="token operator">:</span> Name<span class="token punctuation">;</span>
name <span class="token operator">=</span> <span class="token punctuation">{</span>
  first<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
  second<span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

name <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// Error: &#39;Second is missing&#39;</span>
  first<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

name <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// Error: &#39;Second is the wrong type&#39;</span>
  first<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
  second<span class="token operator">:</span> <span class="token number">1337</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u628A\u7C7B\u578B\u6CE8\u89E3\uFF1A<code>first: string</code> + <code>second: string</code> \u5408\u5E76\u5230\u4E86\u4E00\u4E2A\u65B0\u7684\u7C7B\u578B\u6CE8\u89E3 <code>Name</code> \u91CC\uFF0C\u8FD9\u6837\u80FD\u5F3A\u5236\u5BF9\u6BCF\u4E2A\u6210\u5458\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\u3002\u63A5\u53E3\u5728 TypeScript \u62E5\u6709\u5F3A\u5927\u7684\u529B\u91CF\uFF0C\u7A0D\u540E\uFF0C\u6211\u4EEC\u5C06\u4F1A\u7528\u4E00\u4E2A\u5185\u5BB9\u4E13\u95E8\u9610\u8FF0\u5982\u4F55\u66F4\u597D\u7684\u4F7F\u7528\u5B83\u3002</p><h4 id="-26" tabindex="-1"><a class="header-anchor" href="#-26">#</a> \u5185\u8054\u7C7B\u578B\u6CE8\u89E3</h4><p>\u4E0E\u521B\u5EFA\u4E00\u4E2A\u63A5\u53E3\u4E0D\u540C\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u5185\u8054\u6CE8\u89E3\u8BED\u6CD5\u6CE8\u89E3\u4EFB\u4F55\u5185\u5BB9\uFF1A<code>:{ /*Structure*/ }</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> name<span class="token operator">:</span> <span class="token punctuation">{</span>
  first<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  second<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

name <span class="token operator">=</span> <span class="token punctuation">{</span>
  first<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
  second<span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

name <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// Error: &#39;Second is missing&#39;</span>
  first<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

name <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// Error: &#39;Second is the wrong type&#39;</span>
  first<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span>
  second<span class="token operator">:</span> <span class="token number">1337</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5185\u8054\u7C7B\u578B\u80FD\u4E3A\u4F60\u5FEB\u901F\u7684\u63D0\u4F9B\u4E00\u4E2A\u7C7B\u578B\u6CE8\u89E3\u3002\u5B83\u53EF\u4EE5\u5E2E\u52A9\u4F60\u7701\u53BB\u4E3A\u7C7B\u578B\u8D77\u540D\u7684\u9EBB\u70E6\uFF08\u4F60\u53EF\u80FD\u4F1A\u4F7F\u7528\u4E00\u4E2A\u5F88\u7CDF\u7CD5\u7684\u540D\u79F0\uFF09\u3002\u7136\u800C\uFF0C\u5982\u679C\u4F60\u53D1\u73B0\u9700\u8981\u591A\u6B21\u4F7F\u7528\u76F8\u540C\u7684\u5185\u8054\u6CE8\u89E3\u65F6\uFF0C\u90A3\u4E48\u8003\u8651\u628A\u5B83\u91CD\u6784\u4E3A\u4E00\u4E2A\u63A5\u53E3\uFF08\u6216\u8005\u662F <code>type alias</code>\uFF0C\u5B83\u4F1A\u5728\u63A5\u4E0B\u6765\u7684\u90E8\u5206\u63D0\u5230\uFF09\u662F\u4E00\u4E2A\u4E0D\u9519\u7684\u4E3B\u610F\u3002</p><h4 id="-27" tabindex="-1"><a class="header-anchor" href="#-27">#</a> \u7279\u6B8A\u7C7B\u578B</h4><p>\u9664\u4E86\u88AB\u63D0\u5230\u7684\u4E00\u4E9B\u539F\u59CB\u7C7B\u578B\uFF0C\u5728 TypeScript \u4E2D\uFF0C\u8FD8\u5B58\u5728\u4E00\u4E9B\u7279\u6B8A\u7684\u7C7B\u578B\uFF0C\u5B83\u4EEC\u662F <code>any</code>\u3001 <code>null</code>\u3001 <code>undefined</code> \u4EE5\u53CA <code>void</code>\u3002</p><h5 id="any" tabindex="-1"><a class="header-anchor" href="#any">#</a> any</h5><p><code>any</code> \u7C7B\u578B\u5728 TypeScript \u7C7B\u578B\u7CFB\u7EDF\u4E2D\u5360\u6709\u7279\u6B8A\u7684\u5730\u4F4D\u3002\u5B83\u63D0\u4F9B\u7ED9\u4F60\u4E00\u4E2A\u7C7B\u578B\u7CFB\u7EDF\u7684\u300C\u540E\u95E8\u300D,TypeScript \u5C06\u4F1A\u628A\u7C7B\u578B\u68C0\u67E5\u5173\u95ED\u3002\u5728\u7C7B\u578B\u7CFB\u7EDF\u91CC <code>any</code> \u80FD\u591F\u517C\u5BB9\u6240\u6709\u7684\u7C7B\u578B\uFF08\u5305\u62EC\u5B83\u81EA\u5DF1\uFF09\u3002\u56E0\u6B64\uFF0C\u6240\u6709\u7C7B\u578B\u90FD\u80FD\u88AB\u8D4B\u503C\u7ED9\u5B83\uFF0C\u5B83\u4E5F\u80FD\u88AB\u8D4B\u503C\u7ED9\u5176\u4ED6\u4EFB\u4F55\u7C7B\u578B\u3002\u4EE5\u4E0B\u6709\u4E00\u4E2A\u8BC1\u660E\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> power<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token comment">// \u8D4B\u503C\u4EFB\u610F\u7C7B\u578B</span>
power <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
power <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B83\u4E5F\u517C\u5BB9\u4EFB\u4F55\u7C7B\u578B</span>
<span class="token keyword">let</span> num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
power <span class="token operator">=</span> num<span class="token punctuation">;</span>
num <span class="token operator">=</span> power<span class="token punctuation">;</span>
</code></pre></div><p>\u5F53\u4F60\u628A JavaScript \u8FC1\u79FB\u81F3 TypeScript \u65F6\uFF0C\u4F60\u5C06\u4F1A\u7ECF\u5E38\u6027\u4F7F\u7528 <code>any</code>\u3002\u4F46\u4F60\u5FC5\u987B\u51CF\u5C11\u5BF9\u5B83\u7684\u4F9D\u8D56\uFF0C\u56E0\u4E3A\u4F60\u9700\u8981\u786E\u4FDD\u7C7B\u578B\u5B89\u5168\u3002\u5F53\u4F7F\u7528 <code>any</code> \u65F6\uFF0C\u4F60\u57FA\u672C\u4E0A\u662F\u5728\u544A\u8BC9 TypeScript \u7F16\u8BD1\u5668\u4E0D\u8981\u8FDB\u884C\u4EFB\u4F55\u7684\u7C7B\u578B\u68C0\u67E5\u3002</p><h5 id="null-undefined" tabindex="-1"><a class="header-anchor" href="#null-undefined">#</a> null \u548C undefined</h5><p>\u5728\u7C7B\u578B\u7CFB\u7EDF\u4E2D\uFF0CJavaScript \u4E2D\u7684 null \u548C undefined \u5B57\u9762\u91CF\u548C\u5176\u4ED6\u88AB\u6807\u6CE8\u4E86 <code>any</code> \u7C7B\u578B\u7684\u53D8\u91CF\u4E00\u6837\uFF0C\u90FD\u80FD\u88AB\u8D4B\u503C\u7ED9\u4EFB\u610F\u7C7B\u578B\u7684\u53D8\u91CF\uFF0C\u5982\u4E0B\u4F8B\u5B50\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// strictNullChecks: false</span>

<span class="token keyword">let</span> num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

<span class="token comment">// \u8FD9\u4E9B\u7C7B\u578B\u80FD\u88AB\u8D4B\u4E88</span>
num <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
str <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre></div><h5 id="void" tabindex="-1"><a class="header-anchor" href="#void">#</a> void</h5><p>\u4F7F\u7528 <code>:void</code> \u6765\u8868\u793A\u4E00\u4E2A\u51FD\u6570\u6CA1\u6709\u4E00\u4E2A\u8FD4\u56DE\u503C</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-28" tabindex="-1"><a class="header-anchor" href="#-28">#</a> \u8303\u578B</h4><p>\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\uFF0C\u8BB8\u591A\u7B97\u6CD5\u548C\u6570\u636E\u7ED3\u6784\u5E76\u4E0D\u4F1A\u4F9D\u8D56\u4E8E\u5BF9\u8C61\u7684\u5B9E\u9645\u7C7B\u578B\u3002\u4F46\u662F\uFF0C\u4F60\u4ECD\u7136\u4F1A\u60F3\u5728\u6BCF\u4E2A\u53D8\u91CF\u91CC\u5F3A\u5236\u63D0\u4F9B\u7EA6\u675F\u3002\u4F8B\u5982\uFF1A\u5728\u4E00\u4E2A\u51FD\u6570\u4E2D\uFF0C\u5B83\u63A5\u53D7\u4E00\u4E2A\u5217\u8868\uFF0C\u5E76\u4E14\u8FD4\u56DE\u8FD9\u4E2A\u5217\u8868\u7684\u53CD\u5411\u6392\u5E8F\uFF0C\u8FD9\u91CC\u7684\u7EA6\u675F\u662F\u6307\u4F20\u5165\u81F3\u51FD\u6570\u7684\u53C2\u6570\u4E0E\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">reverse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> toreturn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    toreturn<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> toreturn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> sample <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> reversed <span class="token operator">=</span> <span class="token function">reverse</span><span class="token punctuation">(</span>sample<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reversed<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3, 2, 1</span>

<span class="token comment">// Safety</span>
reversed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
reversed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>

reversed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
reversed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u5728\u4E0A\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u51FD\u6570 <code>reverse</code> \u63A5\u53D7\u4E00\u4E2A\u7C7B\u578B\u4E3A <code>T</code>\uFF08\u6CE8\u610F\u5728 <code>reverse&lt;T&gt;</code> \u4E2D\u7684\u7C7B\u578B\u53C2\u6570\uFF09 \u7684\u6570\u7EC4\uFF08<code>items: T[]</code>\uFF09\uFF0C\u8FD4\u56DE\u503C\u4E3A\u7C7B\u578B <code>T</code> \u7684\u4E00\u4E2A\u6570\u7EC4\uFF08\u6CE8\u610F\uFF1A<code>T[]</code>\uFF09\uFF0C\u51FD\u6570 <code>reverse</code> \u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E0E\u5B83\u63A5\u53D7\u7684\u53C2\u6570\u7684\u7C7B\u578B\u4E00\u6837\u3002\u5F53\u4F60\u4F20\u5165 <code>const sample = [1, 2, 3]</code> \u65F6\uFF0CTypeScript \u80FD\u63A8\u65AD\u51FA <code>reverse</code> \u4E3A <code>number[]</code> \u7C7B\u578B\uFF0C\u4ECE\u800C\u80FD\u7ED9\u4F60\u7C7B\u578B\u5B89\u5168\u3002\u4E0E\u6B64\u76F8\u4F3C\uFF0C\u5F53\u4F60\u4F20\u5165\u4E00\u4E2A\u7C7B\u578B\u4E3A <code>string[]</code> \u7C7B\u578B\u7684\u6570\u7EC4\u65F6\uFF0CTypeScript \u80FD\u63A8\u65AD <code>reverse</code> \u4E3A <code>string[]</code> \u7C7B\u578B\uFF0C\u5982\u4E0B\u4F8B\u5B50\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> strArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> reversedStrs <span class="token operator">=</span> <span class="token function">reverse</span><span class="token punctuation">(</span>strArr<span class="token punctuation">)</span><span class="token punctuation">;</span>

reversedStrs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><p>\u4E8B\u5B9E\u4E0A\uFF0CJavaScript \u6570\u7EC4\u5DF2\u7ECF\u62E5\u6709\u4E86 reverse \u7684\u65B9\u6CD5\uFF0CTypeScript \u4E5F\u786E\u5B9E\u4F7F\u7528\u4E86\u6CDB\u578B\u6765\u5B9A\u4E49\u5176\u7ED3\u6784\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u610F\u5473\u7740\uFF0C\u5F53\u4F60\u5728\u6570\u7EC4\u4E0A\u8C03\u7528 <code>.reverse</code> \u65B9\u6CD5\u65F6\uFF0C\u5C06\u4F1A\u83B7\u5F97\u7C7B\u578B\u5B89\u5168\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> numArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> reversedNums <span class="token operator">=</span> numArr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

reversedNums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><p>\u5F53\u7A0D\u540E\u5728 <a href="#%E7%8E%AF%E5%A2%83%E5%A3%B0%E6%98%8E">\u73AF\u5883\u58F0\u660E</a> \u7AE0\u8282\u4E2D\u63D0\u53CA <code>lib.d.ts</code> \u65F6\uFF0C\u6211\u4EEC\u4F1A\u8BA8\u8BBA\u66F4\u591A\u5173\u4E8E <code>Array&lt;T&gt;</code> \u7684\u4FE1\u606F\u3002</p><h4 id="-29" tabindex="-1"><a class="header-anchor" href="#-29">#</a> \u8054\u5408\u7C7B\u578B</h4><p>\u5728 JavaScript \u4E2D\uFF0C\u4F60\u53EF\u80FD\u5E0C\u671B\u5C5E\u6027\u4E3A\u591A\u79CD\u7C7B\u578B\u4E4B\u4E00\uFF0C\u5982\u5B57\u7B26\u4E32\u6216\u8005\u6570\u7EC4\u3002\u8FD9\u6B63\u662F TypeScript \u4E2D\u8054\u5408\u7C7B\u578B\u80FD\u6D3E\u4E0A\u7528\u573A\u7684\u5730\u65B9\uFF08\u5B83\u4F7F\u7528 <code>|</code> \u4F5C\u4E3A\u6807\u8BB0\uFF0C\u5982 <code>string | number</code>\uFF09\u3002\u5173\u4E8E\u8054\u5408\u7C7B\u578B\uFF0C\u4E00\u4E2A\u5E38\u89C1\u7684\u7528\u4F8B\u662F\u4E00\u4E2A\u53EF\u4EE5\u63A5\u53D7\u5B57\u7B26\u4E32\u6570\u7EC4\u6216\u5355\u4E2A\u5B57\u7B26\u4E32\u7684\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">formatCommandline</span><span class="token punctuation">(</span>command<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> line <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> command <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    line <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    line <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Do stuff with line: string</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-30" tabindex="-1"><a class="header-anchor" href="#-30">#</a> \u4EA4\u53C9\u7C7B\u578B</h4><p>\u5728 JavaScript \u4E2D\uFF0C <code>extend</code> \u662F\u4E00\u79CD\u975E\u5E38\u5E38\u89C1\u7684\u6A21\u5F0F\uFF0C\u5728\u8FD9\u79CD\u6A21\u5F0F\u4E2D\uFF0C\u4F60\u53EF\u4EE5\u4ECE\u4E24\u4E2A\u5BF9\u8C61\u4E2D\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u65B0\u5BF9\u8C61\u62E5\u6709\u7740\u4E24\u4E2A\u5BF9\u8C61\u6240\u6709\u7684\u529F\u80FD\u3002\u4EA4\u53C9\u7C7B\u578B\u53EF\u4EE5\u8BA9\u4F60\u5B89\u5168\u7684\u4F7F\u7528\u6B64\u79CD\u6A21\u5F0F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">extend</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>first<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> second<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">U</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> id <span class="token keyword">in</span> first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>result<span class="token punctuation">)</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> first<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> id <span class="token keyword">in</span> second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;</span>result<span class="token punctuation">)</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> second<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u73B0\u5728 x \u62E5\u6709\u4E86 a \u5C5E\u6027\u4E0E b \u5C5E\u6027</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> x<span class="token punctuation">.</span>a<span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> x<span class="token punctuation">.</span>b<span class="token punctuation">;</span>
</code></pre></div><h4 id="-31" tabindex="-1"><a class="header-anchor" href="#-31">#</a> \u5143\u7EC4\u7C7B\u578B</h4><p>JavaScript \u5E76\u4E0D\u652F\u6301\u5143\u7EC4\uFF0C\u5F00\u53D1\u8005\u4EEC\u901A\u5E38\u53EA\u80FD\u4F7F\u7528\u6570\u7EC4\u6765\u8868\u793A\u5143\u7EC4\u3002\u800C TypeScript \u652F\u6301\u5B83\uFF0C\u5F00\u53D1\u8005\u53EF\u4EE5\u4F7F\u7528 <code>:[typeofmember1, typeofmember2]</code> \u7684\u5F62\u5F0F\uFF0C\u4E3A\u5143\u7EC4\u6DFB\u52A0\u7C7B\u578B\u6CE8\u89E3\uFF0C\u5143\u7EC4\u53EF\u4EE5\u5305\u542B\u4EFB\u610F\u6570\u91CF\u7684\u6210\u5458\uFF0C\u793A\u4F8B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> nameNumber<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Ok</span>
nameNumber <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jenny&#39;</span><span class="token punctuation">,</span> <span class="token number">221345</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// Error</span>
nameNumber <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jenny&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;221345&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5C06\u5176\u4E0E TypeScript \u4E2D\u7684\u89E3\u6784\u4E00\u8D77\u4F7F\u7528\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> nameNumber<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
nameNumber <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jenny&#39;</span><span class="token punctuation">,</span> <span class="token number">322134</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> num<span class="token punctuation">]</span> <span class="token operator">=</span> nameNumber<span class="token punctuation">;</span>
</code></pre></div><h4 id="-32" tabindex="-1"><a class="header-anchor" href="#-32">#</a> \u7C7B\u578B\u522B\u540D</h4><p>TypeScript \u63D0\u4F9B\u4E86\u4E3A\u7C7B\u578B\u6CE8\u89E3\u8BBE\u7F6E\u522B\u540D\u7684\u4FBF\u6377\u8BED\u6CD5\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>type SomeName = someValidTypeAnnotation</code> \u6765\u521B\u5EFA\u522B\u540D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">StrOrNum</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528</span>
<span class="token keyword">let</span> sample<span class="token operator">:</span> StrOrNum<span class="token punctuation">;</span>
sample <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
sample <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F1A\u68C0\u67E5\u7C7B\u578B</span>
sample <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><p>\u4E0E\u63A5\u53E3\u4E0D\u540C\uFF0C\u4F60\u53EF\u4EE5\u4E3A\u4EFB\u610F\u7684\u7C7B\u578B\u6CE8\u89E3\u63D0\u4F9B\u7C7B\u578B\u522B\u540D\uFF08\u5728\u8054\u5408\u7C7B\u578B\u548C\u4EA4\u53C9\u7C7B\u578B\u4E2D\u6BD4\u8F83\u5B9E\u7528\uFF09\uFF0C\u4E0B\u9762\u662F\u4E00\u4E9B\u80FD\u8BA9\u4F60\u719F\u6089\u7C7B\u578B\u522B\u540D\u8BED\u6CD5\u7684\u793A\u4F8B\u3002</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Text</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Coordinates</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Callback</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>\u5982\u679C\u4F60\u9700\u8981\u4F7F\u7528\u7C7B\u578B\u6CE8\u89E3\u7684\u5C42\u6B21\u7ED3\u6784\uFF0C\u8BF7\u4F7F\u7528\u63A5\u53E3\u3002\u5B83\u80FD\u4F7F\u7528 <code>implements</code> \u548C <code>extends</code></li><li>\u4E3A\u4E00\u4E2A\u7B80\u5355\u7684\u5BF9\u8C61\u7C7B\u578B\uFF08\u5982\u4E0A\u9762\u4F8B\u5B50\u4E2D\u7684 Coordinates\uFF09\u4F7F\u7528\u7C7B\u578B\u522B\u540D\uFF0C\u53EA\u9700\u8981\u7ED9\u5B83\u4E00\u4E2A\u8BED\u4E49\u5316\u7684\u540D\u5B57\u5373\u53EF\u3002\u53E6\u5916\uFF0C\u5F53\u4F60\u60F3\u7ED9\u8054\u5408\u7C7B\u578B\u548C\u4EA4\u53C9\u7C7B\u578B\u63D0\u4F9B\u4E00\u4E2A\u8BED\u4E49\u5316\u7684\u540D\u79F0\u65F6\uFF0C\u4E00\u4E2A\u7C7B\u578B\u522B\u540D\u5C06\u4F1A\u662F\u4E00\u4E2A\u597D\u7684\u9009\u62E9\u3002</li></ul></div><h4 id="-33" tabindex="-1"><a class="header-anchor" href="#-33">#</a> \u6700\u540E</h4><p>\u73B0\u5728\u4F60\u5DF2\u7ECF\u80FD\u591F\u4E3A\u4F60\u7684\u5927\u90E8\u5206 JavaScript \u4EE3\u7801\u6DFB\u52A0\u7C7B\u578B\u6CE8\u89E3\uFF0C\u63A5\u7740\uFF0C\u8BA9\u6211\u4EEC\u6DF1\u5165\u4E86\u89E3 TypeScript \u7684\u7C7B\u578B\u7CFB\u7EDF\u5427\u3002</p><h3 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript">#</a> \u4ECEJavaScript \u8FC1\u79FB</h3><p>\u9996\u5148\uFF0C\u5047\u8BBE\u5982\u4E0B\uFF1A</p><ul><li>\u4F60\u4E86\u89E3 JavaScript\uFF1B</li><li>\u4F60\u4E86\u89E3\u5728\u9879\u76EE\u4E2D\u5E38\u7528\u7684\u65B9\u5F0F\u548C\u6784\u5EFA\u5DE5\u5177\uFF08\u5982\uFF1Awebpack\uFF09\u3002</li></ul><p>\u6709\u4E86\u4EE5\u4E0A\u5047\u8BBE\uFF0C\u4E00\u822C\u6765\u8BF4\uFF0C\u5C06 JavaScript \u4EE3\u7801\u8FC1\u79FB\u81F3 TypeScript \u5305\u62EC\u4EE5\u4E0B\u6B65\u9AA4\uFF1A</p><ul><li>\u6DFB\u52A0\u4E00\u4E2A <code>tsconfig.json</code> \u6587\u4EF6\uFF1B</li><li>\u628A\u6587\u4EF6\u6269\u5C55\u540D\u4ECE <code>.js</code> \u6539\u6210 <code>.ts</code>\uFF0C\u5F00\u59CB\u4F7F\u7528 <code>any</code> \u6765\u51CF\u5C11\u9519\u8BEF\uFF1B</li><li>\u5F00\u59CB\u5728 TypeScript \u4E2D\u5199\u4EE3\u7801\uFF0C\u5C3D\u53EF\u80FD\u7684\u51CF\u5C11 <code>any</code> \u7684\u4F7F\u7528\uFF1B</li><li>\u56DE\u5230\u65E7\u4EE3\u7801\uFF0C\u5F00\u59CB\u6DFB\u52A0\u7C7B\u578B\u6CE8\u89E3\uFF0C\u5E76\u4FEE\u590D\u5DF2\u8BC6\u522B\u7684\u9519\u8BEF\uFF1B</li><li>\u4E3A\u7B2C\u4E09\u65B9 JavaScript \u4EE3\u7801\u5B9A\u4E49\u73AF\u5883\u58F0\u660E\u3002</li></ul><p>\u8BA9\u6211\u4EEC\u8FDB\u4E00\u6B65\u8BA8\u8BBA\u5176\u4E2D\u7684\u51E0\u4E2A\u5173\u952E\u70B9\u3002</p><p>\u8BB0\u4F4F\uFF1A\u6240\u6709\u7684 JavaScript \u4EE3\u7801\u90FD\u662F\u6709\u6548\u7684 TypeScript \u4EE3\u7801\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u5982\u679C\u8BA9 TypeScript \u7F16\u8BD1\u5668\u7F16\u8BD1 TypeScript \u91CC\u7684 JavaScript \u4EE3\u7801\uFF0C\u7F16\u8BD1\u540E\u7684\u7ED3\u679C\u5C06\u4F1A\u4E0E\u539F\u59CB\u7684 JavaScript \u4EE3\u7801\u4E00\u6A21\u4E00\u6837\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u628A\u6587\u4EF6\u6269\u5C55\u540D\u4ECE <code>.js</code> \u6539\u6210 <code>.ts</code> \u5C06\u4E0D\u4F1A\u9020\u6210\u4EFB\u4F55\u8D1F\u9762\u7684\u5F71\u54CD\u3002</p><h4 id="-34" tabindex="-1"><a class="header-anchor" href="#-34">#</a> \u51CF\u5C11\u9519\u8BEF</h4><p>\u4EE3\u7801\u88AB\u8FC1\u79FB\u81F3 TypeScript \u540E\uFF0CTypeScript \u5C06\u4F1A\u7ACB\u5373\u5BF9\u4F60\u7684\u4EE3\u7801\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\uFF0C\u4F60\u7684 JavaScript \u4EE3\u7801\u53EF\u80FD\u5E76\u4E0D\u50CF\u60F3\u8C61\u4E2D\u90A3\u6837\u6574\u9F50\u4E86\uFF0C\u56E0\u6B64\u4F60\u53EF\u80FD\u4F1A\u6536\u5230\u4E00\u4E9B\u62A5\u9519\u4FE1\u606F\u3002\u8FD9\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 any \u6765\u89E3\u51B3\u5927\u90E8\u5206\u7684\u62A5\u9519\u95EE\u9898\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token string">&#39;hey&#39;</span><span class="token punctuation">;</span>

bar <span class="token operator">=</span> foo<span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u80FD\u628A number \u7C7B\u578B\u8D4B\u503C\u7ED9 string \u7C7B\u578B</span>
</code></pre></div><p>\u867D\u7136\u8FD9\u4E9B\u9519\u8BEF\u662F\u6709\u6548\u7684\uFF0C\u5E76\u4E14\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u6839\u636E\u8FD9\u4E9B\u9519\u8BEF\u6240\u63A8\u65AD\u51FA\u7684\u4FE1\u606F\u6BD4\u4EE3\u7801\u5E93\u7684\u4E0D\u540C\u90E8\u5206\u7684\u539F\u59CB\u4F5C\u8005\u60F3\u8C61\u7684\u66F4\u597D\uFF0C\u4F46\u662F\u4F60\u7684\u91CD\u70B9\u662F\u5728\u9010\u6B65\u66F4\u65B0\u65E7\u4EE3\u7801\u5E93\u7684\u540C\u65F6\uFF0C\u7528 TypeScript \u7F16\u5199\u65B0\u4EE3\u7801\u3002\u5728\u8FD9\u91CC\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u6765\u51CF\u5C11\u6B64\u9519\u8BEF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token string">&#39;hey&#39;</span><span class="token punctuation">;</span>

bar <span class="token operator">=</span> foo <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u4ECE\u53E6\u4E00\u65B9\u9762\u6765\u8BF4\uFF0C\u4F60\u53EF\u80FD\u60F3\u7528 any \u7528\u4F5C\u7C7B\u578B\u6CE8\u89E3\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token string">&#39;hey&#39;</span><span class="token punctuation">;</span>
bar <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u80FD\u628A\u4E00\u4E2A number \u7C7B\u578B\u8D4B\u503C\u7ED9 string \u7C7B\u578B</span>
</code></pre></div><p>\u51CF\u5C11\u8FD9\u79CD\u9519\u8BEF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6DFB\u52A0 &#39;any&#39;</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token string">&#39;hey&#39;</span><span class="token punctuation">;</span>
bar <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>\u4F7F\u7528\u6B64\u79CD\u65B9\u5F0F\u6765\u51CF\u5C11\u9519\u8BEF\u662F\u5371\u9669\u7684\uFF0C\u4F46\u662F\u5B83\u5141\u8BB8\u4F60\u5C06\u6CE8\u610F\u529B\u8F6C\u79FB\u5230\u4F60\u7684\u65B0 TypeScript \u4EE3\u7801\u9519\u8BEF\u4E0A\u3002\u5F53\u4F60\u8FDB\u884C\u4E0B\u4E00\u6B65\u524D\uFF0C\u6700\u597D\u8981\u7559\u4E0B <code>// TODO</code> \u7684\u6CE8\u91CA\u3002</p></div><h4 id="-35" tabindex="-1"><a class="header-anchor" href="#-35">#</a> \u7B2C\u4E09\u65B9\u4EE3\u7801</h4><p>\u4F60\u53EF\u4EE5\u5C06\u4F60\u7684 JavaScript \u4EE3\u7801\u6539\u6210 TypeScript \u4EE3\u7801\uFF0C\u4F46\u662F\u4F60\u4E0D\u80FD\u8BA9\u6574\u4E2A\u4E16\u754C\u90FD\u4F7F\u7528 TypeScript\u3002\u8FD9\u6B63\u662F TypeScript \u73AF\u5883\u58F0\u660E\u652F\u6301\u7684\u5730\u65B9\u3002\u6211\u5EFA\u8BAE\u4F60\u4EE5\u521B\u5EFA\u4E00\u4E2A <code>vendor.d.ts</code> \u6587\u4EF6\u4F5C\u4E3A\u5F00\u59CB\uFF08<code>.d.ts</code> \u6587\u4EF6\u6269\u5C55\u540D\u6307\u5B9A\u8FD9\u4E2A\u6587\u4EF6\u662F\u4E00\u4E2A\u58F0\u660E\u6587\u4EF6\uFF09\uFF0C\u7136\u540E\u6211\u5411\u6587\u4EF6\u91CC\u6DFB\u52A0\u4E1C\u897F\u3002\u6216\u8005\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u9488\u5BF9\u4E8E\u7279\u5B9A\u5E93\u7684\u58F0\u660E\u6587\u4EF6\uFF0C\u5982\u4E3A jquery \u521B\u5EFA <code>jquery.d.ts</code> \u6587\u4EF6\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u51E0\u4E4E\u6392\u540D\u524D 90% \u7684 JavaScript \u5E93\u7684\u58F0\u660E\u6587\u4EF6\u5B58\u5728\u4E8E <a href="https://github.com/DefinitelyTyped/DefinitelyTyped" target="_blank" rel="noopener noreferrer">DefinitelyTyped</a> \u4ED3\u5E93\u91CC\uFF0C\u5728\u521B\u5EFA\u81EA\u5DF1\u5B9A\u4E49\u7684\u58F0\u660E\u6587\u4EF6\u4E4B\u524D\uFF0C\u6211\u4EEC\u5EFA\u8BAE\u4F60\u5148\u53BB\u4ED3\u5E93\u4E2D\u5BFB\u627E\u662F\u5426\u6709\u5BF9\u5E94\u7684\u58F0\u660E\u6587\u4EF6\u3002\u5C3D\u7BA1\u5982\u6B64\uFF0C\u521B\u5EFA\u4E00\u4E2A\u58F0\u660E\u6587\u4EF6\u8FD9\u79CD\u5FEB\u901F\u4F46\u4E0D\u597D\u7684\u65B9\u5F0F\u662F\u51CF\u5C0F\u4F7F\u7528 TypeScript \u521D\u59CB\u963B\u529B\u7684\u91CD\u8981\u6B65\u9AA4</p></div><p>\u6839\u636E <code>jquery</code> \u7684\u4F7F\u7528\uFF0C\u4F60\u53EF\u4EE5\u975E\u5E38\u7B80\u5355\u5FEB\u901F\u7684\u4E3A\u5B83\u521B\u5EFA\u4E00\u4E2A\u5B9A\u4E49\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">var</span> $<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre></div><p>\u6709\u65F6\uFF0C\u4F60\u53EF\u80FD\u60F3\u5728\u67D0\u4E9B\u5185\u5BB9\uFF08\u5982 <code>jQuery</code>\uFF09\u4E0A\u6DFB\u52A0\u663E\u5F0F\u7684\u6CE8\u89E3\uFF0C\u5E76\u4E14\u4F60\u4F1A\u5728\u7C7B\u578B\u58F0\u660E\u7A7A\u95F4\u4E2D\u4F7F\u7528\u5B83\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7 type \u5173\u952E\u5B57\u5FEB\u901F\u7684\u5B9E\u73B0\u5B83\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">JQuery</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">var</span> $<span class="token operator">:</span> JQuery<span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u63D0\u4F9B\u7ED9\u4F60\u4E00\u4E2A\u66F4\u6E05\u6670\u7684\u4F7F\u7528\u6A21\u5F0F\u3002</p><p>\u4E00\u4E2A\u9AD8\u8D28\u91CF\u7684 jquery.d.ts \u5DF2\u7ECF\u5728 DefinitelyTyped \u4E2D\u5B58\u5728\u3002\u73B0\u5728\u4F60\u5DF2\u7ECF\u77E5\u9053\u5982\u4F55\u5728\u4F7F\u7528\u7B2C\u4E09\u65B9 JavaScript \u6A21\u5757\u65F6\uFF0C\u5FEB\u901F\u514B\u670D\u4ECE JavaScript \u81F3 TypeScript \u7684\u963B\u529B\u4E86\u3002\u5728\u63A5\u4E0B\u53BB\u7684\u7AE0\u8282\uFF0C\u6211\u4EEC\u5C06\u4F1A\u8BA8\u8BBA\u73AF\u5883\u58F0\u660E\u3002</p><h4 id="npm" tabindex="-1"><a class="header-anchor" href="#npm">#</a> \u7B2C\u4E09\u65B9\u7684 NPM \u6A21\u5757</h4><p>\u4E0E\u5168\u5C40\u53D8\u91CF\u58F0\u660E\u76F8\u4F3C\uFF0C\u4F60\u53EF\u4EE5\u5FEB\u901F\u7684\u5B9A\u4E49\u4E00\u4E2A\u5168\u5C40\u6A21\u5757\uFF0C\u5982\uFF1A\u5BF9\u4E8E jquery\uFF0C\u5982\u679C\u4F60\u60F3\u628A\u5B83\u4F5C\u4E3A\u4E00\u4E2A\u6A21\u5757\u6765\u4F7F\u7528\uFF08[NPM(<a href="https://www.npmjs.com/package/jquery" target="_blank" rel="noopener noreferrer">https://www.npmjs.com/package/jquery</a>)]\uFF09\uFF0C\u53EF\u4EE5\u81EA\u5DF1\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u5B9E\u73B0\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;jquery&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7136\u540E\u4F60\u5C31\u53EF\u4EE5\u5728\u5FC5\u8981\u65F6\u5BFC\u5165\u5B83\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> $ <span class="token keyword">from</span> <span class="token string">&#39;jquery&#39;</span><span class="token punctuation">;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u518D\u4E00\u6B21\u8BF4\u660E\uFF0C\u4E00\u4E2A\u9AD8\u8D28\u91CF\u7684 <code>jquery.d.ts</code> \u5DF2\u7ECF\u5728 <a href="https://github.com/DefinitelyTyped/DefinitelyTyped" target="_blank" rel="noopener noreferrer">DefinitelyTyped</a> \u4E2D\u5B58\u5728\uFF0C\u4F46\u662F\u53EF\u80FD\u5728\u4F60\u7684\u5305\u91CC\u6CA1\u6709\uFF0C\u90A3\u4E48\uFF0C\u4F60\u73B0\u5728\u6709\u4E00\u4E2A\u7B80\u5355\u5FEB\u901F\u7684\u65B9\u5F0F\u6765\u7EE7\u7EED\u8FC1\u79FB\u3002</p></div><h4 id="javascript-1" tabindex="-1"><a class="header-anchor" href="#javascript-1">#</a> \u989D\u5916\u7684\u975E JavaScript \u8D44\u6E90</h4><p>\u5728 TypeScript \u4E2D\uFF0C\u751A\u81F3\u53EF\u4EE5\u5141\u8BB8\u4F60\u5BFC\u5165\u4EFB\u4F55\u6587\u4EF6\uFF0C\u4F8B\u5982 <code>.css</code> \u6587\u4EF6\uFF08\u5982\u679C\u4F60\u4F7F\u7528\u7684\u662F webpack \u6837\u5F0F\u52A0\u8F7D\u5668\u6216 css \u6A21\u5757\uFF09\uFF0C\u4F60\u53EA\u8981\u6DFB\u52A0\u5982\u4E0B\u4EE3\u7801\uFF08\u653E\u5728 <code>global.d.ts</code>\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> $ <span class="token keyword">from</span> <span class="token string">&#39;jquery&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u73B0\u5728\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>import * as foo from &#39;./some/file.css&#39;</code>\u3002</p><p>\u4E0E\u6B64\u76F8\u4F3C\uFF0C\u5982\u679C\u4F60\u60F3\u4F7F\u7528 html \u6A21\u7248\uFF08\u4F8B\u5982\uFF1Aangular\uFF09\uFF0C\u4F60\u53EF\u4EE5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;*.html&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="types" tabindex="-1"><a class="header-anchor" href="#types">#</a> @types</h3><p>\u6BEB\u65E0\u7591\u95EE\uFF0C<a href="https://github.com/DefinitelyTyped/DefinitelyTyped" target="_blank" rel="noopener noreferrer">DefinitelyTyped</a> \u662F TypeScript \u6700\u5927\u7684\u4F18\u52BF\u4E4B\u4E00\uFF0C\u793E\u533A\u5DF2\u7ECF\u8BB0\u5F55\u4E86 90% \u7684\u9876\u7EA7 JavaScript \u5E93\u3002</p><p>\u8FD9\u610F\u5473\u7740\uFF0C\u4F60\u53EF\u4EE5\u975E\u5E38\u9AD8\u6548\u5730\u4F7F\u7528\u8FD9\u4E9B\u5E93\uFF0C\u800C\u65E0\u987B\u5728\u5355\u72EC\u7684\u7A97\u53E3\u6253\u5F00\u76F8\u5E94\u6587\u6863\u4EE5\u786E\u4FDD\u8F93\u5165\u7684\u6B63\u786E\u6027\u3002</p><h4 id="types-1" tabindex="-1"><a class="header-anchor" href="#types-1">#</a> \u4F7F\u7528 <code>@types</code></h4><p>\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>npm</code> \u6765\u5B89\u88C5\u4F7F\u7528 <code>@types</code>\uFF0C\u4F8B\u5982\u4E3A <code>jquery</code> \u6DFB\u52A0\u58F0\u660E\u6587\u4EF6\uFF1A</p><div class="language-shell"><pre><code><span class="token function">npm</span> <span class="token function">install</span> @types/jquery --save-dev
</code></pre></div><p><code>@types</code> \u652F\u6301\u5168\u5C40\u548C\u6A21\u5757\u7C7B\u578B\u5B9A\u4E49\u3002</p><h5 id="types-2" tabindex="-1"><a class="header-anchor" href="#types-2">#</a> \u5168\u5C40 <code>@types</code></h5><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CTypeScript \u4F1A\u81EA\u52A8\u5305\u542B\u652F\u6301\u5168\u5C40\u4F7F\u7528\u7684\u4EFB\u4F55\u58F0\u660E\u5B9A\u4E49\u3002\u4F8B\u5982\uFF0C\u5BF9\u4E8E jquery\uFF0C\u4F60\u5E94\u8BE5\u80FD\u591F\u5728\u9879\u76EE\u4E2D\u5F00\u59CB\u5168\u5C40\u4F7F\u7528 <code>$</code>\u3002</p><h5 id="types-3" tabindex="-1"><a class="header-anchor" href="#types-3">#</a> \u6A21\u5757 <code>@types</code></h5><p>\u5B89\u88C5\u5B8C\u4E4B\u540E\uFF0C\u4E0D\u9700\u8981\u7279\u522B\u7684\u914D\u7F6E\uFF0C\u4F60\u5C31\u53EF\u4EE5\u50CF\u4F7F\u7528\u6A21\u5757\u4E00\u6837\u4F7F\u7528\u5B83\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> $ <span class="token keyword">from</span> <span class="token string">&#39;jquery&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u73B0\u5728\u4F60\u53EF\u4EE5\u6B64\u6A21\u5757\u4E2D\u4EFB\u610F\u4F7F\u7528$\u4E86 :)</span>
</code></pre></div><h4 id="-36" tabindex="-1"><a class="header-anchor" href="#-36">#</a> \u63A7\u5236\u5168\u5C40</h4><p>\u53EF\u4EE5\u770B\u51FA\uFF0C\u5BF9\u4E8E\u67D0\u4E9B\u56E2\u961F\u800C\u8A00\uFF0C\u62E5\u6709\u5141\u8BB8\u5168\u5C40\u4F7F\u7528\u7684\u5B9A\u4E49\u662F\u4E00\u4E2A\u95EE\u9898\u3002\u56E0\u6B64\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u914D\u7F6E <code>tsconfig.json</code> \u7684 <code>compilerOptions.types</code> \u9009\u9879\uFF0C\u5F15\u5165\u6709\u610F\u4E49\u7684\u7C7B\u578B\uFF1A</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;types&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;jquery&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u4E0A\u4F8B\u6240\u793A\uFF0C\u901A\u8FC7\u914D\u7F6E <code>compilerOptions.types: [ &quot;jquery&quot; ]</code> \u540E\uFF0C\u53EA\u5141\u8BB8\u4F7F\u7528 <code>jquery</code> \u7684 <code>@types</code> \u5305\uFF0C\u5373\u4F7F\u8FD9\u4E2A\u4EBA\u5B89\u88C5\u4E86\u53E6\u4E00\u4E2A\u58F0\u660E\u6587\u4EF6\uFF0C\u6BD4\u5982 <code>npm install @types/node</code>\uFF0C\u5B83\u7684\u5168\u5C40\u53D8\u91CF\uFF08\u4F8B\u5982 <code>process</code>\uFF09\u4E5F\u4E0D\u4F1A\u6CC4\u6F0F\u5230\u4F60\u7684\u4EE3\u7801\u4E2D\uFF0C\u76F4\u5230\u4F60\u5C06\u5B83\u4EEC\u6DFB\u52A0\u5230 <code>tsconfig.json</code> \u7C7B\u578B\u9009\u9879\u3002</p><h3 id="-37" tabindex="-1"><a class="header-anchor" href="#-37">#</a> \u73AF\u5883\u58F0\u660E</h3><blockquote><p>TypeScript \u7684\u8BBE\u8BA1\u76EE\u6807\u4E4B\u4E00\u662F\u8BA9\u4F60\u5728 TypeScript \u4E2D\u5B89\u5168\u3001\u8F7B\u677E\u5730\u4F7F\u7528\u73B0\u6709\u7684 JavaScript \u5E93\uFF0CTypeScript \u901A\u8FC7\u58F0\u660E\u6587\u4EF6\u6765\u505A\u5230\u8FD9\u4E00\u70B9</p></blockquote><p>\u73AF\u5883\u58F0\u660E\u5141\u8BB8\u4F60\u5B89\u5168\u5730\u4F7F\u7528\u73B0\u6709\u7684 JavaScript \u5E93\uFF0C\u5E76\u4E14\u80FD\u8BA9\u4F60\u7684 JavaScript\u3001CoffeeScript \u6216\u8005\u5176\u4ED6\u9700\u8981\u7F16\u8BD1\u6210 JavaScript \u7684\u8BED\u8A00\u9010\u6B65\u8FC1\u79FB\u81F3 TypeScript\u3002</p><p>\u5B66\u4E60\u4E3A\u7B2C\u4E09\u65B9 JavaScript \u5E93\u7F16\u5199\u73AF\u5883\u58F0\u660E\uFF0C\u662F\u4E00\u79CD\u4E3A TypeScript \u5199\u6CE8\u89E3\u6BD4\u8F83\u597D\u7684\u5B9E\u8DF5\u65B9\u5F0F</p><h4 id="-38" tabindex="-1"><a class="header-anchor" href="#-38">#</a> \u58F0\u660E\u6587\u4EF6</h4><p>\u4F60\u53EF\u4EE5\u901A\u8FC7 declare \u5173\u952E\u5B57\u6765\u544A\u8BC9 TypeScript\uFF0C\u4F60\u6B63\u5728\u8BD5\u56FE\u8868\u8FF0\u4E00\u4E2A\u5176\u4ED6\u5730\u65B9\u5DF2\u7ECF\u5B58\u5728\u7684\u4EE3\u7801\uFF0C\u5982\uFF1A\u5199\u5728 JavaScript\u3001CoffeeScript \u6216\u8005\u662F\u50CF\u6D4F\u89C8\u5668\u548C Node.js \u8FD0\u884C\u73AF\u5883\u91CC\u7684\u4EE3\u7801\uFF1A</p><div class="language-ts"><pre><code>foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// Error: &#39;foo&#39; is not defined</span>
</code></pre></div><p>\u548C\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">var</span> foo<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// allow</span>
</code></pre></div><p>\u4F60\u53EF\u4EE5\u9009\u62E9\u628A\u8FD9\u4E9B\u58F0\u660E\u653E\u5165 <code>.ts</code> \u6216\u8005 <code>.d.ts</code> \u91CC\u3002\u5728\u4F60\u5B9E\u9645\u7684\u9879\u76EE\u91CC\uFF0C\u6211\u4EEC\u5F3A\u70C8\u5EFA\u8BAE\u4F60\u5E94\u8BE5\u628A\u58F0\u660E\u653E\u5165\u72EC\u7ACB\u7684 .<code>d.ts</code> \u91CC\uFF08\u53EF\u4EE5\u4ECE\u4E00\u4E2A\u547D\u540D\u4E3A <code>global.d.ts</code> \u6216\u8005 <code>vendor.d.ts</code> \u6587\u4EF6\u5F00\u59CB\uFF09\u3002</p><p>\u5982\u679C\u4E00\u4E2A\u6587\u4EF6\u6709\u6269\u5C55\u540D <code>.d.ts</code>\uFF0C\u8FD9\u610F\u5473\u7740\u6BCF\u4E2A\u6839\u7EA7\u522B\u7684\u58F0\u660E\u90FD\u5FC5\u987B\u4EE5 <code>declare</code> \u5173\u952E\u5B57\u4F5C\u4E3A\u524D\u7F00\u3002\u8FD9\u6709\u5229\u4E8E\u8BA9\u5F00\u53D1\u8005\u6E05\u695A\u7684\u77E5\u9053\uFF0C\u5728\u8FD9\u91CC TypeScript \u5C06\u4E0D\u4F1A\u628A\u5B83\u7F16\u8BD1\u6210\u4EFB\u4F55\u4EE3\u7801\uFF0C\u540C\u65F6\u5F00\u53D1\u8005\u9700\u8981\u786E\u4FDD\u8FD9\u4E9B\u5728\u7F16\u8BD1\u65F6\u5B58\u5728\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>\u73AF\u5883\u58F0\u660E\u5C31\u597D\u50CF\u4F60\u4E0E\u7F16\u8BD1\u5668\u4E4B\u95F4\u7684\u4E00\u4E2A\u7EA6\u5B9A\uFF0C\u5982\u679C\u5728\u7F16\u8BD1\u65F6\u5B83\u4EEC\u4E0D\u5B58\u5728\uFF0C\u4F46\u662F\u4F60\u5374\u4F7F\u7528\u4E86\u5B83\u4EEC\uFF0C\u7A0B\u5E8F\u5C06\u4F1A\u5728\u6CA1\u6709\u8B66\u544A\u7684\u60C5\u51B5\u4E0B\u4E2D\u65AD\u3002</li><li>\u73AF\u5883\u58F0\u660E\u5C31\u597D\u50CF\u662F\u4E00\u4E2A\u6587\u6863\u3002\u5982\u679C\u6E90\u6587\u4EF6\u66F4\u65B0\u4E86\uFF0C\u4F60\u5E94\u8BE5\u540C\u6B65\u66F4\u65B0\u3002\u6240\u4EE5\uFF0C\u5F53\u4F60\u5728\u8FD0\u884C\u65F6\u6709\u65B0\u7684\u884C\u4E3A\u65F6\uFF0C\u5982\u679C\u6CA1\u6709\u53BB\u66F4\u65B0\u73AF\u5883\u58F0\u660E\uFF0C\u7F16\u8BD1\u5668\u5C06\u4F1A\u62A5\u9519\u3002</li></ul></div><h4 id="-39" tabindex="-1"><a class="header-anchor" href="#-39">#</a> \u53D8\u91CF</h4><p>\u5F53\u4F60\u60F3\u544A\u8BC9 TypeScript \u7F16\u8F91\u5668\u5173\u4E8E process \u53D8\u91CF\u65F6\uFF0C\u4F60\u53EF\u4EE5\u8FD9\u4E48\u505A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">let</span> process<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4F60\u5E76\u4E0D\u9700\u8981\u4E3A <code>process</code> \u505A\u8FD9\u4E9B\uFF0C\u56E0\u4E3A\u8FD9\u5DF2\u7ECF\u5B58\u5728\u4E8E\u793E\u533A\u7EF4\u62A4\u7684 <a href="https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/node/index.d.ts" target="_blank" rel="noopener noreferrer"><code>node.d.ts</code></a></p></div><p>\u8FD9\u5141\u8BB8\u4F60\u4F7F\u7528 <code>process</code>\uFF0C\u5E76\u80FD\u6210\u529F\u901A\u8FC7 TypeScript \u7684\u7F16\u8BD1\uFF1A</p><div class="language-ts"><pre><code>process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u6211\u4EEC\u63A8\u8350\u5C3D\u53EF\u80FD\u7684\u4F7F\u7528\u63A5\u53E3\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Process</span> <span class="token punctuation">{</span>
  <span class="token function">exit</span><span class="token punctuation">(</span>code<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">declare</span> <span class="token keyword">let</span> process<span class="token operator">:</span> Process<span class="token punctuation">;</span>
</code></pre></div><p>\u56E0\u4E3A\u8FD9\u5141\u8BB8\u5176\u4ED6\u4EBA\u6269\u5145\u8FD9\u4E9B\u5168\u5C40\u53D8\u91CF\uFF0C\u5E76\u4E14\u4F1A\u544A\u8BC9 TypeScript \u6709\u5173\u4E8E\u8FD9\u4E9B\u58F0\u660E\u7684\u4FEE\u6539\u3002\u4F8B\u5982\uFF1A\u8003\u8651\u5230\u4EE5\u4E0B\u60C5\u51B5\uFF0C\u6211\u4EEC\u6DFB\u52A0\u4E00\u4E2A <code>exitWithLogging</code> \u51FD\u6570\u81F3 <code>process</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Process</span> <span class="token punctuation">{</span>
  <span class="token function">exitWithLogging</span><span class="token punctuation">(</span>code<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

process<span class="token punctuation">.</span><span class="token function-variable function">exitWithLogging</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;exiting&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>process<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u63A5\u4E0B\u6765\uFF0C\u8BA9\u6211\u4EEC\u66F4\u8BE6\u7EC6\u7684\u4E86\u89E3\u63A5\u53E3\u3002</p><h3 id="-40" tabindex="-1"><a class="header-anchor" href="#-40">#</a> \u63A5\u53E3</h3><p>\u63A5\u53E3\u8FD0\u884C\u65F6\u7684\u5F71\u54CD\u4E3A 0\u3002\u5728 TypeScript \u63A5\u53E3\u4E2D\u6709\u5F88\u591A\u65B9\u5F0F\u6765\u58F0\u660E\u53D8\u91CF\u7684\u7ED3\u6784\u3002</p><p>\u4E0B\u9762\u4E24\u4E2A\u662F\u7B49\u6548\u7684\u58F0\u660E, \u793A\u4F8B A \u4F7F\u7528\u5185\u8054\u6CE8\u89E3\uFF0C\u793A\u4F8B B \u4F7F\u7528\u63A5\u53E3\u5F62\u5F0F\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u793A\u4F8B A</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> myPoint<span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u793A\u4F8B B</span>
<span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> myPoint<span class="token operator">:</span> Point<span class="token punctuation">;</span>
</code></pre></div><p>\u793A\u4F8B B \u7684\u597D\u5904\u5728\u4E8E\uFF0C\u5982\u679C\u6709\u4EBA\u521B\u5EFA\u4E86\u4E00\u4E2A\u57FA\u4E8E <code>myPoint</code> \u7684\u5E93\u6765\u6DFB\u52A0\u65B0\u6210\u5458, \u90A3\u4E48\u4ED6\u53EF\u4EE5\u8F7B\u677E\u5C06\u6B64\u6210\u5458\u6DFB\u52A0\u5230 <code>myPoint</code> \u7684\u73B0\u6709\u58F0\u660E\u4E2D:</p><div class="language-ts"><pre><code><span class="token comment">// Lib a.d.ts</span>
<span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> myPoint<span class="token operator">:</span> Point

<span class="token comment">// Lib b.d.ts</span>
<span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  z<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token comment">// Your code</span>
myPoint<span class="token punctuation">.</span>z <span class="token comment">// Allowed!</span>
</code></pre></div><p>TypeScript \u63A5\u53E3\u662F\u5F00\u653E\u5F0F\u7684\uFF0C\u8FD9\u662F TypeScript \u7684\u4E00\u4E2A\u91CD\u8981\u539F\u5219\uFF0C\u5B83\u5141\u8BB8\u4F60\u4F7F\u7528\u63A5\u53E3\u6765\u6A21\u4EFF JavaScript \u7684\u53EF\u6269\u5C55\u6027\u3002</p><h4 id="-41" tabindex="-1"><a class="header-anchor" href="#-41">#</a> \u7C7B\u53EF\u4EE5\u5B9E\u73B0\u63A5\u53E3</h4><p>\u5982\u679C\u4F60\u5E0C\u671B\u5728\u7C7B\u4E2D\u4F7F\u7528\u5FC5\u987B\u8981\u88AB\u9075\u5FAA\u7684\u63A5\u53E3\uFF08\u7C7B\uFF09\u6216\u522B\u4EBA\u5B9A\u4E49\u7684\u5BF9\u8C61\u7ED3\u6784\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>implements</code> \u5173\u952E\u5B57\u6765\u786E\u4FDD\u5176\u517C\u5BB9\u6027\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">MyPoint</span> <span class="token keyword">implements</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// Same as Point</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u57FA\u672C\u4E0A\uFF0C\u5728 <code>implements</code>\uFF08\u5B9E\u73B0\uFF09 \u5B58\u5728\u7684\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u5916\u90E8 <code>Point</code> \u63A5\u53E3\u7684\u4EFB\u4F55\u66F4\u6539\u90FD\u5C06\u5BFC\u81F4\u4EE3\u7801\u5E93\u4E2D\u7684\u7F16\u8BD1\u9519\u8BEF\uFF0C\u56E0\u6B64\u53EF\u4EE5\u8F7B\u677E\u5730\u4F7F\u5176\u4FDD\u6301\u540C\u6B65\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  z<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// New member</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">MyPoint</span> <span class="token keyword">implements</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  <span class="token comment">// ERROR : missing member \`z\`</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre></div><p>\u6CE8\u610F\uFF0C<code>implements</code> \u9650\u5236\u4E86\u7C7B\u5B9E\u4F8B\u7684\u7ED3\u6784\uFF0C\u5982\u4E0B\u6240\u793A:</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> Point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4F46\u50CF <code>foo: Point = MyPoint</code> \u8FD9\u6837\u7684\u4EE3\u7801\uFF0C\u4E0E\u5176\u5E76\u4E0D\u662F\u4E00\u56DE\u4E8B\u3002</p><h4 id="-42" tabindex="-1"><a class="header-anchor" href="#-42">#</a> \u6CE8\u610F</h4><h5 id="-43" tabindex="-1"><a class="header-anchor" href="#-43">#</a> \u5E76\u975E\u6BCF\u4E2A\u63A5\u53E3\u90FD\u662F\u5F88\u5BB9\u6613\u5B9E\u73B0\u7684</h5><p>\u63A5\u53E3\u65E8\u5728\u58F0\u660E JavaScript \u4E2D\u53EF\u80FD\u5B58\u5728\u7684\u4EFB\u610F\u7ED3\u6784\u3002</p><p>\u601D\u8003\u4EE5\u4E0B\u4F8B\u5B50\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>new</code> \u8C03\u7528\u67D0\u4E9B\u5185\u5BB9\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Crazy</span> <span class="token punctuation">{</span>
  <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    hello<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F60\u53EF\u80FD\u4F1A\u6709\u4E0B\u9762\u8FD9\u6837\u7684\u4EE3\u7801\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">CrazyClass</span> <span class="token keyword">implements</span> <span class="token class-name">Crazy</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> hello<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Because</span>
<span class="token keyword">const</span> crazy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CrazyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// crazy would be { hello:123 }</span>

<span class="token comment">// \u8FD0\u884C\u62A5\u9519\uFF0C\u56E0\u4E3ATS\u7C7B\u578B\u68C0\u67E5\u4E0D\u4F1A\u5BF9constructor\u68C0\u67E5\uFF0C\u53EA\u4F1A\u68C0\u67E5\u548C\u5B9E\u4F8B\u76F8\u5173\u7684\u5C5E\u6027\u548C\u65B9\u6CD5</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">\u6B63\u5E38\u8FD0\u884C</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Crazy</span> <span class="token punctuation">{</span>
  <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    hello<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">ICrazyClass</span> <span class="token punctuation">{</span>
  hello<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">CrazyClass</span> <span class="token keyword">implements</span> <span class="token class-name">Crazy</span> <span class="token punctuation">{</span>
  hello<span class="token operator">:</span> <span class="token builtin">number</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>hello <span class="token operator">=</span> <span class="token number">123</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">ct1</span><span class="token punctuation">(</span>ct<span class="token operator">:</span> Crazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Because</span>
<span class="token keyword">const</span> crazy <span class="token operator">=</span> <span class="token function">ct1</span><span class="token punctuation">(</span>CrazyClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></div><p>\u4F60\u53EF\u4EE5\u4F7F\u7528\u63A5\u53E3\u58F0\u660E\u6240\u6709\u201C\u75AF\u72C2\u7684\u201D\u7684 JavaScript \u4EE3\u7801\uFF0C\u751A\u81F3\u53EF\u4EE5\u5B89\u5168\u5730\u5728 TypeScript \u4E2D\u4F7F\u7528\u5B83\u4EEC\u3002\u4F46\u8FD9\u5E76\u4E0D\u610F\u5473\u7740\u4F60\u53EF\u4EE5\u4F7F\u7528 TypeScript \u7C7B\u6765\u5B9E\u73B0\u5B83\u4EEC\u3002</p><h3 id="-44" tabindex="-1"><a class="header-anchor" href="#-44">#</a> \u679A\u4E3E</h3><p>\u679A\u4E3E\u662F\u7EC4\u7EC7\u6536\u96C6\u6709\u5173\u8054\u53D8\u91CF\u7684\u4E00\u79CD\u65B9\u5F0F\uFF0C\u8BB8\u591A\u7A0B\u5E8F\u8BED\u8A00\uFF08\u5982\uFF1Ac/c#/Java\uFF09\u90FD\u6709\u679A\u4E3E\u6570\u636E\u7C7B\u578B\u3002\u4E0B\u9762\u662F\u5B9A\u4E49\u4E00\u4E2A TypeScript \u679A\u4E3E\u7C7B\u578B\u7684\u65B9\u5F0F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> CardSuit <span class="token punctuation">{</span>
  Clubs<span class="token punctuation">,</span>
  Diamonds<span class="token punctuation">,</span>
  Hearts<span class="token punctuation">,</span>
  Spades
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5355\u7684\u4F7F\u7528\u679A\u4E3E\u7C7B\u578B</span>
<span class="token keyword">let</span> Card <span class="token operator">=</span> CardSuit<span class="token punctuation">.</span>Clubs<span class="token punctuation">;</span>

<span class="token comment">// \u7C7B\u578B\u5B89\u5168</span>
Card <span class="token operator">=</span> <span class="token string">&#39;not a member of card suit&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error: string \u4E0D\u80FD\u8D4B\u503C\u7ED9 \`CardSuit\` \u7C7B\u578B</span>
</code></pre></div><p>\u8FD9\u4E9B\u679A\u4E3E\u7C7B\u578B\u7684\u503C\u90FD\u662F\u6570\u5B57\u7C7B\u578B\uFF0C\u56E0\u6B64\u5B83\u4EEC\u88AB\u79F0\u4E3A\u6570\u5B57\u7C7B\u578B\u679A\u4E3E\u3002</p><h4 id="-45" tabindex="-1"><a class="header-anchor" href="#-45">#</a> \u6570\u5B57\u7C7B\u578B\u679A\u4E3E\u4E0E\u6570\u5B57\u7C7B\u578B</h4><p>\u6570\u5B57\u7C7B\u578B\u679A\u4E3E\uFF0C\u5141\u8BB8\u6211\u4EEC\u5C06\u6570\u5B57\u7C7B\u578B\u6216\u8005\u5176\u4ED6\u4EFB\u4F55\u4E0E\u6570\u5B57\u7C7B\u578B\u517C\u5BB9\u7684\u7C7B\u578B\u8D4B\u503C\u7ED9\u679A\u4E3E\u7C7B\u578B\u7684\u5B9E\u4F8B\u3002</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red<span class="token punctuation">,</span>
  Green<span class="token punctuation">,</span>
  Blue
<span class="token punctuation">}</span>

<span class="token keyword">let</span> col <span class="token operator">=</span> Color<span class="token punctuation">.</span>Red<span class="token punctuation">;</span>
col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u6709\u6548\u7684\uFF0C\u8FD9\u4E5F\u662F Color.Red</span>
</code></pre></div><h4 id="-46" tabindex="-1"><a class="header-anchor" href="#-46">#</a> \u6570\u5B57\u7C7B\u578B\u679A\u4E3E\u4E0E\u81EA\u8D1F\u5E8A\u7C7B\u578B</h4><p>\u5728\u6211\u4EEC\u7EE7\u7EED\u6DF1\u5165\u5B66\u4E60\u679A\u4E3E\u7C7B\u578B\u4E4B\u524D\uFF0C\u5148\u6765\u770B\u770B\u5B83\u7F16\u8BD1\u7684 JavaScript \u5427\uFF0C\u4EE5\u4E0B\u662F\u4E00\u4E2A\u7B80\u5355\u7684 TypeScript \u679A\u4E3E\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Tristate <span class="token punctuation">{</span>
  False<span class="token punctuation">,</span>
  True<span class="token punctuation">,</span>
  Unknown
<span class="token punctuation">}</span>
</code></pre></div><p>\u5176\u88AB\u7F16\u8BD1\u6210 JavaScript \u540E\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">var</span> Tristate<span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;False&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;False&#39;</span><span class="token punctuation">;</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;True&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;True&#39;</span><span class="token punctuation">;</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;Unknown&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Unknown&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Tristate <span class="token operator">||</span> <span class="token punctuation">(</span>Tristate <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5148\u8BA9\u6211\u4EEC\u805A\u7126 <code>Tristate[Tristate[&#39;False&#39;] = 0] = &#39;False&#39;</code> \u8FD9\u884C\u4EE3\u7801\uFF0C\u5176\u4E2D <code>Tristate[&#39;False&#39;] = 0</code>\u7684\u610F\u601D\u662F\u5C06 <code>Tristate</code> \u5BF9\u8C61\u91CC\u7684 <code>False</code> \u6210\u5458\u503C\u8BBE\u7F6E\u4E3A <code>0</code>\u3002\u6CE8\u610F\uFF0CJavaScript \u8D4B\u503C\u8FD0\u7B97\u7B26\u8FD4\u56DE\u7684\u503C\u662F\u88AB\u8D4B\u4E88\u7684\u503C\uFF08\u5728\u6B64\u4F8B\u5B50\u4E2D\u662F <code>0</code>\uFF09\uFF0C\u56E0\u6B64\u4E0B\u4E00\u6B21 JavaScript \u8FD0\u884C\u65F6\u6267\u884C\u7684\u4EE3\u7801\u662F <code>Tristate[0] = &#39;False&#39;</code>\u3002\u610F\u5473\u7740\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>Tristate</code> \u53D8\u91CF\u6765\u628A\u5B57\u7B26\u4E32\u679A\u4E3E\u7C7B\u578B\u6539\u9020\u6210\u4E00\u4E2A\u6570\u5B57\u6216\u8005\u662F\u6570\u5B57\u7C7B\u578B\u7684\u679A\u4E3E\u7C7B\u578B\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Tristate <span class="token punctuation">{</span>
  False<span class="token punctuation">,</span>
  True<span class="token punctuation">,</span>
  Unknown
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;False&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;False&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span>Tristate<span class="token punctuation">.</span>False<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;False&#39; because \`Tristate.False == 0\`</span>
</code></pre></div><h4 id="-47" tabindex="-1"><a class="header-anchor" href="#-47">#</a> \u6539\u53D8\u4E0E\u6570\u5B57\u679A\u4E3E\u5173\u8054\u7684\u6570\u5B57</h4><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u7B2C\u4E00\u4E2A\u679A\u4E3E\u503C\u662F <code>0</code>\uFF0C\u7136\u540E\u6BCF\u4E2A\u540E\u7EED\u503C\u4F9D\u6B21\u9012\u589E 1\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red<span class="token punctuation">,</span> <span class="token comment">// 0</span>
  Green<span class="token punctuation">,</span> <span class="token comment">// 1</span>
  Blue <span class="token comment">// 2</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F46\u662F\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u7279\u5B9A\u7684\u8D4B\u503C\u6765\u6539\u53D8\u7ED9\u4EFB\u4F55\u679A\u4E3E\u6210\u5458\u5173\u8054\u7684\u6570\u5B57\uFF0C\u5982\u4E0B\u4F8B\u5B50\uFF0C\u6211\u4EEC\u4ECE 3 \u5F00\u59CB\u4F9D\u6B21\u9012\u589E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  DarkRed <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">// 3</span>
  DarkGreen<span class="token punctuation">,</span> <span class="token comment">// 4</span>
  DarkBlue <span class="token comment">// 5</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u6211\u901A\u5E38\u7528 <code>= 1</code> \u521D\u59CB\u5316\uFF0C\u56E0\u4E3A\u5728\u679A\u4E3E\u7C7B\u578B\u503C\u91CC\uFF0C\u5B83\u80FD\u8BA9\u4F60\u505A\u4E00\u4E2A\u5B89\u5168\u53EF\u9760\u7684\u68C0\u67E5\u3002</p></div><h4 id="-48" tabindex="-1"><a class="header-anchor" href="#-48">#</a> \u4F7F\u7528\u6570\u5B57\u7C7B\u578B\u4F5C\u4E3A\u6807\u5FD7</h4><p>\u679A\u4E3E\u7684\u4E00\u4E2A\u5F88\u597D\u7528\u9014\u662F\u4F7F\u7528\u679A\u4E3E\u4F5C\u4E3A\u6807\u5FD7\u3002\u8FD9\u4E9B\u6807\u5FD7\u5141\u8BB8\u4F60\u68C0\u67E5\u4E00\u7EC4\u6761\u4EF6\u4E2D\u7684\u67D0\u4E2A\u6761\u4EF6\u662F\u5426\u4E3A\u771F\u3002\u8003\u8651\u5982\u4E0B\u4EE3\u7801\u4F8B\u5B50\uFF0C\u6211\u4EEC\u6709\u4E00\u7EC4\u5173\u4E8E animals \u7684\u5C5E\u6027\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> AnimalFlags <span class="token punctuation">{</span>
  None        <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  HasClaws    <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span>
  CanFly      <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span>
  EatsFish    <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
  Endangered  <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86\u5DE6\u79FB\u7684\u4F4D\u8FD0\u7B97\u7B26\uFF0C\u5C06\u6570\u5B57 <code>1</code> \u7684\u4E8C\u8FDB\u5236\u5411\u5DE6\u79FB\u52A8\u4F4D\u7F6E\u5F97\u5230\u6570\u5B57 <code>0001</code>\u3001<code>0010</code>\u3001<code>0100</code> \u548C <code>1000</code>\uFF08\u6362\u6210\u5341\u8FDB\u5236\u7ED3\u679C\u662F\uFF1A1, 2, 4, 8\uFF09\u3002\u5F53\u4F60\u5728\u4F7F\u7528\u8FD9\u79CD\u6807\u8BB0\u7684\u65F6\u5019\uFF0C\u8FD9\u4E9B\u4F4D\u8FD0\u7B97\u7B26 <code>|</code> (\u6216)\u3001<code>&amp;</code> \uFF08\u548C\uFF09\u3001<code>~ </code>\uFF08\u975E\uFF09\u5C06\u4F1A\u662F\u4F60\u6700\u597D\u7684\u670B\u53CB\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> AnimalFlags <span class="token punctuation">{</span>
  None        <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  HasClaws    <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span>
  CanFly      <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  flags<span class="token operator">:</span> AnimalFlags<span class="token punctuation">;</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token operator">:</span> Animal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> animalFlags <span class="token operator">=</span> animal<span class="token punctuation">.</span>flags<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>animalFlags <span class="token operator">&amp;</span> AnimalFlags<span class="token punctuation">.</span>HasClaws<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;animal has claws&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>animalFlags <span class="token operator">&amp;</span> AnimalFlags<span class="token punctuation">.</span>CanFly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;animal can fly&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>animalFlags <span class="token operator">==</span> AnimalFlags<span class="token punctuation">.</span>None<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nothing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> animal <span class="token operator">=</span> <span class="token punctuation">{</span> flags<span class="token operator">:</span> AnimalFlags<span class="token punctuation">.</span>None <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// nothing</span>
animal<span class="token punctuation">.</span>flags <span class="token operator">|=</span> AnimalFlags<span class="token punctuation">.</span>HasClaws<span class="token punctuation">;</span>
<span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// animal has claws</span>
animal<span class="token punctuation">.</span>flags <span class="token operator">&amp;=</span> <span class="token operator">~</span>AnimalFlags<span class="token punctuation">.</span>HasClaws<span class="token punctuation">;</span>
<span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// nothing</span>
animal<span class="token punctuation">.</span>flags <span class="token operator">|=</span> AnimalFlags<span class="token punctuation">.</span>HasClaws <span class="token operator">|</span> AnimalFlags<span class="token punctuation">.</span>CanFly<span class="token punctuation">;</span>
<span class="token function">printAnimalAbilities</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// animal has claws, animal can fly</span>
</code></pre></div><p>\u5728\u8FD9\u91CC\uFF1A</p><ul><li>\u6211\u4EEC\u4F7F\u7528 <code>|=</code> \u6765\u6DFB\u52A0\u4E00\u4E2A\u6807\u5FD7\uFF1B</li><li>\u7EC4\u5408\u4F7F\u7528 <code>&amp;=</code> \u548C <code>~</code> \u6765\u6E05\u7406\u4E00\u4E2A\u6807\u5FD7\uFF1B</li><li><code>|</code> \u6765\u5408\u5E76\u6807\u5FD7\u3002</li></ul><div class="language-ts"><pre><code><span class="token keyword">enum</span> AnimalFlags <span class="token punctuation">{</span>
  None        <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  HasClaws    <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span>
  CanFly      <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span>
  EatsFish    <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
  Endangered  <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">,</span>

  EndangeredFlyingClawedFishEating <span class="token operator">=</span> HasClaws <span class="token operator">|</span> CanFly <span class="token operator">|</span> EatsFish <span class="token operator">|</span> Endangered
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-49" tabindex="-1"><a class="header-anchor" href="#-49">#</a> \u5B57\u7B26\u4E32\u679A\u4E3E</h4><p>\u5728\u4E0A\u6587\u4E2D\uFF0C\u6211\u4EEC\u53EA\u770B\u5230\u4E86\u6570\u5B57\u7C7B\u578B\u7684\u679A\u4E3E\uFF0C\u5B9E\u9645\u4E0A\uFF0C\u679A\u4E3E\u7C7B\u578B\u7684\u503C\uFF0C\u4E5F\u53EF\u4EE5\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\u3002</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">enum</span> EvidenceTypeEnum <span class="token punctuation">{</span>
  <span class="token constant">UNKNOWN</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">PASSPORT_VISA</span> <span class="token operator">=</span> <span class="token string">&#39;passport_visa&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">PASSPORT</span> <span class="token operator">=</span> <span class="token string">&#39;passport&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">SIGHTED_STUDENT_CARD</span> <span class="token operator">=</span> <span class="token string">&#39;sighted_tertiary_edu_id&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">SIGHTED_KEYPASS_CARD</span> <span class="token operator">=</span> <span class="token string">&#39;sighted_keypass_card&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">SIGHTED_PROOF_OF_AGE_CARD</span> <span class="token operator">=</span> <span class="token string">&#39;sighted_proof_of_age_card&#39;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u4E9B\u53EF\u4EE5\u66F4\u5BB9\u6613\u88AB\u5904\u7406\u548C\u8C03\u8BD5\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u63D0\u4F9B\u6709\u610F\u4E49/\u53EF\u8C03\u8BD5\u7684\u5B57\u7B26\u4E32\u3002</p><p>\u4F60\u53EF\u4EE5\u4F7F\u7528\u5B83\u4EEC\u7528\u4E8E\u7B80\u5355\u7684\u5B57\u7B26\u4E32\u6BD4\u8F83\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// Where \`someStringFromBackend\` will be &#39;&#39; | &#39;passport_visa&#39; | &#39;passport&#39; ... etc.</span>
<span class="token keyword">const</span> someStringFromBackend<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;passport&quot;</span>
<span class="token keyword">const</span> value <span class="token operator">=</span> someStringFromBackend <span class="token keyword">as</span> EvidenceTypeEnum<span class="token punctuation">;</span>

<span class="token comment">// Sample use in code</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> EvidenceTypeEnum<span class="token punctuation">.</span><span class="token constant">PASSPORT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You provided a passport&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \`passport\`</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-50" tabindex="-1"><a class="header-anchor" href="#-50">#</a> \u5E38\u91CF\u679A\u4E3E</h4><div class="language-ts"><pre><code><span class="token keyword">enum</span> Tristate <span class="token punctuation">{</span>
  False<span class="token punctuation">,</span>
  True<span class="token punctuation">,</span>
  Unknown
<span class="token punctuation">}</span>

<span class="token keyword">const</span> lie <span class="token operator">=</span> Tristate<span class="token punctuation">.</span>False<span class="token punctuation">;</span>
</code></pre></div><p><code>const lie = Tristate.False</code> \u4F1A\u88AB\u7F16\u8BD1\u6210 JavaScript <code>let lie = Tristate.False</code> (\u662F\u7684\uFF0C\u7F16\u8BD1\u540E\u4E0E\u7F16\u8BD1\u524D\uFF0C\u51E0\u4E4E\u76F8\u540C)\u3002\u8FD9\u610F\u5473\u7740\u5728\u8FD0\u884C\u6267\u884C\u65F6\uFF0C\u5B83\u5C06\u4F1A\u67E5\u627E\u53D8\u91CF <code>Tristate</code> \u548C <code>Tristate.False</code>\u3002\u5728\u6B64\u5904\u83B7\u5F97\u6027\u80FD\u63D0\u5347\u7684\u4E00\u4E2A\u5C0F\u6280\u5DE7\u662F\u4F7F\u7528\u5E38\u91CF\u679A\u4E3E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token keyword">enum</span> Tristate <span class="token punctuation">{</span>
  False<span class="token punctuation">,</span>
  True<span class="token punctuation">,</span>
  Unknown
<span class="token punctuation">}</span>

<span class="token keyword">const</span> lie <span class="token operator">=</span> Tristate<span class="token punctuation">.</span>False<span class="token punctuation">;</span>
</code></pre></div><p>\u5C06\u4F1A\u88AB\u7F16\u8BD1\u6210\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> lie <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7F16\u8BD1\u5668\u5C06\u4F1A\uFF1A</p><ul><li>\u5185\u8054\u679A\u4E3E\u7684\u4EFB\u4F55\u7528\u6CD5\uFF08<code>0</code> \u800C\u4E0D\u662F <code>Tristate.False</code>\uFF09\uFF1B</li><li>\u4E0D\u4F1A\u4E3A\u679A\u4E3E\u7C7B\u578B\u7F16\u8BD1\u6210\u4EFB\u4F55 JavaScript\uFF08\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u8FD0\u884C\u65F6\u6CA1\u6709 <code>Tristate</code> \u53D8\u91CF\uFF09\uFF0C\u56E0\u4E3A\u5B83\u4F7F\u7528\u5185\u8054\u8BED\u6CD5\u3002</li></ul><h5 id="preserveconstenums" tabindex="-1"><a class="header-anchor" href="#preserveconstenums">#</a> \u5E38\u91CF\u679A\u4E3E <code>preserveConstEnums</code> \u9009\u9879</h5><p>\u4F7F\u7528\u5185\u8054\u8BED\u6CD5\u5BF9\u6027\u80FD\u6709\u660E\u663E\u7684\u63D0\u5347\u4F5C\u7528\u3002\u8FD0\u884C\u65F6\u6CA1\u6709 <code>Tristate</code> \u53D8\u91CF\u7684\u4E8B\u5B9E\uFF0C\u662F\u56E0\u4E3A\u7F16\u8BD1\u5668\u5E2E\u52A9\u4F60\u628A\u4E00\u4E9B\u5728\u8FD0\u884C\u65F6\u6CA1\u6709\u7528\u5230\u7684\u4E0D\u7F16\u8BD1\u6210 JavaScript\u3002\u7136\u800C\uFF0C\u4F60\u53EF\u80FD\u60F3\u8BA9\u7F16\u8BD1\u5668\u4ECD\u7136\u628A\u679A\u4E3E\u7C7B\u578B\u7F16\u8BD1\u6210 JavaScript\uFF0C\u7528\u4E8E\u5982\u4E0A\u4F8B\u5B50\u4E2D\u4ECE\u5B57\u7B26\u4E32\u5230\u6570\u5B57\uFF0C\u6216\u8005\u662F\u4ECE\u6570\u5B57\u5230\u5B57\u7B26\u4E32\u7684\u67E5\u627E\u3002\u5728\u8FD9\u79CD\u60C5\u666F\u4E0B\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u7F16\u8BD1\u9009\u9879 <code>--preserveConstEnums</code>\uFF0C\u5B83\u4F1A\u7F16\u8BD1\u51FA <code>var Tristate</code> \u7684\u5B9A\u4E49\uFF0C\u56E0\u6B64\u4F60\u5728\u8FD0\u884C\u65F6\uFF0C\u624B\u52A8\u4F7F\u7528 <code>Tristate[&#39;False&#39;]</code> \u548C <code>Tristate[0]</code>\u3002\u5E76\u4E14\u8FD9\u4E0D\u4F1A\u4EE5\u4EFB\u4F55\u65B9\u5F0F\u5F71\u54CD\u5185\u8054\u3002</p><h4 id="-51" tabindex="-1"><a class="header-anchor" href="#-51">#</a> \u6709\u9759\u6001\u65B9\u6CD5\u7684\u679A\u4E3E</h4><p>\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>enum</code> + <code>namespace</code> \u7684\u58F0\u660E\u7684\u65B9\u5F0F\u5411\u679A\u4E3E\u7C7B\u578B\u6DFB\u52A0\u9759\u6001\u65B9\u6CD5\u3002\u5982\u4E0B\u4F8B\u6240\u793A\uFF0C\u6211\u4EEC\u5C06\u9759\u6001\u6210\u5458 <code>isBusinessDay</code> \u6DFB\u52A0\u5230\u679A\u4E3E\u4E0A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Weekday <span class="token punctuation">{</span>
  Monday<span class="token punctuation">,</span>
  Tuesday<span class="token punctuation">,</span>
  Wednesday<span class="token punctuation">,</span>
  Thursday<span class="token punctuation">,</span>
  Friday<span class="token punctuation">,</span>
  Saturday<span class="token punctuation">,</span>
  Sunday
<span class="token punctuation">}</span>

<span class="token keyword">namespace</span> Weekday <span class="token punctuation">{</span>
  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isBusinessDay</span><span class="token punctuation">(</span>day<span class="token operator">:</span> Weekday<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> Weekday<span class="token punctuation">.</span>Saturday<span class="token operator">:</span>
      <span class="token keyword">case</span> Weekday<span class="token punctuation">.</span>Sunday<span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> mon <span class="token operator">=</span> Weekday<span class="token punctuation">.</span>Monday<span class="token punctuation">;</span>
<span class="token keyword">const</span> sun <span class="token operator">=</span> Weekday<span class="token punctuation">.</span>Sunday<span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Weekday<span class="token punctuation">.</span><span class="token function">isBusinessDay</span><span class="token punctuation">(</span>mon<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Weekday<span class="token punctuation">.</span><span class="token function">isBusinessDay</span><span class="token punctuation">(</span>sun<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="-52" tabindex="-1"><a class="header-anchor" href="#-52">#</a> \u5F00\u653E\u5F0F\u679A\u4E3E</h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4F60\u53EA\u6709\u5728\u4E0D\u4F7F\u7528\u6A21\u5757\u65F6\uFF0C\u5F00\u653E\u5F0F\u7684\u679A\u4E3E\u624D\u6709\u610F\u4E49\uFF0C\u4F60\u5E94\u8BE5\u4F7F\u7528\u6A21\u5757\uFF0C\u56E0\u6B64\u8FD9\u90E8\u5206\u5728\u6587\u7AE0\u6700\u540E\u3002</p></div><p>\u8BA9\u6211\u4EEC\u518D\u4E00\u6B21\u770B\u770B\u7F16\u8BD1\u6210 JavaScript \u7684\u679A\u4E3E\u662F\u4EC0\u4E48\u6837\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">var</span> Tristate<span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;False&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;False&#39;</span><span class="token punctuation">;</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;True&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;True&#39;</span><span class="token punctuation">;</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;Unknown&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Unknown&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Tristate <span class="token operator">||</span> <span class="token punctuation">(</span>Tristate <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u6211\u4EEC\u5DF2\u7ECF\u89E3\u91CA\u4E86 <code>Tristate[Tristate[&#39;False&#39;] = 0] = &#39;False&#39;</code> \u90E8\u5206\uFF0C\u73B0\u5728\u6211\u4EEC\u6765\u770B\u770B\u5305\u88F9\u51FD\u6570 <code>(function (Tristate) { /* code here */})(Tristate || (Tristate = {}))</code>\uFF0C\u7279\u522B\u662F <code>(Tristate || (Tristate = {}))</code> \u90E8\u5206\u3002\u8FD9\u6355\u83B7\u4E86\u4E00\u4E2A\u5C40\u90E8\u53D8\u91CF <code>TriState</code>\uFF0C\u5B83\u8981\u4E48\u6307\u5411\u5DF2\u7ECF\u5B9A\u4E49\u7684 <code>TriState</code> \u503C\uFF0C\u8981\u4E48\u4F7F\u7528\u4E00\u4E2A\u65B0\u7684\u7A7A\u5BF9\u8C61\u6765\u521D\u59CB\u5316\u5B83\u3002</p><p>\u8FD9\u610F\u5473\u7740\u4F60\u53EF\u4EE5\u8DE8\u591A\u4E2A\u6587\u4EF6\u62C6\u5206\uFF08\u548C\u6269\u5C55\uFF09\u679A\u4E3E\u5B9A\u4E49\uFF0C\u5982\u4E0B\u6240\u793A\uFF0C\u4F60\u53EF\u4EE5\u628A <code>Color</code> \u7684\u5B9A\u4E49\u62C6\u5206\u81F3\u4E24\u4E2A\u5757\u4E2D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red<span class="token punctuation">,</span>
  Green<span class="token punctuation">,</span>
  Blue
<span class="token punctuation">}</span>

<span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  DarkRed <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
  DarkGreen<span class="token punctuation">,</span>
  DarkBlue
<span class="token punctuation">}</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4F60\u5E94\u8BE5\u5728\u679A\u4E3E\u7684\u5EF6\u7EED\u5757\u4E2D\uFF0C\u91CD\u65B0\u521D\u59CB\u5316\u7B2C\u4E00\u4E2A\u6210\u5458\uFF08\u6B64\u5904\u4E3A <code>DarkRed = 3</code>\uFF09\uFF0C\u4F7F\u751F\u6210\u7684\u4EE3\u7801\u4E0D\u7834\u574F\u5148\u524D\u5B9A\u4E49\u7684\u503C\uFF08\u53730\u30011...\u7B49\u503C\uFF09\u3002\u5982\u679C\u60A8\u4ECD\u7136\u4E0D\u8FD9\u6837\u505A\uFF0CTypeScript \u5C06\u4F1A\u53D1\u51FA\u8B66\u544A\uFF08\u9519\u8BEF\u4FE1\u606F\uFF1A<code>In an enum with multiple declarations, only one declaration can omit an initializer for its first enum element.</code>\uFF09\u3002</p></div><h3 id="libdts" tabindex="-1"><a class="header-anchor" href="#libdts">#</a> <code>lib.d.ts</code></h3><p>\u5F53\u4F60\u5B89\u88C5 <code>TypeScript</code> \u65F6\uFF0C\u4F1A\u987A\u5E26\u5B89\u88C5\u4E00\u4E2A <code>lib.d.ts</code> \u58F0\u660E\u6587\u4EF6\u3002\u8FD9\u4E2A\u6587\u4EF6\u5305\u542B JavaScript \u8FD0\u884C\u65F6\u4EE5\u53CA DOM \u4E2D\u5B58\u5728\u5404\u79CD\u5E38\u89C1\u7684\u73AF\u5883\u58F0\u660E\u3002</p><ul><li>\u5B83\u81EA\u52A8\u5305\u542B\u5728 <code>TypeScript</code> \u9879\u76EE\u7684\u7F16\u8BD1\u4E0A\u4E0B\u6587\u4E2D\uFF1B</li><li>\u5B83\u80FD\u8BA9\u4F60\u5FEB\u901F\u5F00\u59CB\u4E66\u5199\u7ECF\u8FC7\u7C7B\u578B\u68C0\u67E5\u7684 JavaScript \u4EE3\u7801\u3002</li></ul><p>\u4F60\u53EF\u4EE5\u901A\u8FC7\u6307\u5B9A <code>--noLib</code> \u7684\u7F16\u8BD1\u5668\u547D\u4EE4\u884C\u6807\u5FD7\uFF08\u6216\u8005\u5728 <code>tsconfig.json</code> \u4E2D\u6307\u5B9A\u9009\u9879 <code>noLib: true</code>\uFF09\u4ECE\u4E0A\u4E0B\u6587\u4E2D\u6392\u9664\u6B64\u6587\u4EF6\u3002</p><h4 id="-53" tabindex="-1"><a class="header-anchor" href="#-53">#</a> \u4F7F\u7528\u4F8B\u5B50</h4><p>\u770B\u5982\u4E0B\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u6BB5\u4EE3\u7801\u7684\u7C7B\u578B\u68C0\u67E5\u6B63\u5E38\uFF0C\u56E0\u4E3A <code>lib.d.ts</code> \u4E3A\u6240\u6709 JavaScript \u5BF9\u8C61\u5B9A\u4E49\u4E86 <code>toString</code> \u65B9\u6CD5\u3002</p><p>\u5982\u679C\u4F60\u5728 <code>noLib</code> \u9009\u9879\u4E0B\uFF0C\u4F7F\u7528\u76F8\u540C\u7684\u4EE3\u7801\uFF0C\u8FD9\u5C06\u4F1A\u51FA\u73B0\u7C7B\u578B\u68C0\u67E5\u9519\u8BEF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u5C5E\u6027 toString \u4E0D\u5B58\u5728\u7C7B\u578B number \u4E0A</span>
</code></pre></div><p>\u73B0\u5728\u4F60\u5DF2\u7ECF\u7406\u89E3\u4E86 <code>lib.d.ts</code> \u7684\u91CD\u8981\u6027\uFF0C\u81F3\u4E8E\u5B83\u7684\u5185\u5BB9\u662F\u600E\u4E48\u6837\u7684\uFF0C\u6211\u4EEC\u63A5\u4E0B\u6765\u5C06\u4F1A\u89E3\u91CA\u3002</p><h4 id="libdts-1" tabindex="-1"><a class="header-anchor" href="#libdts-1">#</a> \u89C2\u5BDF <code>lib.d.ts</code> \u7684\u5185\u5BB9</h4><p><code>lib.d.ts</code> \u7684\u5185\u5BB9\u4E3B\u8981\u662F\u4E00\u4E9B\u53D8\u91CF\u58F0\u660E\uFF08\u5982\uFF1A<code>window</code>\u3001<code>document</code>\u3001<code>math</code>\uFF09\u548C\u4E00\u4E9B\u7C7B\u4F3C\u7684\u63A5\u53E3\u58F0\u660E\uFF08\u5982\uFF1A<code>Window</code>\u3001<code>Document</code>\u3001<code>Math</code>\uFF09\u3002</p><p>\u5BFB\u627E\u4EE3\u7801\u7C7B\u578B\uFF08\u5982\uFF1A<code>Math.floor</code>\uFF09\u7684\u6700\u7B80\u5355\u65B9\u5F0F\u662F\u4F7F\u7528 IDE \u7684 <code>F12</code>\uFF08\u8DF3\u8F6C\u5230\u5B9A\u4E49\uFF09\u3002</p><p>\u8BA9\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u53D8\u91CF\u58F0\u660E\u7684\u793A\u4F8B\uFF0C\u5982 <code>window</code> \u88AB\u5B9A\u4E49\u4E3A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">var</span> window<span class="token operator">:</span> Window<span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u53EA\u662F\u4E00\u4E2A\u7B80\u5355\u7684 <code>declare var</code>\uFF0C\u540E\u9762\u8DDF\u4E00\u4E2A\u53D8\u91CF\u540D\u79F0\uFF08<code>window</code>\uFF09\u548C\u4E00\u4E2A\u7528\u6765\u7C7B\u578B\u6CE8\u89E3\u7684\u63A5\u53E3\uFF08<code>Window</code>\uFF09\uFF0C\u8FD9\u4E9B\u53D8\u91CF\u901A\u5E38\u6307\u5411\u4E00\u4E9B\u5168\u5C40\u7684\u63A5\u53E3\uFF0C\u4F8B\u5982\uFF0C\u4EE5\u4E0B\u662F <code>Window</code> \u63A5\u53E3\u7684\u4E00\u5C0F\u90E8\u5206\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Window</span>
  <span class="token keyword">extends</span> <span class="token class-name">EventTarget</span><span class="token punctuation">,</span>
    WindowTimers<span class="token punctuation">,</span>
    WindowSessionStorage<span class="token punctuation">,</span>
    WindowLocalStorage<span class="token punctuation">,</span>
    WindowConsole<span class="token punctuation">,</span>
    GlobalEventHandlers<span class="token punctuation">,</span>
    IDBEnvironment<span class="token punctuation">,</span>
    WindowBase64 <span class="token punctuation">{</span>
  animationStartTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  applicationCache<span class="token operator">:</span> ApplicationCache<span class="token punctuation">;</span>
  clientInformation<span class="token operator">:</span> Navigator<span class="token punctuation">;</span>
  closed<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  crypto<span class="token operator">:</span> Crypto<span class="token punctuation">;</span>
  <span class="token comment">// so on and so forth...</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F60\u53EF\u4EE5\u5728\u8FD9\u4E9B\u63A5\u53E3\u91CC\u770B\u5230\u5927\u91CF\u7684\u7C7B\u578B\u4FE1\u606F\uFF0C\u5F53\u4F60\u4E0D\u4F7F\u7528 TypeScript \u65F6\uFF0C\u4F60\u9700\u8981\u5C06\u5B83\u4EEC\u4FDD\u5B58\u5728\u4F60\u7684\u5927\u8111\u91CC\u3002\u73B0\u5728\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>intellisense</code> \u4E4B\u7C7B\u4E1C\u897F\uFF0C\u4ECE\u800C\u53EF\u4EE5\u51CF\u5C11\u5BF9\u77E5\u8BC6\u7684\u8BB0\u5FC6\u3002</p><p>\u4F7F\u7528\u8FD9\u4E9B\u5168\u5C40\u53D8\u91CF\u662F\u6709\u5229\u7684\u3002\u5728\u4E0D\u66F4\u6539 <code>lib.d.ts</code> \u7684\u60C5\u51B5\u4E0B\uFF0C\u5B83\u53EF\u4EE5\u8BA9\u4F60\u6DFB\u52A0\u989D\u5916\u7684\u5C5E\u6027\u3002\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5C06\u4ECB\u7ECD\u8FD9\u4E9B\u6982\u5FF5\u3002</p><h4 id="-54" tabindex="-1"><a class="header-anchor" href="#-54">#</a> \u4FEE\u6539\u539F\u59CB\u7C7B\u578B</h4><p>\u5728 TypeScript \u4E2D\uFF0C\u63A5\u53E3\u662F\u5F00\u653E\u5F0F\u7684\uFF0C\u8FD9\u610F\u5473\u7740\u5F53\u4F60\u60F3\u4F7F\u7528\u4E0D\u5B58\u5728\u7684\u6210\u5458\u65F6\uFF0C\u53EA\u9700\u8981\u5C06\u5B83\u4EEC\u6DFB\u52A0\u81F3 <code>lib.d.ts</code> \u4E2D\u7684\u63A5\u53E3\u58F0\u660E\u4E2D\u5373\u53EF\uFF0CTypeScript \u5C06\u4F1A\u81EA\u52A8\u63A5\u6536\u5B83\u3002\u6CE8\u610F\uFF0C\u4F60\u9700\u8981\u5728<a href="#%E5%85%A8%E5%B1%80%E6%A8%A1%E5%9D%97">\u5168\u5C40\u6A21\u5757</a>\u4E2D\u505A\u8FD9\u4E9B\u4FEE\u6539\uFF0C\u4EE5\u4F7F\u8FD9\u4E9B\u63A5\u53E3\u4E0E <code>lib.d.ts</code> \u76F8\u5173\u8054\u3002\u6211\u4EEC\u63A8\u8350\u4F60\u521B\u5EFA\u4E00\u4E2A\u79F0\u4E3A <code>global.d.ts</code> \u7684\u7279\u6B8A\u6587\u4EF6\u3002</p><p>\u8FD9\u91CC\u6709\u6211\u4EEC\u9700\u8981\u6DFB\u52A0\u81F3 <code>Window</code>\uFF0C<code>Math</code>\uFF0C<code>Date</code> \u7684\u4E00\u4E9B\u4F8B\u5B50\uFF1A</p><h5 id="window" tabindex="-1"><a class="header-anchor" href="#window">#</a> Window</h5><p>\u4EC5\u4EC5\u662F\u6DFB\u52A0\u81F3 <code>Window</code> \u63A5\u53E3\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Window</span> <span class="token punctuation">{</span>
  <span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u5C06\u5141\u8BB8\u4F60\u4EE5\u7C7B\u578B\u5B89\u5168\u7684\u5F62\u5F0F\u4F7F\u7528\u5B83\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// Add it at runtime</span>
window<span class="token punctuation">.</span><span class="token function-variable function">helloWorld</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Call it</span>
window<span class="token punctuation">.</span><span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6EE5\u7528\u4F1A\u5BFC\u81F4\u9519\u8BEF</span>
window<span class="token punctuation">.</span><span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token string">&#39;gracius&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u63D0\u4F9B\u7684\u53C2\u6570\u4E0E\u76EE\u6807\u4E0D\u5339\u914D</span>
</code></pre></div><h5 id="math" tabindex="-1"><a class="header-anchor" href="#math">#</a> Math</h5><p>\u5168\u5C40\u53D8\u91CF <code>Math</code> \u5728 <code>lib.d.ts</code> \u4E2D\u88AB\u5B9A\u4E49\u4E3A\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">/** An intrinsic object that provides basic mathematics functionality and constants. */</span>
<span class="token keyword">declare</span> <span class="token keyword">var</span> Math<span class="token operator">:</span> Math<span class="token punctuation">;</span>
</code></pre></div><p>\u5373\u53D8\u91CF Math \u662F Math \u7684\u4E00\u4E2A\u5B9E\u4F8B\uFF0CMath \u63A5\u53E3\u88AB\u5B9A\u4E49\u4E3A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Math</span> <span class="token punctuation">{</span>
  <span class="token constant">E</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token constant">LN10</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token comment">// others ...</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5F53\u4F60\u60F3\u5728 <code>Math</code> \u5168\u5C40\u53D8\u91CF\u4E0A\u6DFB\u52A0\u4F60\u9700\u8981\u7684\u5C5E\u6027\u65F6\uFF0C\u4F60\u53EA\u9700\u8981\u628A\u5B83\u6DFB\u52A0\u5230 <code>Math</code> \u7684\u5168\u5C40\u63A5\u53E3\u4E0A\u5373\u53EF\uFF0C\u4F8B\u5982\uFF1A\u5728<a href="https://www.npmjs.com/package/seedrandom" target="_blank" rel="noopener noreferrer">seedrandom Project</a>\u9879\u76EE\u91CC\uFF0C\u5B83\u6DFB\u52A0\u4E86 <code>seedrandom</code> \u51FD\u6570\u81F3\u5168\u5C40\u7684 <code>Math</code> \u5BF9\u8C61\u4E0A\uFF0C\u8FD9\u5F88\u5BB9\u6613\u88AB\u58F0\u660E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Math</span> <span class="token punctuation">{</span>
  <span class="token function">seedrandom</span><span class="token punctuation">(</span>seed<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F60\u53EF\u4EE5\u50CF\u4E0B\u9762\u4E00\u6837\u4F7F\u7528\u5B83\uFF1A</p><div class="language-ts"><pre><code>Math<span class="token punctuation">.</span><span class="token function">seedrandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Math<span class="token punctuation">.</span><span class="token function">seedrandom</span><span class="token punctuation">(</span><span class="token string">&#39;Any string you want&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h5 id="date" tabindex="-1"><a class="header-anchor" href="#date">#</a> Date</h5><p>\u5982\u679C\u4F60\u5728 <code>lib.d.ts</code> \u4E2D\u5BFB\u627E <code>Date</code> \u5B9A\u4E49\u7684\u58F0\u660E\uFF0C\u4F60\u5C06\u4F1A\u627E\u5230\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">var</span> Date<span class="token operator">:</span> DateConstructor<span class="token punctuation">;</span>
</code></pre></div><p>\u63A5\u53E3 <code>DateConstructor</code> \u4E0E\u4E0A\u6587\u4E2D <code>Math</code> \u548C <code>Window</code> \u63A5\u53E3\u4E00\u6837\uFF0C\u5B83\u6DB5\u76D6\u4E86\u53EF\u4EE5\u4F7F\u7528\u7684 <code>Date</code> \u5168\u5C40\u53D8\u91CF\u7684\u6210\u5458\uFF08\u5982\uFF1A<code>Date.now()</code>\uFF09\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u5B83\u8FD8\u5305\u542B\u4E86\u53EF\u4EE5\u8BA9\u4F60\u521B\u5EFA <code>Date</code> \u5B9E\u4F8B\u7684\u6784\u9020\u51FD\u6570\u7B7E\u540D\uFF08\u5982\uFF1A<code>new Date()</code>\uFF09\u3002<code>DateConstructor</code> \u63A5\u53E3\u7684\u4E00\u90E8\u5206\u4EE3\u7801\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">DateConstructor</span> <span class="token punctuation">{</span>
  <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>
  <span class="token comment">// \u4E00\u4E9B\u5176\u4ED6\u7684\u6784\u9020\u51FD\u6570\u7B7E\u540D</span>

  <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5176\u4ED6\u6210\u5458\u51FD\u6570</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728 <a href="https://github.com/abritinthebay/datejs" target="_blank" rel="noopener noreferrer">datejs</a> \u91CC\uFF0C\u5B83\u5728 Date \u7684\u5168\u5C40\u53D8\u91CF\u4EE5\u53CA Date \u5B9E\u4F8B\u4E0A\u540C\u65F6\u6DFB\u52A0\u4E86\u6210\u5458\uFF0C\u56E0\u6B64\u8FD9\u4E2A\u5E93\u7684 TypeScript \u5B9A\u4E49\u770B\u8D77\u6765\u50CF\u5982\u4E0B\u6240\u793A\uFF08\u793E\u533A\u5DF2\u7ECF<a href="https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/datejs/index.d.ts" target="_blank" rel="noopener noreferrer">\u5B9A\u4E49</a>\u597D\u4E86\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// DateJS \u516C\u5F00\u7684\u9759\u6001\u65B9\u6CD5</span>
<span class="token keyword">interface</span> <span class="token class-name">DateConstructor</span> <span class="token punctuation">{</span>
  <span class="token comment">/** Gets a date that is set to the current date. The time is set to the start of the day (00:00 or 12:00 AM) */</span>
  <span class="token function">today</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>
  <span class="token comment">// ... so on and so forth</span>
<span class="token punctuation">}</span>

<span class="token comment">// DateJS \u516C\u5F00\u7684\u5B9E\u4F8B\u65B9\u6CD5</span>
<span class="token keyword">interface</span> <span class="token class-name">Date</span> <span class="token punctuation">{</span>
  <span class="token comment">/** Adds the specified number of milliseconds to this instance. */</span>
  <span class="token function">addMilliseconds</span><span class="token punctuation">(</span>milliseconds<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>
  <span class="token comment">// ... so on and so forth</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u5141\u8BB8\u4F60\u5728\u7C7B\u578B\u5B89\u5168\u7684\u60C5\u51B5\u4E0B\u505A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> today <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">today</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> todayAfter1second <span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">addMilliseconds</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h5 id="string" tabindex="-1"><a class="header-anchor" href="#string">#</a> string</h5><p>\u5982\u679C\u4F60\u5728 <code>lib.d.ts</code> \u91CC\u5BFB\u627E <code>string</code>\uFF0C\u4F60\u5C06\u4F1A\u627E\u5230\u4E0E <code>Date</code> \u76F8\u7C7B\u4F3C\u7684\u5185\u5BB9\uFF08\u5168\u5C40\u53D8\u91CF <code>String</code>\uFF0CStringConstructor \u63A5\u53E3\uFF0C<code>String</code> \u63A5\u53E3\uFF09\u3002\u4F46\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0C<code>String</code> \u63A5\u53E3\u4E5F\u4F1A\u5F71\u54CD\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
  <span class="token function">endsWith</span><span class="token punctuation">(</span>suffix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

String<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">endsWith</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>suffix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> str<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> str <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>suffix<span class="token punctuation">,</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> suffix<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foo bar&#39;</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;bas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foo bas&#39;</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;bas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h5 id="string-1" tabindex="-1"><a class="header-anchor" href="#string-1">#</a> \u7EC8\u6781 string</h5><p>\u57FA\u4E8E\u53EF\u7EF4\u62A4\u6027\uFF0C\u6211\u4EEC\u63A8\u8350\u521B\u5EFA\u4E00\u4E2A <code>global.d.ts</code> \u6587\u4EF6\u3002\u7136\u800C\uFF0C\u5982\u679C\u4F60\u613F\u610F\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 <code>declare global { /* global namespace */ }</code>\uFF0C\u4ECE\u6587\u4EF6\u6A21\u5757\u4E2D\u8FDB\u5165\u5168\u5C40\u547D\u540D\u7A7A\u95F4\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u786E\u4FDD\u662F\u6A21\u5757</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> global <span class="token punctuation">{</span>
  <span class="token keyword">interface</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token function">endsWith</span><span class="token punctuation">(</span>suffix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

String<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">endsWith</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>suffix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> str<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> str <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>suffix<span class="token punctuation">,</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> suffix<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foo bar&#39;</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;bas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foo bas&#39;</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;bas&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h4 id="libdts-2" tabindex="-1"><a class="header-anchor" href="#libdts-2">#</a> \u4F7F\u7528\u4F60\u81EA\u5DF1\u5B9A\u4E49\u7684 lib.d.ts</h4><p>\u6B63\u5982\u4E0A\u6587\u6240\u8BF4\uFF0C\u4F7F\u7528 <code>--noLib</code> \u7F16\u8BD1\u9009\u9879\u4F1A\u5BFC\u81F4 TypeScript \u6392\u9664\u81EA\u52A8\u5305\u542B\u7684 <code>lib.d.ts</code> \u6587\u4EF6\u3002\u4E3A\u4EC0\u4E48\u8FD9\u4E2A\u529F\u80FD\u662F\u6709\u6548\u7684\uFF0C\u6211\u4F8B\u4E3E\u4E86\u4E00\u4E9B\u5E38\u89C1\u539F\u56E0\uFF1A</p><ul><li>\u8FD0\u884C\u7684 JavaScript \u73AF\u5883\u4E0E\u57FA\u4E8E\u6807\u51C6\u6D4F\u89C8\u5668\u8FD0\u884C\u65F6\u73AF\u5883\u6709\u5F88\u5927\u4E0D\u540C\uFF1B</li><li>\u4F60\u5E0C\u671B\u5728\u4EE3\u7801\u91CC\u4E25\u683C\u7684\u63A7\u5236\u5168\u5C40\u53D8\u91CF\uFF0C\u4F8B\u5982\uFF1A<code>lib.d.ts</code> \u5C06 <code>item</code> \u5B9A\u4E49\u4E3A\u5168\u5C40\u53D8\u91CF\uFF0C\u4F60\u4E0D\u5E0C\u671B\u5B83\u6CC4\u6F0F\u5230\u4F60\u7684\u4EE3\u7801\u91CC\u3002</li></ul><p>\u4E00\u65E6\u4F60\u6392\u9664\u4E86\u9ED8\u8BA4\u7684 <code>lib.d.ts</code> \u6587\u4EF6\uFF0C\u4F60\u5C31\u53EF\u4EE5\u5728\u7F16\u8BD1\u4E0A\u4E0B\u6587\u4E2D\u5305\u542B\u4E00\u4E2A\u547D\u540D\u76F8\u4F3C\u7684\u6587\u4EF6\uFF0CTypeScript \u5C06\u63D0\u53D6\u8BE5\u6587\u4EF6\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u5C0F\u5FC3\u4F7F\u7528 <code>--noLib</code> \u9009\u9879\uFF0C\u4E00\u65E6\u4F60\u4F7F\u7528\u4E86\u5B83\uFF0C\u5F53\u4F60\u628A\u4F60\u7684\u9879\u76EE\u5206\u4EAB\u7ED9\u5176\u4ED6\u4EBA\u65F6\uFF0C\u5B83\u4EEC\u4E5F\u5C06\u88AB\u8FEB\u4F7F\u7528 <code>--noLib</code> \u9009\u9879\uFF0C\u66F4\u7CDF\u7CD5\u7684\u662F\uFF0C\u5982\u679C\u5C06\u8FD9\u4E9B\u4EE3\u7801\u653E\u5165\u4F60\u7684\u9879\u76EE\u4E2D\uFF0C\u4F60\u53EF\u80FD\u9700\u8981\u5C06\u5B83\u4EEC\u79FB\u690D\u5230\u57FA\u4E8E\u4F60\u7684\u4EE3\u7801\u7684 <code>lib</code> \u4E2D\u3002</p></div><h4 id="libdts-3" tabindex="-1"><a class="header-anchor" href="#libdts-3">#</a> \u7F16\u8BD1\u76EE\u6807\u5BF9 <code>lib.d.ts</code> \u7684\u5F71\u54CD</h4><p>\u8BBE\u7F6E\u7F16\u8BD1\u76EE\u6807\u4E3A <code>es6</code> \u65F6\uFF0C\u80FD\u5BFC\u81F4 <code>lib.d.ts</code> \u5305\u542B\u66F4\u591A\u50CF Promise \u73B0\u4EE3\uFF08es6\uFF09\u5185\u5BB9\u7684\u73AF\u5883\u58F0\u660E\u3002\u7F16\u8BD1\u5668\u76EE\u6807\u7684\u8FD9\u79CD\u4F5C\u7528\uFF0C\u6539\u53D8\u4E86\u4EE3\u7801\u7684\u73AF\u5883\uFF0C\u8FD9\u5BF9\u67D0\u4E9B\u4EBA\u6765\u8BF4\u662F\u7406\u60F3\u7684\uFF0C\u4F46\u662F\u8FD9\u5BF9\u53E6\u5916\u4E00\u4E9B\u4EBA\u6765\u8BF4\u9020\u6210\u4E86\u56F0\u6270\uFF0C\u56E0\u4E3A\u5B83\u5C06\u7F16\u8BD1\u51FA\u7684\u4EE3\u7801\u4E0E\u73AF\u5883\u6DF7\u4E3A\u4E00\u8C08\u3002</p><p>\u5F53\u4F60\u60F3\u5BF9\u73AF\u5883\u8FDB\u884C\u66F4\u7EC6\u7C92\u7684\u63A7\u5236\u65F6\uFF0C\u4F60\u5E94\u8BE5\u4F7F\u7528\u6211\u4EEC\u63A5\u4E0B\u6765\u5C06\u8981\u8BA8\u8BBA\u7684 <code>--lib</code> \u9009\u9879\u3002</p><h4 id="lib" tabindex="-1"><a class="header-anchor" href="#lib">#</a> <code>--lib</code> \u9009\u9879</h4><p>\u6709\u65F6\uFF0C\u4F60\u60F3\u8981\u89E3\u8026\u7F16\u8BD1\u76EE\u6807\uFF08\u5373\u751F\u6210\u7684 JavaScript \u7248\u672C\uFF09\u548C\u73AF\u5883\u5E93\u652F\u6301\u4E4B\u95F4\u7684\u5173\u7CFB\u3002\u4F8B\u5982\u5BF9\u4E8E Promise\uFF0C\u4F60\u7684\u7F16\u8BD1\u76EE\u6807\u662F <code>--target es5</code>\uFF0C\u4F46\u662F\u4F60\u4ECD\u7136\u60F3\u4F7F\u7528\u5B83\uFF0C\u8FD9\u65F6\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>lib</code> \u5BF9\u5B83\u8FDB\u884C\u63A7\u5236\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4F7F\u7528 --lib \u9009\u9879\u53EF\u4EE5\u5C06\u4EFB\u4F55 lib \u4E0E --target \u89E3\u8026\u3002</p></div><p>\u4F60\u53EF\u4EE5\u901A\u8FC7\u547D\u4EE4\u884C\u6216\u8005\u5728 <code>tsconfig.json</code> \u4E2D\u63D0\u4F9B\u6B64\u9009\u9879\uFF08\u63A8\u8350\uFF09\uFF1A</p><h5 id="-55" tabindex="-1"><a class="header-anchor" href="#-55">#</a> \u547D\u4EE4\u884C</h5><div class="language-shell"><pre><code>tsc --target es5 --lib dom,es6
</code></pre></div><h5 id="configjson" tabindex="-1"><a class="header-anchor" href="#configjson">#</a> config.json</h5><div class="language-json"><pre><code><span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;dom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;es6&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>lib</code> \u5206\u7C7B\u5982\u4E0B\uFF1A</p><ul><li>JavaScript \u529F\u80FD <ul><li>es5</li><li>es6</li><li>es2015</li><li>es7</li><li>es2016</li><li>es2017</li><li>esnext</li></ul></li><li>\u8FD0\u884C\u73AF\u5883 <ul><li>dom</li><li>dom.iterable</li><li>webworker</li><li>scripthost</li></ul></li><li>ESNext \u529F\u80FD\u9009\u9879 <ul><li>es2015.core</li><li>es2015.collection</li><li>es2015.generator</li><li>es2015.iterable</li><li>es2015.promise</li><li>es2015.proxy</li><li>es2015.reflect</li><li>es2015.symbol</li><li>es2015.symbol.wellknown</li><li>es2016.array.include</li><li>es2017.object</li><li>es2017.sharedmemory</li><li>esnext.asynciterable</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>--lib</code> \u9009\u9879\u63D0\u4F9B\u975E\u5E38\u7CBE\u7EC6\u7684\u63A7\u5236\uFF0C\u56E0\u6B64\u4F60\u6700\u6709\u53EF\u80FD\u4ECE\u8FD0\u884C\u73AF\u5883\u4E0E JavaScript \u529F\u80FD\u7C7B\u522B\u4E2D\u5206\u522B\u9009\u62E9\u4E00\u9879\uFF0C\u5982\u679C\u4F60\u6CA1\u6709\u6307\u5B9A <code>--lib</code>\uFF0C\u5219\u4F1A\u5BFC\u5165\u9ED8\u8BA4\u5E93\uFF1A</p><ul><li><code>--target</code> \u9009\u9879\u4E3A es5 \u65F6\uFF0C\u4F1A\u5BFC\u5165 es5, dom, scripthost\u3002</li><li><code>--target</code> \u9009\u9879\u4E3A es6 \u65F6\uFF0C\u4F1A\u5BFC\u5165 es6, dom, dom.iterable, scripthost\u3002</li></ul></div><p>\u6211\u4E2A\u4EBA\u7684\u63A8\u8350\uFF1A</p><div class="language-json"><pre><code><span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;es6&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5305\u62EC\u4F7F\u7528 Symbol \u7684 ES5 \u4F7F\u7528\u4F8B\u5B50\uFF1A</p><div class="language-json"><pre><code><span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;scripthost&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;es2015.symbol&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="javascript-polyfill" tabindex="-1"><a class="header-anchor" href="#javascript-polyfill">#</a> \u5728\u65E7\u7684 JavaScript \u5F15\u64CE\u65F6\u4F7F\u7528 Polyfill</h4><p>\u8981\u4F7F\u7528\u4E00\u4E9B\u65B0\u529F\u80FD\u5982 <code>Map</code>\u3001<code>Set</code>\u3001<code>Promise</code>\uFF08\u968F\u7740\u65F6\u95F4\u63A8\u79FB\u4F1A\u53D8\u5316\uFF09\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u73B0\u4EE3\u7684 <code>lib</code> \u9009\u9879\uFF0C\u5E76\u4E14\u9700\u8981\u5B89\u88C5 <code>core-js</code>\uFF1A</p><div class="language-shell"><pre><code><span class="token function">npm</span> <span class="token function">install</span> core-js --save-dev
</code></pre></div><p>\u63A5\u7740\uFF0C\u5728\u4F60\u7684\u9879\u76EE\u91CC\u5BFC\u5165\u5B83\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;core-js&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="-56" tabindex="-1"><a class="header-anchor" href="#-56">#</a> \u51FD\u6570</h3><p>\u51FD\u6570\u7C7B\u578B\u5728 TypeScript \u7C7B\u578B\u7CFB\u7EDF\u4E2D\u626E\u6F14\u7740\u975E\u5E38\u91CD\u8981\u7684\u89D2\u8272\uFF0C\u5B83\u4EEC\u662F\u53EF\u7EC4\u5408\u7CFB\u7EDF\u7684\u6838\u5FC3\u6784\u5EFA\u5757\u3002</p><h4 id="-57" tabindex="-1"><a class="header-anchor" href="#-57">#</a> \u53C2\u6570\u6CE8\u89E3</h4><p>\u4F60\u53EF\u4EE5\u6CE8\u89E3\u51FD\u6570\u53C2\u6570\uFF0C\u5C31\u50CF\u4F60\u53EF\u4EE5\u6CE8\u89E3\u5176\u4ED6\u53D8\u91CF\u4E00\u6837:</p><div class="language-ts"><pre><code><span class="token comment">// variable annotation</span>
<span class="token keyword">let</span> sampleVariable<span class="token operator">:</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// function parameter annotation</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>sampleParameter<span class="token operator">:</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528\u4E86\u5185\u8054\u7C7B\u578B\u6CE8\u89E3\uFF0C\u9664\u6B64\u4E4B\u5916\uFF0C\u4F60\u8FD8\u53EF\u4EE5\u4F7F\u7528\u63A5\u53E3\u7B49\u5176\u4ED6\u65B9\u5F0F\u3002</p><h5 id="-58" tabindex="-1"><a class="header-anchor" href="#-58">#</a> \u8FD4\u56DE\u7C7B\u578B\u6CE8\u89E3</h5><p>\u4F60\u53EF\u4EE5\u5728\u51FD\u6570\u53C2\u6570\u5217\u8868\u4E4B\u540E\u4F7F\u7528\u4E0E\u53D8\u91CF\u76F8\u540C\u7684\u6837\u5F0F\u6765\u6CE8\u89E3\u8FD4\u56DE\u7C7B\u578B\uFF0C\u5982\u4F8B\u5B50\u4E2D <code>\uFF1AFoo</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Return type annotated as \`: Foo\`</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>sample<span class="token operator">:</span> Foo<span class="token punctuation">)</span><span class="token operator">:</span> Foo <span class="token punctuation">{</span>
  <span class="token keyword">return</span> sample<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6211\u4EEC\u5728\u8FD9\u91CC\u4F7F\u7528\u4E86\u4E00\u4E2A <code>interface</code>\uFF0C\u4F46\u4F60\u53EF\u4EE5\u81EA\u7531\u5730\u4F7F\u7528\u5176\u4ED6\u6CE8\u89E3\u65B9\u5F0F\uFF0C\u4F8B\u5982\u5185\u8054\u6CE8\u89E3\u3002</p><p>\u901A\u5E38\uFF0C\u4F60\u4E0D\u9700\u8981\u6CE8\u89E3\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u7531\u7F16\u8BD1\u5668\u63A8\u65AD\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>sample<span class="token operator">:</span> Foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> sample<span class="token punctuation">;</span> <span class="token comment">// inferred return type &#39;Foo&#39;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F46\u662F\uFF0C\u6DFB\u52A0\u8FD9\u4E9B\u6CE8\u89E3\u4EE5\u5E2E\u52A9\u89E3\u51B3\u9519\u8BEF\u63D0\u793A\u901A\u5E38\u662F\u4E00\u4E2A\u597D\u4E3B\u610F\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> fou<span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// You might not find this misspelling of \`foo\` till it&#39;s too late</span>
<span class="token punctuation">}</span>

<span class="token function">sendAsJSON</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u4F60\u4E0D\u6253\u7B97\u4ECE\u51FD\u6570\u8FD4\u56DE\u4EFB\u4F55\u5185\u5BB9\uFF0C\u5219\u53EF\u4EE5\u5C06\u5176\u6807\u6CE8\u4E3A\uFF1A<code>void</code> \u3002\u4F60\u901A\u5E38\u53EF\u4EE5\u5220\u9664 <code>void</code>\uFF0C TypeScript \u80FD\u63A8\u5BFC\u51FA\u6765\uFF1A</p><h5 id="-59" tabindex="-1"><a class="header-anchor" href="#-59">#</a> \u53EF\u9009\u53C2\u6570</h5><p>\u4F60\u53EF\u4EE5\u5C06\u53C2\u6570\u6807\u8BB0\u4E3A\u53EF\u9009:</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> bas<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token comment">// ..</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u6216\u8005\uFF0C\u5F53\u8C03\u7528\u8005\u6CA1\u6709\u63D0\u4F9B\u8BE5\u53C2\u6570\u65F6\uFF0C\u4F60\u53EF\u4EE5\u63D0\u4F9B\u4E00\u4E2A\u9ED8\u8BA4\u503C\uFF08\u5728\u53C2\u6570\u58F0\u660E\u540E\u4F7F\u7528 <code>= someValue</code> \uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> bas<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> bas<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123, hello</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123, world</span>
</code></pre></div><h5 id="-60" tabindex="-1"><a class="header-anchor" href="#-60">#</a> \u91CD\u8F7D</h5><p>TypeScript \u5141\u8BB8\u4F60\u58F0\u660E\u51FD\u6570\u91CD\u8F7D\u3002\u8FD9\u5BF9\u4E8E\u6587\u6863 + \u7C7B\u578B\u5B89\u5168\u6765\u8BF4\u5F88\u5B9E\u7528\u3002\u8BF7\u601D\u8003\u4EE5\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> d<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    b <span class="token operator">=</span> c <span class="token operator">=</span> d <span class="token operator">=</span> a<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">=</span> a<span class="token punctuation">;</span>
    d <span class="token operator">=</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    top<span class="token operator">:</span> a<span class="token punctuation">,</span>
    right<span class="token operator">:</span> b<span class="token punctuation">,</span>
    bottom<span class="token operator">:</span> c<span class="token punctuation">,</span>
    left<span class="token operator">:</span> d
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u679C\u4ED4\u7EC6\u67E5\u770B\u4EE3\u7801\uFF0C\u5C31\u4F1A\u53D1\u73B0 a\uFF0Cb\uFF0Cc\uFF0Cd \u7684\u503C\u4F1A\u6839\u636E\u4F20\u5165\u7684\u53C2\u6570\u6570\u91CF\u800C\u53D8\u5316\u3002\u6B64\u51FD\u6570\u4E5F\u53EA\u9700\u8981 1 \u4E2A\uFF0C2 \u4E2A\u6216 4 \u4E2A\u53C2\u6570\u3002\u53EF\u4EE5\u4F7F\u7528\u51FD\u6570\u91CD\u8F7D\u6765<em>\u5F3A\u5236</em>\u548C<em>\u8BB0\u5F55</em>\u8FD9\u4E9B\u7EA6\u675F\u3002\u4F60\u53EA\u9700\u591A\u6B21\u58F0\u660E\u51FD\u6570\u5934\u3002\u6700\u540E\u4E00\u4E2A\u51FD\u6570\u5934\u662F\u5728\u51FD\u6570\u4F53\u5185\u5B9E\u9645\u5904\u4E8E\u6D3B\u52A8\u72B6\u6001\u4F46\u4E0D\u53EF\u7528\u4E8E\u5916\u90E8\u3002</p><p>\u5982\u4E0B\u6240\u793A:</p><div class="language-ts"><pre><code><span class="token comment">// \u91CD\u8F7D</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>all<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>topAndBottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> leftAndRight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Actual implementation that is a true representation of all the cases the function body needs to handle</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> d<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    b <span class="token operator">=</span> c <span class="token operator">=</span> d <span class="token operator">=</span> a<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">=</span> a<span class="token punctuation">;</span>
    d <span class="token operator">=</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    top<span class="token operator">:</span> a<span class="token punctuation">,</span>
    right<span class="token operator">:</span> b<span class="token punctuation">,</span>
    bottom<span class="token operator">:</span> c<span class="token punctuation">,</span>
    left<span class="token operator">:</span> d
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u91CC\u524D\u4E09\u4E2A\u51FD\u6570\u5934\u53EF\u6709\u6548\u8C03\u7528 <code>padding</code>:</p><div class="language-ts"><pre><code><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Okay: all</span>
<span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Okay: topAndBottom, leftAndRight</span>
<span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Okay: top, right, bottom, left</span>

<span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: Not a part of the available overloads</span>
</code></pre></div><p>\u5F53\u7136\uFF0C\u6700\u7EC8\u58F0\u660E\uFF08\u4ECE\u51FD\u6570\u5185\u90E8\u770B\u5230\u7684\u771F\u6B63\u58F0\u660E\uFF09\u4E0E\u6240\u6709\u91CD\u8F7D\u517C\u5BB9\u662F\u5F88\u91CD\u8981\u7684\u3002\u8FD9\u662F\u56E0\u4E3A\u8FD9\u662F\u51FD\u6570\u4F53\u9700\u8981\u8003\u8651\u7684\u51FD\u6570\u8C03\u7528\u7684\u771F\u5B9E\u6027\u8D28\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>TypeScript \u4E2D\u7684\u51FD\u6570\u91CD\u8F7D\u6CA1\u6709\u4EFB\u4F55\u8FD0\u884C\u65F6\u5F00\u9500\u3002\u5B83\u53EA\u5141\u8BB8\u4F60\u8BB0\u5F55\u5E0C\u671B\u8C03\u7528\u51FD\u6570\u7684\u65B9\u5F0F\uFF0C\u5E76\u4E14\u7F16\u8BD1\u5668\u4F1A\u68C0\u67E5\u5176\u4F59\u4EE3\u7801\u3002</p></div><h5 id="-61" tabindex="-1"><a class="header-anchor" href="#-61">#</a> \u51FD\u6570\u58F0\u660E</h5><blockquote><p>\u5FEB\u901F\u5F00\u59CB\uFF1A\u7C7B\u578B\u6CE8\u89E3\u662F\u4F60\u63CF\u8FF0\u73B0\u6709\u5B9E\u73B0\u7C7B\u578B\u7684\u4E00\u79CD\u65B9\u5F0F</p></blockquote><p>\u5728\u6CA1\u6709\u63D0\u4F9B\u51FD\u6570\u5B9E\u73B0\u7684\u60C5\u51B5\u4E0B\uFF0C\u6709\u4E24\u79CD\u58F0\u660E\u51FD\u6570\u7C7B\u578B\u7684\u65B9\u5F0F:</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">LongHand</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">ShortHand</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684\u4E24\u4E2A\u4F8B\u5B50\u5B8C\u5168\u76F8\u540C\u3002\u4F46\u662F\uFF0C\u5F53\u4F60\u60F3\u4F7F\u7528\u51FD\u6570\u91CD\u8F7D\u65F6\uFF0C\u53EA\u80FD\u7528\u7B2C\u4E00\u79CD\u65B9\u5F0F:</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">LongHandAllowsOverloadDeclarations</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="-62" tabindex="-1"><a class="header-anchor" href="#-62">#</a> \u53EF\u8C03\u7528\u7684</h3><p>\u4F60\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u522B\u540D\u6216\u8005\u63A5\u53E3\u6765\u8868\u793A\u4E00\u4E2A\u53EF\u88AB\u8C03\u7528\u7684\u7C7B\u578B\u6CE8\u89E3\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">ReturnString</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5B83\u53EF\u4EE5\u8868\u793A\u4E00\u4E2A\u8FD4\u56DE\u503C\u4E3A <code>string</code> \u7684\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">const</span> foo<span class="token operator">:</span> ReturnString<span class="token punctuation">;</span>

<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bar \u88AB\u63A8\u65AD\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002</span>
</code></pre></div><h4 id="-63" tabindex="-1"><a class="header-anchor" href="#-63">#</a> \u4E00\u4E2A\u5B9E\u9645\u7684\u4F8B\u5B50</h4><p>\u5F53\u7136\uFF0C\u50CF\u8FD9\u6837\u4E00\u4E2A\u53EF\u88AB\u8C03\u7528\u7684\u7C7B\u578B\u6CE8\u89E3\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u6839\u636E\u5B9E\u9645\u6765\u4F20\u9012\u4EFB\u4F55\u53C2\u6570\u3001\u53EF\u9009\u53C2\u6570\u4EE5\u53CA rest \u53C2\u6570\uFF0C\u8FD9\u6709\u4E00\u4E2A\u7A0D\u5FAE\u590D\u6742\u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Complex</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> bar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token operator">...</span>others<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E00\u4E2A\u63A5\u53E3\u53EF\u63D0\u4F9B\u591A\u79CD\u8C03\u7528\u7B7E\u540D\uFF0C\u7528\u4EE5\u7279\u6B8A\u7684\u51FD\u6570\u91CD\u8F7D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Overloaded</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B9E\u73B0\u63A5\u53E3\u7684\u4E00\u4E2A\u4F8B\u5B50\uFF1A</span>
<span class="token keyword">function</span> <span class="token function">stringOrNumber</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">stringOrNumber</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">stringOrNumber</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> foo <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> foo <span class="token operator">*</span> foo<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> foo <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>foo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> overloaded<span class="token operator">:</span> Overloaded <span class="token operator">=</span> stringOrNumber<span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token function">overloaded</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// str \u88AB\u63A8\u65AD\u4E3A &#39;string&#39;</span>
<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">overloaded</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// num \u88AB\u63A8\u65AD\u4E3A &#39;number&#39;</span>
</code></pre></div><p>\u8FD9\u4E5F\u53EF\u4EE5\u7528\u4E8E\u5185\u8054\u6CE8\u89E3\u4E2D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> overloaded<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="-64" tabindex="-1"><a class="header-anchor" href="#-64">#</a> \u7BAD\u5934\u51FD\u6570</h4><p>\u4E3A\u4E86\u4F7F\u6307\u5B9A\u53EF\u8C03\u7528\u7684\u7C7B\u578B\u7B7E\u540D\u66F4\u5BB9\u6613\uFF0CTypeScript \u4E5F\u5141\u8BB8\u4F60\u4F7F\u7528\u7B80\u5355\u7684\u7BAD\u5934\u51FD\u6570\u7C7B\u578B\u6CE8\u89E3\u3002\u4F8B\u5982\uFF0C\u5728\u4E00\u4E2A\u4EE5 number \u7C7B\u578B\u4E3A\u53C2\u6570\uFF0C\u4EE5 string \u7C7B\u578B\u4E3A\u8FD4\u56DE\u503C\u7684\u51FD\u6570\u4E2D\uFF0C\u4F60\u53EF\u4EE5\u8FD9\u4E48\u5199\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">simple</span><span class="token operator">:</span> <span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function-variable function">string</span> <span class="token operator">=</span> foo <span class="token operator">=&gt;</span> foo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u5B83\u4EC5\u4EC5\u53EA\u80FD\u4F5C\u4E3A\u7B80\u5355\u7684\u7BAD\u5934\u51FD\u6570\uFF0C\u4F60\u65E0\u6CD5\u4F7F\u7528\u91CD\u8F7D\u3002\u5982\u679C\u60F3\u4F7F\u7528\u91CD\u8F7D\uFF0C\u4F60\u5FC5\u987B\u4F7F\u7528\u5B8C\u6574\u7684 <code>{ (someArgs): someReturn }</code> \u7684\u8BED\u6CD5</p></div><h4 id="-65" tabindex="-1"><a class="header-anchor" href="#-65">#</a> \u53EF\u5B9E\u4F8B\u5316</h4><p>\u53EF\u5B9E\u4F8B\u5316\u4EC5\u4EC5\u662F\u53EF\u8C03\u7528\u7684\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5\uFF0C\u5B83\u4F7F\u7528 <code>new</code> \u4F5C\u4E3A\u524D\u7F00\u3002\u5B83\u610F\u5473\u7740\u4F60\u9700\u8981\u4F7F\u7528 <code>new</code> \u5173\u952E\u5B57\u53BB\u8C03\u7528\u5B83\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">CallMeWithNewToGetString</span> <span class="token punctuation">{</span>
  <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> Foo<span class="token operator">:</span> CallMeWithNewToGetString<span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bar \u88AB\u63A8\u65AD\u4E3A string \u7C7B\u578B</span>
</code></pre></div><h3 id="-66" tabindex="-1"><a class="header-anchor" href="#-66">#</a> \u7C7B\u578B\u65AD\u8A00</h3><p>TypeScript \u5141\u8BB8\u4F60\u8986\u76D6\u5B83\u7684\u63A8\u65AD\uFF0C\u5E76\u4E14\u80FD\u4EE5\u4F60\u4EFB\u4F55\u4F60\u60F3\u8981\u7684\u65B9\u5F0F\u5206\u6790\u5B83\uFF0C\u8FD9\u79CD\u673A\u5236\u88AB\u79F0\u4E3A\u300C\u7C7B\u578B\u65AD\u8A00\u300D\u3002TypeScript \u7C7B\u578B\u65AD\u8A00\u7528\u6765\u544A\u8BC9\u7F16\u8BD1\u5668\u4F60\u6BD4\u5B83\u66F4\u4E86\u89E3\u8FD9\u4E2A\u7C7B\u578B\uFF0C\u5E76\u4E14\u5B83\u4E0D\u5E94\u8BE5\u518D\u53D1\u51FA\u9519\u8BEF\u3002</p><p>\u7C7B\u578B\u65AD\u8A00\u7684\u4E00\u4E2A\u5E38\u89C1\u7528\u4F8B\u662F\u5F53\u4F60\u4ECE JavaScript \u8FC1\u79FB\u5230 TypeScript \u65F6\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// Error: &#39;bar&#39; \u5C5E\u6027\u4E0D\u5B58\u5728\u4E8E \u2018{}\u2019</span>
foo<span class="token punctuation">.</span>bas <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error: &#39;bas&#39; \u5C5E\u6027\u4E0D\u5B58\u5728\u4E8E &#39;{}&#39;</span>
</code></pre></div><p>\u8FD9\u91CC\u7684\u4EE3\u7801\u53D1\u51FA\u4E86\u9519\u8BEF\u8B66\u544A\uFF0C\u56E0\u4E3A <code>foo</code> \u7684\u7C7B\u578B\u63A8\u65AD\u4E3A <code>{}</code>\uFF0C\u5373\u6CA1\u6709\u5C5E\u6027\u7684\u5BF9\u8C61\u3002\u56E0\u6B64\uFF0C\u4F60\u4E0D\u80FD\u5728\u5B83\u7684\u5C5E\u6027\u4E0A\u6DFB\u52A0 <code>bar</code> \u6216 <code>bas</code>\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u7C7B\u578B\u65AD\u8A00\u6765\u907F\u514D\u6B64\u95EE\u9898\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  bas<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Foo<span class="token punctuation">;</span>
foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
foo<span class="token punctuation">.</span>bas <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="as-foo-foo" tabindex="-1"><a class="header-anchor" href="#as-foo-foo">#</a> <code>as foo</code> \u4E0E <code>&lt;foo&gt;</code></h4><p>\u6700\u521D\u7684\u65AD\u8A00\u8BED\u6CD5\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>foo<span class="token punctuation">;</span> <span class="token comment">// \u73B0\u5728 bar \u7684\u7C7B\u578B\u662F &#39;string&#39;</span>
</code></pre></div><p>\u7136\u800C\uFF0C\u5F53\u4F60\u5728 JSX \u4E2D\u4F7F\u7528 <code>&lt;foo&gt;</code> \u7684\u65AD\u8A00\u8BED\u6CD5\u65F6\uFF0C\u8FD9\u4F1A\u4E0E JSX \u7684\u8BED\u6CD5\u5B58\u5728\u6B67\u4E49\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>bar<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u56E0\u6B64\uFF0C\u4E3A\u4E86\u4E00\u81F4\u6027\uFF0C\u6211\u4EEC\u5EFA\u8BAE\u4F60\u4F7F\u7528 <code>as foo</code> \u7684\u8BED\u6CD5\u6765\u4E3A\u7C7B\u578B\u65AD\u8A00\u3002</p><h4 id="-67" tabindex="-1"><a class="header-anchor" href="#-67">#</a> \u7C7B\u578B\u65AD\u8A00\u4E0E\u7C7B\u578B\u8F6C\u6362</h4><p>\u5B83\u4E4B\u6240\u4EE5\u4E0D\u88AB\u79F0\u4E3A\u300C\u7C7B\u578B\u8F6C\u6362\u300D\uFF0C\u662F\u56E0\u4E3A\u8F6C\u6362\u901A\u5E38\u610F\u5473\u7740\u67D0\u79CD\u8FD0\u884C\u65F6\u7684\u652F\u6301\u3002\u4F46\u662F\uFF0C\u7C7B\u578B\u65AD\u8A00\u7EAF\u7CB9\u662F\u4E00\u4E2A\u7F16\u8BD1\u65F6\u8BED\u6CD5\uFF0C\u540C\u65F6\uFF0C\u5B83\u4E5F\u662F\u4E00\u79CD\u4E3A\u7F16\u8BD1\u5668\u63D0\u4F9B\u5173\u4E8E\u5982\u4F55\u5206\u6790\u4EE3\u7801\u7684\u65B9\u6CD5\u3002</p><h4 id="-68" tabindex="-1"><a class="header-anchor" href="#-68">#</a> \u7C7B\u578B\u65AD\u8A00\u88AB\u8BA4\u4E3A\u662F\u6709\u5BB3\u7684</h4><p>\u5728\u5F88\u591A\u60C5\u666F\u4E0B\uFF0C\u65AD\u8A00\u80FD\u8BA9\u4F60\u66F4\u5BB9\u6613\u7684\u4ECE\u9057\u7559\u9879\u76EE\u4E2D\u8FC1\u79FB\uFF08\u751A\u81F3\u5C06\u5176\u4ED6\u4EE3\u7801\u7C98\u8D34\u590D\u5236\u5230\u4F60\u7684\u9879\u76EE\u4E2D\uFF09\uFF0C\u7136\u800C\uFF0C\u4F60\u5E94\u8BE5\u5C0F\u5FC3\u8C28\u614E\u7684\u4F7F\u7528\u65AD\u8A00\u3002\u8BA9\u6211\u4EEC\u7528\u6700\u521D\u7684\u4EE3\u7801\u4F5C\u4E3A\u793A\u4F8B\uFF0C\u5982\u679C\u4F60\u6CA1\u6709\u6309\u7EA6\u5B9A\u6DFB\u52A0\u5C5E\u6027\uFF0CTypeScript \u7F16\u8BD1\u5668\u5E76\u4E0D\u4F1A\u5BF9\u6B64\u53D1\u51FA\u9519\u8BEF\u8B66\u544A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  bas<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Foo<span class="token punctuation">;</span>

<span class="token comment">// ahhh, \u5FD8\u8BB0\u4E86\u4EC0\u4E48\uFF1F</span>
</code></pre></div><p>\u53E6\u5916\u4E00\u4E2A\u5E38\u89C1\u7684\u60F3\u6CD5\u662F\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u6765\u63D0\u4F9B\u4EE3\u7801\u7684\u63D0\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  bas<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token operator">&lt;</span>Foo<span class="token operator">&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">// \u7F16\u8BD1\u5668\u5C06\u4F1A\u63D0\u4F9B\u5173\u4E8E Foo \u5C5E\u6027\u7684\u4EE3\u7801\u63D0\u793A</span>
  <span class="token comment">// \u4F46\u662F\u5F00\u53D1\u4EBA\u5458\u4E5F\u5F88\u5BB9\u6613\u5FD8\u8BB0\u6DFB\u52A0\u6240\u6709\u7684\u5C5E\u6027</span>
  <span class="token comment">// \u540C\u6837\uFF0C\u5982\u679C Foo \u88AB\u91CD\u6784\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u4E5F\u53EF\u80FD\u88AB\u7834\u574F\uFF08\u4F8B\u5982\uFF0C\u4E00\u4E2A\u65B0\u7684\u5C5E\u6027\u88AB\u6DFB\u52A0\uFF09\u3002</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u4E5F\u4F1A\u5B58\u5728\u4E00\u4E2A\u540C\u6837\u7684\u95EE\u9898\uFF0C\u5982\u679C\u4F60\u5FD8\u8BB0\u4E86\u67D0\u4E2A\u5C5E\u6027\uFF0C\u7F16\u8BD1\u5668\u540C\u6837\u4E5F\u4E0D\u4F1A\u53D1\u51FA\u9519\u8BEF\u8B66\u544A\u3002\u4F7F\u7528\u4E00\u79CD\u66F4\u597D\u7684\u65B9\u5F0F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  bas<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> foo<span class="token operator">:</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7F16\u8BD1\u5668\u5C06\u4F1A\u63D0\u4F9B Foo \u5C5E\u6027\u7684\u4EE3\u7801\u63D0\u793A</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u67D0\u4E9B\u60C5\u666F\u4E0B\uFF0C\u4F60\u53EF\u80FD\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u7684\u53D8\u91CF\uFF0C\u4F46\u81F3\u5C11\uFF0C\u4F60\u4E0D\u4F1A\u4F7F\u7528\u4E00\u4E2A\u627F\u8BFA\uFF08\u53EF\u80FD\u662F\u5047\u7684\uFF09\uFF0C\u800C\u662F\u4F9D\u9760\u7C7B\u578B\u63A8\u65AD\u6765\u68C0\u67E5\u4F60\u7684\u4EE3\u7801\u3002</p><h4 id="-69" tabindex="-1"><a class="header-anchor" href="#-69">#</a> \u53CC\u91CD\u65AD\u8A00</h4><p>\u7C7B\u578B\u65AD\u8A00\uFF0C\u5C3D\u7BA1\u6211\u4EEC\u5DF2\u7ECF\u8BC1\u660E\u4E86\u5B83\u5E76\u4E0D\u662F\u90A3\u4E48\u5B89\u5168\uFF0C\u4F46\u5B83\u4E5F\u8FD8\u662F\u6709\u7528\u6B66\u4E4B\u5730\u3002\u5982\u4E0B\u4E00\u4E2A\u975E\u5E38\u5B9E\u7528\u7684\u4F8B\u5B50\u6240\u793A\uFF0C\u5F53\u4F7F\u7528\u8005\u4E86\u89E3\u4F20\u5165\u53C2\u6570\u66F4\u5177\u4F53\u7684\u7C7B\u578B\u65F6\uFF0C\u7C7B\u578B\u65AD\u8A00\u80FD\u6309\u9884\u671F\u5DE5\u4F5C\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">handler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mouseEvent <span class="token operator">=</span> event <span class="token keyword">as</span> MouseEvent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u800C\uFF0C\u5982\u4E0B\u4F8B\u5B50\u4E2D\u7684\u4EE3\u7801\u5C06\u4F1A\u62A5\u9519\uFF0C\u5C3D\u7BA1\u4F7F\u7528\u8005\u5DF2\u7ECF\u4F7F\u7528\u4E86\u7C7B\u578B\u65AD\u8A00\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">handler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> event <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span> <span class="token comment">// Error: &#39;Event&#39; \u548C &#39;HTMLElement&#39; \u4E2D\u7684\u4EFB\u4F55\u4E00\u4E2A\u90FD\u4E0D\u80FD\u8D4B\u503C\u7ED9\u53E6\u5916\u4E00\u4E2A</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u679C\u4F60\u4ECD\u7136\u60F3\u4F7F\u7528\u90A3\u4E2A\u7C7B\u578B\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u53CC\u91CD\u65AD\u8A00\u3002\u9996\u5148\u65AD\u8A00\u6210\u517C\u5BB9\u6240\u6709\u7C7B\u578B\u7684 <code>any</code>\uFF0C\u7F16\u8BD1\u5668\u5C06\u4E0D\u4F1A\u62A5\u9519\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">handler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token punctuation">}</span>
</code></pre></div><h5 id="typescript-4" tabindex="-1"><a class="header-anchor" href="#typescript-4">#</a> TypeScript \u662F\u600E\u4E48\u786E\u5B9A\u5355\u4E2A\u5224\u65AD\u662F\u5426\u8DB3\u591F</h5><p>\u5F53 <code>S</code> \u7C7B\u578B\u662F <code>T</code> \u7C7B\u578B\u7684\u5B50\u96C6\uFF0C\u6216\u8005 <code>T</code> \u7C7B\u578B\u662F <code>S</code> \u7C7B\u578B\u7684\u5B50\u96C6\u65F6\uFF0C<code>S</code> \u80FD\u88AB\u6210\u529F\u65AD\u8A00\u6210 <code>T</code>\u3002\u8FD9\u662F\u4E3A\u4E86\u5728\u8FDB\u884C\u7C7B\u578B\u65AD\u8A00\u65F6\u63D0\u4F9B\u989D\u5916\u7684\u5B89\u5168\u6027\uFF0C\u5B8C\u5168\u6BEB\u65E0\u6839\u636E\u7684\u65AD\u8A00\u662F\u5371\u9669\u7684\uFF0C\u5982\u679C\u4F60\u60F3\u8FD9\u4E48\u505A\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>any</code>\u3002</p><h3 id="freshness" tabindex="-1"><a class="header-anchor" href="#freshness">#</a> Freshness</h3><p>\u4E3A\u4E86\u80FD\u8BA9\u68C0\u67E5\u5BF9\u8C61\u5B57\u9762\u91CF\u7C7B\u578B\u66F4\u5BB9\u6613\uFF0CTypeScript \u63D0\u4F9B \u300C<a href="https://github.com/Microsoft/TypeScript/pull/3823" target="_blank" rel="noopener noreferrer">Freshness</a>\u300D \u7684\u6982\u5FF5\uFF08\u5B83\u4E5F\u88AB\u79F0\u4E3A\u66F4\u4E25\u683C\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\u68C0\u67E5\uFF09\u7528\u6765\u786E\u4FDD\u5BF9\u8C61\u5B57\u9762\u91CF\u5728\u7ED3\u6784\u4E0A\u7C7B\u578B\u517C\u5BB9\u3002</p><p>\u7ED3\u6784\u7C7B\u578B\u975E\u5E38\u65B9\u4FBF\u3002\u8003\u8651\u5982\u4E0B\u4F8B\u5B50\u4EE3\u7801\uFF0C\u5B83\u53EF\u4EE5\u8BA9\u4F60\u975E\u5E38\u4FBF\u5229\u7684\u4ECE JavaScript \u8FC1\u79FB\u81F3 TypeScript\uFF0C\u5E76\u4E14\u4F1A\u63D0\u4F9B\u7C7B\u578B\u5B89\u5168\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">logName</span><span class="token punctuation">(</span>something<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>something<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;matt&#39;</span><span class="token punctuation">,</span> job<span class="token operator">:</span> <span class="token string">&#39;being awesome&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> animal <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;cow&#39;</span><span class="token punctuation">,</span> diet<span class="token operator">:</span> <span class="token string">&#39;vegan, but has milk of own specie&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> randow <span class="token operator">=</span> <span class="token punctuation">{</span> note<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I don&#39;t have a name property</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">logName</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token function">logName</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token function">logName</span><span class="token punctuation">(</span>randow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u6CA1\u6709 \`name\` \u5C5E\u6027</span>
</code></pre></div><p>\u4F46\u662F\uFF0C\u7ED3\u6784\u7C7B\u578B\u6709\u4E00\u4E2A\u7F3A\u70B9\uFF0C\u5B83\u80FD\u8BEF\u5BFC\u4F60\u8BA4\u4E3A\u67D0\u4E9B\u4E1C\u897F\u63A5\u6536\u7684\u6570\u636E\u6BD4\u5B83\u5B9E\u9645\u7684\u591A\u3002\u5982\u4E0B\u4F8B\uFF0CTypeScript \u53D1\u51FA\u9519\u8BEF\u8B66\u544A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">logName</span><span class="token punctuation">(</span>something<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>something<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">logName</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;matt&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token function">logName</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;matt&#39;</span><span class="token punctuation">,</span> job<span class="token operator">:</span> <span class="token string">&#39;being awesome&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u5BF9\u8C61\u5B57\u9762\u91CF\u53EA\u80FD\u6307\u5B9A\u5DF2\u77E5\u5C5E\u6027\uFF0C\`job\` \u5C5E\u6027\u5728\u8FD9\u91CC\u5E76\u4E0D\u5B58\u5728\u3002</span>
</code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>\u8BF7\u6CE8\u610F\uFF0C\u8FD9\u79CD\u9519\u8BEF\u63D0\u793A\uFF0C\u53EA\u4F1A\u53D1\u751F\u5728\u5BF9\u8C61\u5B57\u9762\u91CF\u4E0A\u3002</p></div><p>\u5982\u679C\u6CA1\u6709\u8FD9\u79CD\u9519\u8BEF\u63D0\u793A\uFF0C\u6211\u4EEC\u53EF\u80FD\u4F1A\u53BB\u5BFB\u627E\u51FD\u6570\u7684\u8C03\u7528 <code>logName({ name: &#39;matt&#39;, job: &#39;being awesome&#39; })</code>\uFF0C\u7EE7\u800C\u4F1A\u8BA4\u4E3A <code>logName</code> \u53EF\u80FD\u4F1A\u4F7F\u7528 <code>job</code> \u5C5E\u6027\u505A\u4E00\u4E9B\u4E8B\u60C5\uFF0C\u7136\u800C\u5B9E\u9645\u4E0A <code>logName</code> \u5E76\u6CA1\u6709\u4F7F\u7528\u5B83\u3002</p><p>\u53E6\u5916\u4E00\u4E2A\u4F7F\u7528\u6BD4\u8F83\u591A\u7684\u573A\u666F\u662F\u4E0E\u5177\u6709\u53EF\u9009\u6210\u5458\u7684\u63A5\u53E3\u4E00\u8D77\u4F7F\u7528\uFF0C\u5982\u679C\u6CA1\u6709\u8FD9\u6837\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\u68C0\u67E5\uFF0C\u5F53\u4F60\u8F93\u5165\u9519\u8BEF\u5355\u8BCD\u7684\u65F6\u5019\uFF0C\u5E76\u4E0D\u4F1A\u53D1\u51FA\u9519\u8BEF\u8B66\u544A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">logIfHasName</span><span class="token punctuation">(</span>something<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>something<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>something<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;matt&#39;</span><span class="token punctuation">,</span> job<span class="token operator">:</span> <span class="token string">&#39;being awesome&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> animal <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;cow&#39;</span><span class="token punctuation">,</span> diet<span class="token operator">:</span> <span class="token string">&#39;vegan, but has milk of own species&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">logIfHasName</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// okay</span>
<span class="token function">logIfHasName</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// okay</span>

<span class="token function">logIfHasName</span><span class="token punctuation">(</span><span class="token punctuation">{</span> neme<span class="token operator">:</span> <span class="token string">&#39;I just misspelled name to neme&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u5BF9\u8C61\u5B57\u9762\u91CF\u53EA\u80FD\u6307\u5B9A\u5DF2\u77E5\u5C5E\u6027\uFF0C\`neme\` \u5C5E\u6027\u4E0D\u5B58\u5728\u3002</span>
</code></pre></div><p>\u4E4B\u6240\u4EE5\u53EA\u5BF9\u5BF9\u8C61\u5B57\u9762\u91CF\u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\uFF0C\u56E0\u4E3A\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u90A3\u4E9B\u5B9E\u9645\u4E0A\u5E76\u6CA1\u6709\u88AB\u4F7F\u7528\u5230\u7684\u5C5E\u6027\u6709\u53EF\u80FD\u4F1A\u62FC\u5199\u9519\u8BEF\u6216\u8005\u4F1A\u88AB\u8BEF\u7528\u3002</p><h4 id="-70" tabindex="-1"><a class="header-anchor" href="#-70">#</a> \u5141\u8BB8\u989D\u5916\u7684\u5C5E\u6027</h4><p>\u4E00\u4E2A\u7C7B\u578B\u80FD\u591F\u5305\u542B\u7D22\u5F15\u7B7E\u540D\uFF0C\u4EE5\u660E\u786E\u8868\u660E\u53EF\u4EE5\u4F7F\u7528\u989D\u5916\u7684\u5C5E\u6027\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

x <span class="token operator">=</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> baz<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// ok, &#39;baz&#39; \u5C5E\u6027\u5339\u914D\u4E8E\u7D22\u5F15\u7B7E\u540D</span>
</code></pre></div><h4 id="react-state" tabindex="-1"><a class="header-anchor" href="#react-state">#</a> \u7528\u4F8B: React State</h4><p>Facebook ReactJS \u4E3A\u5BF9\u8C61\u7684 Freshness \u63D0\u4F9B\u4E86\u4E00\u4E2A\u5F88\u597D\u7684\u7528\u4F8B\uFF0C\u901A\u5E38\u5728\u7EC4\u4EF6\u4E2D\uFF0C\u4F60\u53EA\u4F7F\u7528\u5C11\u91CF\u5C5E\u6027\uFF0C\u800C\u4E0D\u662F\u4F20\u5165\u6240\u6709\uFF0C\u6765\u8C03\u7528 <code>setState</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u5047\u8BBE</span>
<span class="token keyword">interface</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  bar<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F60\u53EF\u80FD\u60F3\u505A\uFF1A</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u6CA1\u6709\u5C5E\u6027 &#39;bar&#39;</span>

<span class="token comment">// \u56E0\u4E3A state \u5305\u542B &#39;foo&#39; \u4E0E &#39;bar&#39;\uFF0CTypeScript \u4F1A\u5F3A\u5236\u4F60\u8FD9\u4E48\u505A\uFF1A</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span> bar<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>bar <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u4F60\u60F3\u4F7F\u7528 Freshness\uFF0C\u4F60\u53EF\u80FD\u9700\u8981\u5C06\u6240\u6709\u6210\u5458\u6807\u8BB0\u4E3A\u53EF\u9009\uFF0C\u8FD9\u4ECD\u7136\u4F1A\u6355\u6349\u5230\u62FC\u5199\u9519\u8BEF\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u5047\u8BBE</span>
<span class="token keyword">interface</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>
  foo<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  bar<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F60\u53EF\u80FD\u60F3\u505A</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Yay works fine!</span>

<span class="token comment">// \u7531\u4E8E Freshness\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u9632\u6B62\u9519\u522B\u5B57</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foos<span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u5BF9\u8C61\u53EA\u80FD\u6307\u5B9A\u5DF2\u77E5\u5C5E\u6027</span>

<span class="token comment">// \u4ECD\u7136\u4F1A\u6709\u7C7B\u578B\u68C0\u67E5</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u65E0\u6CD5\u5C06 number \u7C7B\u578B\u8D4B\u503C\u7ED9 string \u7C7B\u578B</span>
</code></pre></div><h3 id="-71" tabindex="-1"><a class="header-anchor" href="#-71">#</a> \u7C7B\u578B\u4FDD\u62A4</h3><p>\u7C7B\u578B\u4FDD\u62A4\u5141\u8BB8\u4F60\u4F7F\u7528\u66F4\u5C0F\u8303\u56F4\u4E0B\u7684\u5BF9\u8C61\u7C7B\u578B\u3002</p><h4 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof">#</a> typeof</h4><p>TypeScript \u719F\u77E5 JavaScript \u4E2D <code>instanceof</code> \u548C <code>typeof</code> \u8FD0\u7B97\u7B26\u7684\u7528\u6CD5\u3002\u5982\u679C\u4F60\u5728\u4E00\u4E2A\u6761\u4EF6\u5757\u4E2D\u4F7F\u7528\u8FD9\u4E9B\uFF0CTypeScript \u5C06\u4F1A\u63A8\u5BFC\u51FA\u5728\u6761\u4EF6\u5757\u4E2D\u7684\u7684\u53D8\u91CF\u7C7B\u578B\u3002\u5982\u4E0B\u4F8B\u6240\u793A\uFF0CTypeScript \u5C06\u4F1A\u8FA8\u522B <code>string</code> \u4E0A\u662F\u5426\u5B58\u5728\u7279\u5B9A\u7684\u51FD\u6570\uFF0C\u4EE5\u53CA\u662F\u5426\u53D1\u751F\u4E86\u62FC\u5199\u9519\u8BEF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">doSome</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728\u8FD9\u4E2A\u5757\u4E2D\uFF0CTypeScript \u77E5\u9053 \`x\` \u7684\u7C7B\u578B\u5FC5\u987B\u662F \`string\`</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">subtr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: &#39;subtr&#39; \u65B9\u6CD5\u5E76\u6CA1\u6709\u5B58\u5728\u4E8E \`string\` \u4E0A</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
  <span class="token punctuation">}</span>

  x<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u65E0\u6CD5\u4FDD\u8BC1 \`x\` \u662F \`string\` \u7C7B\u578B</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof">#</a> instanceof</h4><p>\u8FD9\u6709\u4E00\u4E2A\u5173\u4E8E <code>class</code> \u548C <code>instanceof</code> \u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
  common <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  bar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
  common <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">doStuff</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg <span class="token keyword">instanceof</span> <span class="token class-name">Bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">doStuff</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">doStuff</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>TypeScript \u751A\u81F3\u80FD\u591F\u7406\u89E3 <code>else</code>\u3002\u5F53\u4F60\u4F7F\u7528 <code>if</code> \u6765\u7F29\u5C0F\u7C7B\u578B\u65F6\uFF0CTypeScript \u77E5\u9053\u5728\u5176\u4ED6\u5757\u4E2D\u7684\u7C7B\u578B\u5E76\u4E0D\u662F <code>if</code> \u4E2D\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  bar <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">doStuff</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u4E2A\u5757\u4E2D\uFF0C\u4E00\u5B9A\u662F &#39;Bar&#39;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">doStuff</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">doStuff</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="in" tabindex="-1"><a class="header-anchor" href="#in">#</a> in</h4><p><code>in</code> \u64CD\u4F5C\u7B26\u53EF\u4EE5\u5B89\u5168\u7684\u68C0\u67E5\u4E00\u4E2A\u5BF9\u8C61\u4E0A\u662F\u5426\u5B58\u5728\u4E00\u4E2A\u5C5E\u6027\uFF0C\u5B83\u901A\u5E38\u4E5F\u88AB\u4F5C\u4E3A\u7C7B\u578B\u4FDD\u62A4\u4F7F\u7528\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token punctuation">{</span>
  y<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">doStuff</span><span class="token punctuation">(</span>q<span class="token operator">:</span> <span class="token constant">A</span> <span class="token operator">|</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;x&#39;</span> <span class="token keyword">in</span> q<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// q: A</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// q: B</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-72" tabindex="-1"><a class="header-anchor" href="#-72">#</a> \u5B57\u9762\u91CF\u7C7B\u578B\u4FDD\u62A4</h4><p>\u5F53\u4F60\u5728\u8054\u5408\u7C7B\u578B\u91CC\u4F7F\u7528\u5B57\u9762\u91CF\u7C7B\u578B\u65F6\uFF0C\u4F60\u53EF\u4EE5\u68C0\u67E5\u5B83\u4EEC\u662F\u5426\u6709\u533A\u522B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u5B57\u9762\u91CF\u7C7B\u578B</span>
  foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Bar</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u5B57\u9762\u91CF\u7C7B\u578B</span>
  bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">doStuff</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E00\u5B9A\u662F Bar</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-73" tabindex="-1"><a class="header-anchor" href="#-73">#</a> \u4F7F\u7528\u5B9A\u4E49\u7684\u7C7B\u578B\u4FDD\u62A4</h4><p>JavaScript \u5E76\u6CA1\u6709\u5185\u7F6E\u975E\u5E38\u4E30\u5BCC\u7684\u3001\u8FD0\u884C\u65F6\u7684\u81EA\u6211\u68C0\u67E5\u673A\u5236\u3002\u5F53\u4F60\u5728\u4F7F\u7528\u666E\u901A\u7684 JavaScript \u5BF9\u8C61\u65F6\uFF08\u4F7F\u7528\u7ED3\u6784\u7C7B\u578B\uFF0C\u66F4\u6709\u76CA\u5904\uFF09\uFF0C\u4F60\u751A\u81F3\u65E0\u6CD5\u8BBF\u95EE <code>instanceof</code> \u548C <code>typeof</code>\u3002\u5728\u8FD9\u79CD\u60C5\u666F\u4E0B\uFF0C\u4F60\u53EF\u4EE5\u521B\u5EFA<em>\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u7C7B\u578B\u4FDD\u62A4\u51FD\u6570</em>\uFF0C\u8FD9\u4EC5\u4EC5\u662F\u4E00\u4E2A\u8FD4\u56DE\u503C\u4E3A\u7C7B\u4F3C\u4E8E<code>someArgumentName is SomeType</code> \u7684\u51FD\u6570\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u4EC5\u4EC5\u662F\u4E00\u4E2A interface</span>
<span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  common<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  common<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7528\u6237\u81EA\u5DF1\u5B9A\u4E49\u7684\u7C7B\u578B\u4FDD\u62A4\uFF01</span>
<span class="token keyword">function</span> <span class="token function">isFoo</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span><span class="token operator">:</span> arg <span class="token keyword">is</span> Foo <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>arg <span class="token keyword">as</span> Foo<span class="token punctuation">)</span><span class="token punctuation">.</span>foo <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7528\u6237\u81EA\u5DF1\u5B9A\u4E49\u7684\u7C7B\u578B\u4FDD\u62A4\u4F7F\u7528\u7528\u4F8B\uFF1A</span>
<span class="token keyword">function</span> <span class="token function">doStuff</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Foo <span class="token operator">|</span> Bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFoo</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">doStuff</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> common<span class="token operator">:</span> <span class="token string">&#39;123&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">doStuff</span><span class="token punctuation">(</span><span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> common<span class="token operator">:</span> <span class="token string">&#39;123&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="-74" tabindex="-1"><a class="header-anchor" href="#-74">#</a> \u5B57\u9762\u91CF\u7C7B\u578B</h3><p>\u5B57\u9762\u91CF\u662F JavaScript \u672C\u8EAB\u63D0\u4F9B\u7684\u4E00\u4E2A\u51C6\u786E\u53D8\u91CF\u3002</p><h4 id="-75" tabindex="-1"><a class="header-anchor" href="#-75">#</a> \u5B57\u7B26\u4E32\u5B57\u9762\u91CF</h4><p>\u4F60\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u4F5C\u4E3A\u4E00\u4E2A\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u521B\u5EFA\u4E86\u4E00\u4E2A\u88AB\u79F0\u4E3A <code>foo</code> \u53D8\u91CF\uFF0C\u5B83\u4EC5\u63A5\u6536\u4E00\u4E2A\u5B57\u9762\u91CF\u503C\u4E3A <code>Hello</code> \u7684\u53D8\u91CF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>
foo <span class="token operator">=</span> <span class="token string">&#39;Bar&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error: &#39;bar&#39; \u4E0D\u80FD\u8D4B\u503C\u7ED9\u7C7B\u578B &#39;Hello&#39;</span>
</code></pre></div><p>\u5B83\u4EEC\u672C\u8EAB\u5E76\u4E0D\u662F\u5F88\u5B9E\u7528\uFF0C\u4F46\u662F\u53EF\u4EE5\u5728\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u4E2D\u7EC4\u5408\u521B\u5EFA\u4E00\u4E2A\u5F3A\u5927\u7684\uFF08\u5B9E\u7528\u7684\uFF09\u62BD\u8C61\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">CardinalDirection</span> <span class="token operator">=</span> <span class="token string">&#39;North&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;East&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;South&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;West&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">move</span><span class="token punctuation">(</span>distance<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> direction<span class="token operator">:</span> CardinalDirection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token function">move</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;North&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token function">move</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Nurth&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><h4 id="-76" tabindex="-1"><a class="header-anchor" href="#-76">#</a> \u5176\u4ED6\u5B57\u9762\u91CF\u7C7B\u578B</h4><p>TypeScript \u540C\u6837\u4E5F\u63D0\u4F9B <code>boolean</code> \u548C <code>number</code> \u7684\u5B57\u9762\u91CF\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">OneToFive</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Bools</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token operator">|</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="-77" tabindex="-1"><a class="header-anchor" href="#-77">#</a> \u63A8\u65AD</h4><p>\u901A\u5E38\uFF0C\u4F60\u4F1A\u5F97\u5230\u4E00\u4E2A\u7C7B\u4F3C\u4E8E <code>Type string is not assignable to type &#39;foo&#39;</code> \u7684\u9519\u8BEF\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">iTakeFoo</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token punctuation">{</span>
  someProp<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">iTakeFoo</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span>someProp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: Argument of type string is not assignable to parameter of type &#39;foo&#39;</span>
</code></pre></div><p>\u8FD9\u662F\u7531\u4E8E <code>test</code> \u88AB\u63A8\u65AD\u4E3A <code>{ someProp: string }</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u91C7\u7528\u4E00\u4E2A\u7B80\u5355\u7684\u7C7B\u578B\u65AD\u8A00\u6765\u544A\u8BC9 TypeScript \u4F60\u60F3\u63A8\u65AD\u7684\u5B57\u9762\u91CF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">iTakeFoo</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Test</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  someProp<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> test<span class="token operator">:</span> Test <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u63A8\u65AD \`someProp\` \u6C38\u8FDC\u662F &#39;foo&#39;</span>
  someProp<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">iTakeFoo</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span>someProp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre></div><h4 id="-78" tabindex="-1"><a class="header-anchor" href="#-78">#</a> \u4F7F\u7528\u7528\u4F8B</h4><p>TypeScript \u679A\u4E3E\u7C7B\u578B\u662F\u57FA\u4E8E\u6570\u5B57\u7684\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u5E26\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7684\u8054\u5408\u7C7B\u578B\uFF0C\u6765\u6A21\u62DF\u4E00\u4E2A\u57FA\u4E8E\u5B57\u7B26\u4E32\u7684\u679A\u4E3E\u7C7B\u578B\uFF0C\u5C31\u597D\u50CF\u4E0A\u6587\u4E2D\u63D0\u51FA\u7684 <code>CardinalDirection</code>\u3002\u4F60\u751A\u81F3\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u51FD\u6570\u6765\u751F\u6210 <code>key: value</code> \u7684\u7ED3\u6784\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u7528\u4E8E\u521B\u5EFA\u5B57\u7B26\u4E32\u5217\u8868\u6620\u5C04\u81F3 \`K: V\` \u7684\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">strEnum</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> o<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u540E\uFF0C\u4F60\u5C31\u53EF\u4EE5\u4F7F\u7528 <code>keyof</code>\u3001<code>typeof</code> \u6765\u751F\u6210\u5B57\u7B26\u4E32\u7684\u8054\u5408\u7C7B\u578B\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u5B8C\u5168\u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u7528\u4E8E\u521B\u5EFA\u5B57\u7B26\u4E32\u5217\u8868\u6620\u5C04\u81F3 \`K: V\` \u7684\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">strEnum</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> o<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA K: V</span>
<span class="token keyword">const</span> Direction <span class="token operator">=</span> <span class="token function">strEnum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;North&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;South&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;East&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;West&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Direction</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> Direction<span class="token punctuation">;</span>

<span class="token comment">// \u7B80\u5355\u7684\u4F7F\u7528</span>
<span class="token keyword">let</span> sample<span class="token operator">:</span> Direction<span class="token punctuation">;</span>

sample <span class="token operator">=</span> Direction<span class="token punctuation">.</span>North<span class="token punctuation">;</span> <span class="token comment">// Okay</span>
sample <span class="token operator">=</span> <span class="token string">&#39;North&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Okay</span>
sample <span class="token operator">=</span> <span class="token string">&#39;AnythingElse&#39;</span><span class="token punctuation">;</span> <span class="token comment">// ERROR!</span>
</code></pre></div><h4 id="-79" tabindex="-1"><a class="header-anchor" href="#-79">#</a> \u8FA8\u6790\u8054\u5408\u7C7B\u578B</h4><p>\u6211\u4EEC\u5C06\u4F1A\u5728\u6B64\u4E66\u7684\u7A0D\u540E\u7AE0\u8282\u8BB2\u89E3\u5B83\u3002</p><h3 id="readonly" tabindex="-1"><a class="header-anchor" href="#readonly">#</a> readonly</h3><p>TypeScript \u7C7B\u578B\u7CFB\u7EDF\u5141\u8BB8\u4F60\u5728\u4E00\u4E2A\u63A5\u53E3\u91CC\u4F7F\u7528 <code>readonly</code> \u6765\u6807\u8BB0\u5C5E\u6027\u3002\u5B83\u80FD\u8BA9\u4F60\u4EE5\u4E00\u79CD\u66F4\u5B89\u5168\u7684\u65B9\u5F0F\u5DE5\u4F5C\uFF08\u4E0D\u53EF\u9884\u671F\u7684\u6539\u53D8\u662F\u5F88\u7CDF\u7CD5\u7684\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>config<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">readonly</span> bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token keyword">readonly</span> bas<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ..</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> bas<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u73B0\u5728\u4F60\u80FD\u591F\u786E\u4FDD &#39;config&#39; \u4E0D\u80FD\u591F\u88AB\u6539\u53D8\u4E86</span>
</code></pre></div><p>\u5F53\u7136\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u5728 <code>interface</code> \u548C <code>type</code> \u91CC\u4F7F\u7528 <code>readonly</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> bas<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u521D\u59CB\u5316</span>
<span class="token keyword">const</span> foo<span class="token operator">:</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> bas<span class="token operator">:</span> <span class="token number">456</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E0D\u80FD\u88AB\u6539\u53D8</span>
foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span> <span class="token comment">// Error: foo.bar \u4E3A\u4EC5\u8BFB\u5C5E\u6027</span>
</code></pre></div><p>\u4F60\u4E5F\u80FD\u6307\u5B9A\u4E00\u4E2A\u7C7B\u7684\u5C5E\u6027\u4E3A\u53EA\u8BFB\uFF0C\u7136\u540E\u5728\u58F0\u660E\u65F6\u6216\u8005\u6784\u9020\u51FD\u6570\u4E2D\u521D\u59CB\u5316\u5B83\u4EEC\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
  <span class="token keyword">readonly</span> baz<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>baz <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="readonly-1" tabindex="-1"><a class="header-anchor" href="#readonly-1">#</a> Readonly</h4><p>\u8FD9\u6709\u4E00\u4E2A <code>Readonly</code> \u7684\u6620\u5C04\u7C7B\u578B\uFF0C\u5B83\u63A5\u6536\u4E00\u4E2A\u6CDB\u578B <code>T</code>\uFF0C\u7528\u6765\u628A\u5B83\u7684\u6240\u6709\u5C5E\u6027\u6807\u8BB0\u4E3A\u53EA\u8BFB\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  bas<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FooReadonly</span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span>Foo<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> foo<span class="token operator">:</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> bas<span class="token operator">:</span> <span class="token number">456</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fooReadonly<span class="token operator">:</span> FooReadonly <span class="token operator">=</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> bas<span class="token operator">:</span> <span class="token number">456</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
fooReadonly<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span> <span class="token comment">// Error: bar \u5C5E\u6027\u53EA\u8BFB</span>
</code></pre></div><h4 id="-80" tabindex="-1"><a class="header-anchor" href="#-80">#</a> \u5176\u4ED6\u7684\u4F7F\u7528\u7528\u4F8B</h4><h5 id="reactjs" tabindex="-1"><a class="header-anchor" href="#reactjs">#</a> ReactJS</h5><p><code>ReactJS</code> \u662F\u4E00\u4E2A\u559C\u6B22\u7528\u4E0D\u53D8\u6570\u636E\u7684\u5E93\uFF0C\u4F60\u53EF\u4EE5\u6807\u8BB0\u4F60\u7684 <code>Props</code> \u548C <code>State</code> \u4E3A\u4E0D\u53EF\u53D8\u6570\u636E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Something</span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>Component<span class="token operator">&lt;</span>Props<span class="token punctuation">,</span> State<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">someMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F60\u53EF\u4EE5\u653E\u5FC3\uFF0C\u6CA1\u6709\u4EBA\u4F1A\u50CF\u4E0B\u9762\u8FD9\u4E48\u505A</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// Error: props \u662F\u4E0D\u53EF\u53D8\u7684</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>baz <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u4F60\u5E94\u8BE5\u4F7F\u7528 this.setState()</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u800C\uFF0C\u4F60\u5E76\u6CA1\u6709\u5FC5\u8981\u8FD9\u4E48\u505A\uFF0C<code>React</code> \u7684\u58F0\u660E\u6587\u4EF6\u5DF2\u7ECF\u6807\u8BB0\u8FD9\u4E9B\u4E3A <code>readonly</code>\uFF08\u901A\u8FC7\u4F20\u5165\u6CDB\u578B\u53C2\u6570\u81F3\u4E00\u4E2A\u5185\u90E8\u5305\u88C5\uFF0C\u6765\u628A\u6BCF\u4E2A\u5C5E\u6027\u6807\u8BB0\u4E3A <code>readonly</code>\uFF0C\u5982\u4E0A\u4F8B\u5B50\u6240\u793A\uFF09\uFF0C</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Something</span> <span class="token keyword">extends</span> <span class="token class-name">React</span><span class="token punctuation">.</span>Component<span class="token operator">&lt;</span><span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> baz<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">someMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// Error: props \u662F\u4E0D\u53EF\u53D8\u7684</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>baz <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u4F60\u5E94\u8BE5\u4F7F\u7528 this.setState()</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h5 id="-81" tabindex="-1"><a class="header-anchor" href="#-81">#</a> \u7EDD\u5BF9\u7684\u4E0D\u53EF\u53D8</h5><p>\u4F60\u751A\u81F3\u53EF\u4EE5\u628A\u7D22\u5F15\u7B7E\u540D\u6807\u8BB0\u4E3A\u53EA\u8BFB\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528</span>

<span class="token keyword">const</span> foo<span class="token operator">:</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token number">345</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok\uFF08\u8BFB\u53D6\uFF09</span>
foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u5C5E\u6027\u53EA\u8BFB</span>
</code></pre></div><p>\u5982\u679C\u4F60\u60F3\u4EE5\u4E0D\u53D8\u7684\u65B9\u5F0F\u4F7F\u7528\u539F\u751F JavaScript \u6570\u7EC4\uFF0C\u53EF\u4EE5\u4F7F\u7528 TypeScript \u63D0\u4F9B\u7684 <code>ReadonlyArray&lt;T&gt;</code> \u63A5\u53E3\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
foo<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: ReadonlyArray \u4E0A\u4E0D\u5B58\u5728 \`push\`\uFF0C\u56E0\u4E3A\u4ED6\u4F1A\u6539\u53D8\u6570\u7EC4</span>
foo <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok, \u521B\u5EFA\u4E86\u4E00\u4E2A\u590D\u5236</span>
</code></pre></div><h5 id="-82" tabindex="-1"><a class="header-anchor" href="#-82">#</a> \u81EA\u52A8\u63A8\u65AD</h5><p>\u5728\u4E00\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u7F16\u8BD1\u5668\u80FD\u628A\u4E00\u4E9B\u7279\u5B9A\u7684\u5C5E\u6027\u63A8\u65AD\u4E3A <code>readonly</code>\uFF0C\u4F8B\u5982\u5728\u4E00\u4E2A <code>class</code> \u4E2D\uFF0C\u5982\u679C\u4F60\u6709\u4E00\u4E2A\u53EA\u542B\u6709 <code>getter</code> \u4F46\u662F\u6CA1\u6709 <code>setter</code> \u7684\u5C5E\u6027\uFF0C\u4ED6\u80FD\u88AB\u63A8\u65AD\u4E3A\u53EA\u8BFB\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  firstName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">;</span>
  lastName<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Doe&#39;</span><span class="token punctuation">;</span>

  <span class="token keyword">get</span> <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>fullName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// John Doe</span>
person<span class="token punctuation">.</span>fullName <span class="token operator">=</span> <span class="token string">&#39;Dear Reader&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error, fullName \u53EA\u8BFB</span>
</code></pre></div><h4 id="const" tabindex="-1"><a class="header-anchor" href="#const">#</a> \u4E0E <code>const</code> \u7684\u4E0D\u540C</h4><p><code>const</code></p><ul><li>\u7528\u4E8E\u53D8\u91CF\uFF1B</li><li>\u53D8\u91CF\u4E0D\u80FD\u91CD\u65B0\u8D4B\u503C\u7ED9\u5176\u4ED6\u4EFB\u4F55\u4E8B\u7269\u3002</li></ul><p><code>readonly</code></p><ul><li>\u7528\u4E8E\u5C5E\u6027\uFF1B</li><li>\u7528\u4E8E\u522B\u540D\uFF0C\u53EF\u4EE5\u4FEE\u6539\u5C5E\u6027\uFF1B</li></ul><p>\u7B80\u5355\u7684\u4F8B\u5B50 1\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// \u53D8\u91CF</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u5C5E\u6027</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7B80\u5355\u7684\u4F8B\u5B50 2\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token number">123</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">iMutateFoo</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> <span class="token punctuation">{</span> bar<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">iMutateFoo</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 456</span>
</code></pre></div><p><code>readonly</code> \u80FD\u786E\u4FDD\u201C\u6211\u201D\u4E0D\u80FD\u4FEE\u6539\u5C5E\u6027\uFF0C\u4F46\u662F\u5F53\u4F60\u628A\u8FD9\u4E2A\u5C5E\u6027\u4EA4\u7ED9\u5176\u4ED6\u5E76\u6CA1\u6709\u8FD9\u79CD\u4FDD\u8BC1\u7684\u4F7F\u7528\u8005\uFF08\u5141\u8BB8\u51FA\u4E8E\u7C7B\u578B\u517C\u5BB9\u6027\u7684\u539F\u56E0\uFF09\uFF0C\u4ED6\u4EEC\u80FD\u6539\u53D8\u5B83\u3002\u5F53\u7136\uFF0C\u5982\u679C <code>iMutateFoo</code> \u660E\u786E\u7684\u8868\u793A\uFF0C\u4ED6\u4EEC\u7684\u53C2\u6570\u4E0D\u53EF\u4FEE\u6539\uFF0C\u90A3\u4E48\u7F16\u8BD1\u5668\u4F1A\u53D1\u51FA\u9519\u8BEF\u8B66\u544A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> bar<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> foo<span class="token operator">:</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  bar<span class="token operator">:</span> <span class="token number">123</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">iTakeFoo</span><span class="token punctuation">(</span>foo<span class="token operator">:</span> Foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  foo<span class="token punctuation">.</span>bar <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span> <span class="token comment">// Error: bar \u5C5E\u6027\u53EA\u8BFB</span>
<span class="token punctuation">}</span>

<span class="token function">iTakeFoo</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="-83" tabindex="-1"><a class="header-anchor" href="#-83">#</a> \u8303\u578B</h3><p>\u8BBE\u8BA1\u6CDB\u578B\u7684\u5173\u952E\u76EE\u7684\u662F\u5728\u6210\u5458\u4E4B\u95F4\u63D0\u4F9B\u6709\u610F\u4E49\u7684\u7EA6\u675F\uFF0C\u8FD9\u4E9B\u6210\u5458\u53EF\u4EE5\u662F\uFF1A</p><ul><li>\u7C7B\u7684\u5B9E\u4F8B\u6210\u5458</li><li>\u7C7B\u7684\u65B9\u6CD5</li><li>\u51FD\u6570\u53C2\u6570</li><li>\u51FD\u6570\u8FD4\u56DE\u503C</li></ul><h4 id="-84" tabindex="-1"><a class="header-anchor" href="#-84">#</a> \u52A8\u673A\u548C\u793A\u4F8B</h4><p>\u4E0B\u9762\u662F\u5BF9\u4E00\u4E2A\u5148\u8FDB\u5148\u51FA\u7684\u6570\u636E\u7ED3\u6784\u2014\u2014\u961F\u5217\uFF0C\u5728 <code>TypeScript</code> \u548C <code>JavaScript</code> \u4E2D\u7684\u7B80\u5355\u5B9E\u73B0\u3002</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> item <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function-variable function">pop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\u5B58\u5728\u4E00\u4E2A\u95EE\u9898\uFF0C\u5B83\u5141\u8BB8\u4F60\u5411\u961F\u5217\u4E2D\u6DFB\u52A0\u4EFB\u4F55\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u5F53\u7136\uFF0C\u5F53\u6570\u636E\u88AB\u5F39\u51FA\u961F\u5217\u65F6\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4EFB\u610F\u7C7B\u578B\u3002\u5728\u4E0B\u9762\u7684\u793A\u4F8B\u4E2D\uFF0C\u770B\u8D77\u6765\u4EBA\u4EEC\u53EF\u4EE5\u5411\u961F\u5217\u4E2D\u6DFB\u52A0 <code>string</code> \u7C7B\u578B\u7684\u6570\u636E\uFF0C\u4F46\u662F\u5B9E\u9645\u4E0A\uFF0C\u8BE5\u7528\u6CD5\u5047\u5B9A\u7684\u662F\u53EA\u6709 <code>number</code> \u7C7B\u578B\u4F1A\u88AB\u6DFB\u52A0\u5230\u961F\u5217\u91CC\u3002</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> item <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function-variable function">pop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Oops\uFF0C\u4E00\u4E2A\u9519\u8BEF</span>

<span class="token comment">// \u4E00\u4E2A\u4F7F\u7528\u8005\uFF0C\u8D70\u5165\u4E86\u8BEF\u533A</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// RUNTIME ERROR</span>
</code></pre></div><p>\u4E00\u4E2A\u89E3\u51B3\u7684\u529E\u6CD5\uFF08\u4E8B\u5B9E\u4E0A\uFF0C\u8FD9\u4E5F\u662F\u4E0D\u652F\u6301\u6CDB\u578B\u7C7B\u578B\u7684\u552F\u4E00\u89E3\u51B3\u529E\u6CD5\uFF09\u662F\u4E3A\u8FD9\u4E9B\u7EA6\u675F\u521B\u5EFA\u7279\u6B8A\u7C7B\uFF0C\u5982\u5FEB\u901F\u521B\u5EFA\u6570\u5B57\u7C7B\u578B\u7684\u961F\u5217\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">QueueNumber</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  pop <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueueNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u80FD\u63A8\u5165\u4E00\u4E2A \`string\` \u7C7B\u578B\uFF0C\u53EA\u80FD\u662F \`number\` \u7C7B\u578B</span>

<span class="token comment">// \u5982\u679C\u8BE5\u9519\u8BEF\u5F97\u5230\u4FEE\u590D\uFF0C\u5176\u4ED6\u5C06\u4E0D\u4F1A\u51FA\u73B0\u95EE\u9898</span>
</code></pre></div><p>\u5F53\u7136\uFF0C\u5FEB\u901F\u4E5F\u610F\u5473\u7740\u75DB\u82E6\u3002\u4F8B\u5982\u5F53\u4F60\u60F3\u521B\u5EFA\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684\u961F\u5217\u65F6\uFF0C\u4F60\u5C06\u4E0D\u5F97\u4E0D\u518D\u6B21\u4FEE\u6539\u76F8\u5F53\u5927\u7684\u4EE3\u7801\u3002\u6211\u4EEC\u771F\u6B63\u60F3\u8981\u7684\u4E00\u79CD\u65B9\u5F0F\u662F\u65E0\u8BBA\u4EC0\u4E48\u7C7B\u578B\u88AB\u63A8\u5165\u961F\u5217\uFF0C\u88AB\u63A8\u51FA\u7684\u7C7B\u578B\u90FD\u4E0E\u63A8\u5165\u7C7B\u578B\u4E00\u6837\u3002\u5F53\u4F60\u4F7F\u7528\u6CDB\u578B\u65F6\uFF0C\u8FD9\u4F1A\u5F88\u5BB9\u6613\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6CDB\u578B\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  pop <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5355\u7684\u4F7F\u7528</span>
<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Queue<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error\uFF1A\u4E0D\u80FD\u63A8\u5165\u4E00\u4E2A \`string\`\uFF0C\u53EA\u6709 number \u7C7B\u578B\u88AB\u5141\u8BB8</span>
</code></pre></div><p>\u53E6\u5916\u4E00\u4E2A\u6211\u4EEC\u89C1\u8FC7\u7684\u4F8B\u5B50\uFF1A\u4E00\u4E2A <code>reverse</code> \u51FD\u6570\uFF0C\u73B0\u5728\u5728\u8FD9\u4E2A\u51FD\u6570\u91CC\u63D0\u4F9B\u4E86\u51FD\u6570\u53C2\u6570\u4E0E\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7EA6\u675F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">reverse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> toreturn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> items<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    toreturn<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> toreturn<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> sample <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> reversed <span class="token operator">=</span> <span class="token function">reverse</span><span class="token punctuation">(</span>sample<span class="token punctuation">)</span><span class="token punctuation">;</span>

reversed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
reversed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>

reversed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
reversed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u5728\u6B64\u7AE0\u8282\u4E2D\uFF0C\u4F60\u5DF2\u7ECF\u4E86\u89E3\u5728\u7C7B\u548C\u51FD\u6570\u4E0A\u4F7F\u7528\u6CDB\u578B\u7684\u4F8B\u5B50\u3002\u4E00\u4E2A\u503C\u5F97\u8865\u5145\u4E00\u70B9\u7684\u662F\uFF0C\u4F60\u53EF\u4EE5\u4E3A\u521B\u5EFA\u7684\u6210\u5458\u51FD\u6570\u6DFB\u52A0\u6CDB\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Utility</span> <span class="token punctuation">{</span>
  <span class="token generic-function"><span class="token function">reverse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> toreturn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      toreturn<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> toreturn<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4F60\u53EF\u4EE5\u968F\u610F\u8C03\u7528\u6CDB\u578B\u53C2\u6570\uFF0C\u5F53\u4F60\u4F7F\u7528\u7B80\u5355\u7684\u6CDB\u578B\u65F6\uFF0C\u6CDB\u578B\u5E38\u7528 <code>T</code>\u3001<code>U</code>\u3001<code>V</code> \u8868\u793A\u3002\u5982\u679C\u5728\u4F60\u7684\u53C2\u6570\u91CC\uFF0C\u4E0D\u6B62\u62E5\u6709\u4E00\u4E2A\u6CDB\u578B\uFF0C\u4F60\u5E94\u8BE5\u4F7F\u7528\u4E00\u4E2A\u66F4\u8BED\u4E49\u5316\u540D\u79F0\uFF0C\u5982 <code>TKey</code> \u548C <code>TValue</code> \uFF08\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u4EE5 <code>T</code> \u4F5C\u4E3A\u6CDB\u578B\u7684\u524D\u7F00\uFF0C\u5728\u5176\u4ED6\u8BED\u8A00\u5982 C++ \u91CC\uFF0C\u4E5F\u88AB\u79F0\u4E3A\u6A21\u677F\uFF09</p></div><h4 id="-85" tabindex="-1"><a class="header-anchor" href="#-85">#</a> \u8BEF\u7528\u7684\u6CDB\u578B</h4><p>\u6211\u89C1\u8FC7\u5F00\u53D1\u8005\u4F7F\u7528\u6CDB\u578B\u4EC5\u4EC5\u662F\u4E3A\u4E86\u5B83\u7684 hack\u3002\u5F53\u4F60\u4F7F\u7528\u5B83\u65F6\uFF0C\u4F60\u5E94\u8BE5\u95EE\u95EE\u81EA\u5DF1\uFF1A\u4F60\u60F3\u7528\u5B83\u6765\u63D0\u4F9B\u4EC0\u4E48\u6837\u7684\u7EA6\u675F\u3002\u5982\u679C\u4F60\u4E0D\u80FD\u5F88\u597D\u7684\u56DE\u7B54\u5B83\uFF0C\u4F60\u53EF\u80FD\u4F1A\u8BEF\u7528\u6CDB\u578B\uFF0C\u5982\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">foo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u8FD9\u91CC\uFF0C\u6CDB\u578B\u5B8C\u5168\u6CA1\u6709\u5FC5\u8981\u4F7F\u7528\uFF0C\u56E0\u4E3A\u5B83\u4EC5\u7528\u4E8E\u5355\u4E2A\u53C2\u6570\u7684\u4F4D\u7F6E\uFF0C\u4F7F\u7528\u5982\u4E0B\u65B9\u5F0F\u53EF\u80FD\u66F4\u597D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="-86" tabindex="-1"><a class="header-anchor" href="#-86">#</a> \u8BBE\u8BA1\u6A21\u5F0F\uFF1A\u65B9\u4FBF\u901A\u7528</h4><p>\u8003\u8651\u5982\u4E0B\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">parse</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6CDB\u578B <code>T</code> \u53EA\u5728\u4E00\u4E2A\u5730\u65B9\u88AB\u4F7F\u7528\u4E86\uFF0C\u5B83\u5E76\u6CA1\u6709\u5728\u6210\u5458\u4E4B\u95F4\u63D0\u4F9B\u7EA6\u675F <code>T</code>\u3002\u8FD9\u76F8\u5F53\u4E8E\u4E00\u4E2A\u5982\u4E0B\u7684\u7C7B\u578B\u65AD\u8A00\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> something <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;something&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> TypeOfSomething<span class="token punctuation">;</span>
</code></pre></div><p>\u4EC5\u4F7F\u7528\u4E00\u6B21\u7684\u6CDB\u578B\u5E76\u4E0D\u6BD4\u4E00\u4E2A\u7C7B\u578B\u65AD\u8A00\u6765\u7684\u5B89\u5168\u3002\u5B83\u4EEC\u90FD\u7ED9\u4F60\u4F7F\u7528 API \u63D0\u4F9B\u4E86\u4FBF\u5229\u3002</p><p>\u53E6\u4E00\u4E2A\u660E\u663E\u7684\u4F8B\u5B50\u662F\uFF0C\u4E00\u4E2A\u7528\u4E8E\u52A0\u8F7D json \u8FD4\u56DE\u503C\u51FD\u6570\uFF0C\u5B83\u8FD4\u56DE\u4F60\u4EFB\u4F55\u4F20\u5165\u7C7B\u578B\u7684 <code>Promise</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> getJSON <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>config<span class="token operator">:</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> headers<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fetchConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
    method<span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
    Accept<span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>headers <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>url<span class="token punctuation">,</span> fetchConfig<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">then</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>response <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h5 id="axios" tabindex="-1"><a class="header-anchor" href="#axios">#</a> \u914D\u5408 axios \u4F7F\u7528</h5><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4F1A\u628A\u540E\u7AEF\u8FD4\u56DE\u6570\u636E\u683C\u5F0F\u5355\u72EC\u653E\u5165\u4E00\u4E2A interface \u91CC\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u8BF7\u6C42\u63A5\u53E3\u6570\u636E</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ResponseData<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/**
   * \u72B6\u6001\u7801
   * @type { number }
   */</span>
  code<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>

  <span class="token comment">/**
   * \u6570\u636E
   * @type { T }
   */</span>
  result<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

  <span class="token comment">/**
   * \u6D88\u606F
   * @type { string }
   */</span>
  message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5F53\u6211\u4EEC\u628A API \u5355\u72EC\u62BD\u79BB\u6210\u5355\u4E2A\u6A21\u5757\u65F6\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u5728 axios.ts \u6587\u4EF6\u4E2D\u5BF9 axios \u8FDB\u884C\u4E86\u5904\u7406\uFF0C\u4F8B\u5982\u6DFB\u52A0\u901A\u7528\u914D\u7F6E\u3001\u62E6\u622A\u5668\u7B49</span>
<span class="token keyword">import</span> Ax <span class="token keyword">from</span> <span class="token string">&#39;./axios&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> ResponseData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./interface.ts&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getUser</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Ax<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>ResponseData<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;/somepath&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>err <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u63A5\u7740\u6211\u4EEC\u5199\u5165\u8FD4\u56DE\u7684\u6570\u636E\u7C7B\u578B <code>User</code>\uFF0C\u8FD9\u53EF\u4EE5\u8BA9 TypeScript \u987A\u5229\u63A8\u65AD\u51FA\u6211\u4EEC\u60F3\u8981\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// user \u88AB\u63A8\u65AD\u51FA\u4E3A</span>
  <span class="token comment">// {</span>
  <span class="token comment">//  code: number,</span>
  <span class="token comment">//  result: { name: string, age: number },</span>
  <span class="token comment">//  message: string</span>
  <span class="token comment">// }</span>
  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">getUser</span><span class="token generic class-name"><span class="token operator">&lt;</span>User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="-87" tabindex="-1"><a class="header-anchor" href="#-87">#</a> \u7C7B\u578B\u63A8\u65AD</h3><p>TypeScript \u80FD\u6839\u636E\u4E00\u4E9B\u7B80\u5355\u7684\u89C4\u5219\u63A8\u65AD\uFF08\u68C0\u67E5\uFF09\u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u5B9E\u8DF5\uFF0C\u5F88\u5FEB\u7684\u4E86\u89E3\u5B83\u4EEC\u3002</p><h4 id="-88" tabindex="-1"><a class="header-anchor" href="#-88">#</a> \u5B9A\u4E49\u53D8\u91CF</h4><p>\u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u7531\u5B9A\u4E49\u63A8\u65AD\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// foo \u662F &#39;number&#39;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// bar \u662F &#39;string&#39;</span>

foo <span class="token operator">=</span> bar<span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u80FD\u5C06 &#39;string&#39; \u8D4B\u503C\u7ED9 \`number\`</span>
</code></pre></div><p>\u8FD9\u662F\u4E00\u4E2A\u4ECE\u53F3\u5411\u5DE6\u6D41\u52A8\u7C7B\u578B\u7684\u793A\u4F8B\u3002</p><h4 id="-89" tabindex="-1"><a class="header-anchor" href="#-89">#</a> \u51FD\u6570\u8FD4\u56DE\u7C7B\u578B</h4><p>\u8FD4\u56DE\u7C7B\u578B\u80FD\u88AB <code>return</code> \u8BED\u53E5\u63A8\u65AD\uFF0C\u5982\u4E0B\u6240\u793A\uFF0C\u63A8\u65AD\u51FD\u6570\u8FD4\u56DE\u4E3A\u4E00\u4E2A\u6570\u5B57\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u662F\u4E00\u4E2A\u4ECE\u5E95\u90E8\u6D41\u51FA\u7C7B\u578B\u7684\u4F8B\u5B50\u3002</p><h4 id="-90" tabindex="-1"><a class="header-anchor" href="#-90">#</a> \u8D4B\u503C</h4><p>\u51FD\u6570\u53C2\u6570\u7C7B\u578B/\u8FD4\u56DE\u503C\u4E5F\u80FD\u901A\u8FC7\u8D4B\u503C\u6765\u63A8\u65AD\u3002\u5982\u4E0B\u6240\u793A\uFF0C<code>foo</code> \u7684\u7C7B\u578B\u662F <code>Adder</code>\uFF0C\u4ED6\u80FD\u8BA9 <code>foo</code> \u7684\u53C2\u6570 <code>a</code>\u3001<code>b</code> \u662F <code>number</code> \u7C7B\u578B\u3002</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Adder</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token function-variable function">Adder</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u4E2A\u4E8B\u5B9E\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6765\u8BC1\u660E\uFF0CTypeScript \u4F1A\u53D1\u51FA\u6B63\u5982\u4F60\u671F\u671B\u53D1\u51FA\u7684\u9519\u8BEF\u8B66\u544A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Adder</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token function-variable function">Adder</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  a <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error\uFF1A\u4E0D\u80FD\u628A &#39;string&#39; \u7C7B\u578B\u8D4B\u503C\u7ED9 &#39;number&#39; \u7C7B\u578B</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u662F\u4E00\u4E2A\u4ECE\u5DE6\u5411\u53F3\u6D41\u52A8\u7C7B\u578B\u7684\u793A\u4F8B\u3002</p><p>\u5982\u679C\u4F60\u521B\u5EFA\u4E00\u4E2A\u51FD\u6570\uFF0C\u5E76\u4E14\u51FD\u6570\u53C2\u6570\u4E3A\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u76F8\u540C\u7684\u8D4B\u503C\u89C4\u5219\u4E5F\u9002\u7528\u4E8E\u5B83\u3002\u4ECE <code>argument</code> \u81F3 <code>parameter</code> \u53EA\u662F\u53D8\u91CF\u8D4B\u503C\u7684\u53E6\u4E00\u79CD\u5F62\u5F0F\u3002</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Adder</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">iTakeAnAdder</span><span class="token punctuation">(</span>adder<span class="token operator">:</span> Adder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">adder</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">iTakeAnAdder</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  a <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u80FD\u628A &#39;string&#39; \u7C7B\u578B\u8D4B\u503C\u7ED9 &#39;number&#39; \u7C7B\u578B</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="-91" tabindex="-1"><a class="header-anchor" href="#-91">#</a> \u7ED3\u6784\u5316</h4><p>\u8FD9\u4E9B\u7B80\u5355\u7684\u89C4\u5219\u4E5F\u9002\u7528\u4E8E\u7ED3\u6784\u5316\u7684\u5B58\u5728\uFF08\u5BF9\u8C61\u5B57\u9762\u91CF\uFF09\uFF0C\u4F8B\u5982\u5728\u4E0B\u9762\u8FD9\u79CD\u60C5\u51B5\u4E0B foo \u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A { a: number, b: number }\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
  b<span class="token operator">:</span> <span class="token number">456</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

foo<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error\uFF1A\u4E0D\u80FD\u628A &#39;string&#39; \u7C7B\u578B\u8D4B\u503C\u7ED9 &#39;number&#39; \u7C7B\u578B</span>
</code></pre></div><p>\u6570\u7EC4\u4E5F\u4E00\u6837\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
bar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error\uFF1A\u4E0D\u80FD\u628A &#39;string&#39; \u7C7B\u578B\u8D4B\u503C\u7ED9 &#39;number&#39; \u7C7B\u578B</span>
</code></pre></div><h4 id="-92" tabindex="-1"><a class="header-anchor" href="#-92">#</a> \u89E3\u6784</h4><p>\u8FD9\u4E9B\u4E5F\u9002\u7528\u4E8E\u89E3\u6784\u4E2D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
  b<span class="token operator">:</span> <span class="token number">456</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> a <span class="token punctuation">}</span> <span class="token operator">=</span> foo<span class="token punctuation">;</span>

a <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error\uFF1A\u4E0D\u80FD\u628A &#39;string&#39; \u7C7B\u578B\u8D4B\u503C\u7ED9 &#39;number&#39; \u7C7B\u578B</span>
</code></pre></div><p>\u6570\u7EC4\u4E2D\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> bar<span class="token punctuation">;</span>

a <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error\uFF1A\u4E0D\u80FD\u628A &#39;string&#39; \u7C7B\u578B\u8D4B\u503C\u7ED9 &#39;number&#39; \u7C7B\u578B</span>
</code></pre></div><p>\u5982\u679C\u51FD\u6570\u53C2\u6570\u80FD\u591F\u88AB\u63A8\u65AD\u51FA\u6765\uFF0C\u90A3\u4E48\u89E3\u6784\u4EA6\u662F\u5982\u6B64\u3002\u5728\u5982\u4E0B\u4F8B\u5B50\u4E2D\uFF0C\u51FD\u6570\u53C2\u6570\u80FD\u591F\u88AB\u89E3\u6784\u4E3A <code>a/b</code> \u6210\u5458\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Adder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">number</span><span class="token operator">:</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> b<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">iTakeAnAdder</span><span class="token punctuation">(</span>adder<span class="token operator">:</span> Adder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">adder</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">iTakeAnAdder</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token punctuation">,</span> b <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// a, b \u7684\u7C7B\u578B\u80FD\u88AB\u63A8\u65AD\u51FA\u6765</span>
  a <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error\uFF1A\u4E0D\u80FD\u628A &#39;string&#39; \u7C7B\u578B\u8D4B\u503C\u7ED9 &#39;number&#39; \u7C7B\u578B</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="-93" tabindex="-1"><a class="header-anchor" href="#-93">#</a> \u7C7B\u578B\u4FDD\u62A4</h4><p>\u5728\u524D\u9762\u7AE0\u8282<a href="#%E7%B1%BB%E5%9E%8B%E4%BF%9D%E6%8A%A4">\u7C7B\u578B\u4FDD\u62A4</a>\u4E2D\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053\u5B83\u5982\u4F55\u5E2E\u52A9\u6211\u4EEC\u6539\u53D8\u548C\u7F29\u5C0F\u7C7B\u578B\u8303\u56F4\uFF08\u7279\u522B\u662F\u5728\u8054\u5408\u7C7B\u578B\u4E0B\uFF09\u3002\u7C7B\u578B\u4FDD\u62A4\u53EA\u662F\u4E00\u4E2A\u5757\u4E2D\u53D8\u91CF\u53E6\u4E00\u79CD\u63A8\u65AD\u5F62\u5F0F\u3002</p><h4 id="-94" tabindex="-1"><a class="header-anchor" href="#-94">#</a> \u8B66\u544A</h4><h5 id="-95" tabindex="-1"><a class="header-anchor" href="#-95">#</a> \u5C0F\u5FC3\u4F7F\u7528\u51FD\u6570</h5><p>\u5982\u679C\u7C7B\u578B\u4E0D\u80FD\u88AB\u8D4B\u503C\u63A8\u65AD\u51FA\u6765\uFF0C\u7C7B\u578B\u4E5F\u5C06\u4E0D\u4F1A\u6D41\u5165\u51FD\u6570\u53C2\u6570\u4E2D\u3002\u4F8B\u5982\u5982\u4E0B\u7684\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u7F16\u8BD1\u5668\u5E76\u4E0D\u77E5\u9053 <code>foo</code> \u7684\u7C7B\u578B\uFF0C\u6240\u5B83\u4E5F\u5C31\u4E0D\u80FD\u63A8\u65AD\u51FA <code>a</code> \u6216\u8005 <code>b</code> \u7684\u7C7B\u578B\u3002</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">/* do something */</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7136\u800C\uFF0C\u5982\u679C <code>foo</code> \u6DFB\u52A0\u4E86\u7C7B\u578B\u6CE8\u89E3\uFF0C\u51FD\u6570\u53C2\u6570\u4E5F\u5C31\u80FD\u88AB\u63A8\u65AD\uFF08<code>a</code>\uFF0C<code>b</code> \u90FD\u80FD\u88AB\u63A8\u65AD\u4E3A <code>number</code> \u7C7B\u578B\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">TwoNumberFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> foo<span class="token operator">:</span> <span class="token function-variable function">TwoNumberFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">/* do something */</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h5 id="-96" tabindex="-1"><a class="header-anchor" href="#-96">#</a> \u5C0F\u5FC3\u4F7F\u7528\u8FD4\u56DE\u503C</h5><p>\u5C3D\u7BA1 TypeScript \u4E00\u822C\u60C5\u51B5\u4E0B\u80FD\u63A8\u65AD\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF0C\u4F46\u662F\u5B83\u53EF\u80FD\u5E76\u4E0D\u662F\u4F60\u60F3\u8981\u7684\u3002\u4F8B\u5982\u5982\u4E0B\u7684 <code>foo</code> \u51FD\u6570\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u4E3A <code>any</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token function">addOne</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E00\u4E9B\u4F7F\u7528 JavaScript \u5E93\u7684\u7279\u6B8A\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">addOne</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u662F\u56E0\u4E3A\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u88AB\u4E00\u4E2A\u7F3A\u5C11\u7C7B\u578B\u5B9A\u4E49\u7684 <code>addOne</code> \u51FD\u6570\u6240\u5F71\u54CD\uFF08<code>a</code> \u662F <code>any</code>\uFF0C\u6240\u4EE5 <code>addOne</code> \u8FD4\u56DE\u503C\u4E3A <code>any</code>\uFF0C<code>foo</code> \u7684\u8FD4\u56DE\u503C\u662F\u4E5F\u662F <code>any</code>\uFF09\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u6211\u53D1\u73B0\u6700\u7B80\u5355\u7684\u65B9\u5F0F\u662F\u660E\u786E\u7684\u5199\u4E0A\u51FD\u6570\u8FD4\u56DE\u503C\uFF0C\u6BD5\u7ADF\u8FD9\u4E9B\u6CE8\u89E3\u662F\u4E00\u4E2A\u5B9A\u7406\uFF0C\u800C\u51FD\u6570\u662F\u6CE8\u89E3\u7684\u4E00\u4E2A\u8BC1\u636E\u3002</p></div><p>\u8FD9\u91CC\u8FD8\u6709\u4E00\u4E9B\u5176\u4ED6\u53EF\u4EE5\u60F3\u8C61\u7684\u60C5\u666F\uFF0C\u4F46\u662F\u6709\u4E00\u4E2A\u597D\u6D88\u606F\u662F\u6709\u7F16\u8BD1\u5668\u9009\u9879 <code>noImplicitAny</code> \u53EF\u4EE5\u6355\u83B7\u8FD9\u4E9B bug\u3002</p><h5 id="noimplicitany" tabindex="-1"><a class="header-anchor" href="#noimplicitany">#</a> <code>noImplicitAny</code></h5><p>\u9009\u9879 <code>noImplicitAny</code> \u7528\u6765\u544A\u8BC9\u7F16\u8BD1\u5668\uFF0C\u5F53\u65E0\u6CD5\u63A8\u65AD\u4E00\u4E2A\u53D8\u91CF\u65F6\u53D1\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF08\u6216\u8005\u53EA\u80FD\u63A8\u65AD\u4E3A\u4E00\u4E2A\u9690\u5F0F\u7684 <code>any</code> \u7C7B\u578B\uFF09\uFF0C\u4F60\u53EF\u4EE5\uFF1A</p><ul><li>\u901A\u8FC7\u663E\u5F0F\u6DFB\u52A0 <code>:any</code> \u7684\u7C7B\u578B\u6CE8\u89E3\uFF0C\u6765\u8BA9\u5B83\u6210\u4E3A\u4E00\u4E2A <code>any</code> \u7C7B\u578B\uFF1B</li><li>\u901A\u8FC7\u4E00\u4E9B\u66F4\u6B63\u786E\u7684\u7C7B\u578B\u6CE8\u89E3\u6765\u5E2E\u52A9 TypeScript \u63A8\u65AD\u7C7B\u578B\u3002</li></ul><h3 id="-97" tabindex="-1"><a class="header-anchor" href="#-97">#</a> \u7C7B\u578B\u517C\u5BB9\u6027</h3><p>\u7C7B\u578B\u517C\u5BB9\u6027\u7528\u4E8E\u786E\u5B9A\u4E00\u4E2A\u7C7B\u578B\u662F\u5426\u80FD\u8D4B\u503C\u7ED9\u5176\u4ED6\u7C7B\u578B\u3002</p><p>\u5982 <code>string</code> \u7C7B\u578B\u4E0E <code>number</code> \u7C7B\u578B\u4E0D\u517C\u5BB9\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> str<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> num<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>

str <span class="token operator">=</span> num<span class="token punctuation">;</span> <span class="token comment">// Error: &#39;number&#39; \u4E0D\u80FD\u8D4B\u503C\u7ED9 &#39;string&#39;</span>
num <span class="token operator">=</span> str<span class="token punctuation">;</span> <span class="token comment">// Error: &#39;string&#39; \u4E0D\u80FD\u8D4B\u503C\u7ED9 &#39;number&#39;</span>
</code></pre></div><h4 id="-98" tabindex="-1"><a class="header-anchor" href="#-98">#</a> \u5B89\u5168\u6027</h4><p>TypeScript \u7C7B\u578B\u7CFB\u7EDF\u8BBE\u8BA1\u6BD4\u8F83\u65B9\u4FBF\uFF0C\u5B83\u5141\u8BB8\u4F60\u6709\u4E00\u4E9B\u4E0D\u6B63\u786E\u7684\u884C\u4E3A\u3002\u4F8B\u5982\uFF1A\u4EFB\u4F55\u7C7B\u578B\u90FD\u80FD\u88AB\u8D4B\u503C\u7ED9 <code>any</code>\uFF0C\u8FD9\u610F\u5473\u7740\u544A\u8BC9\u7F16\u8BD1\u5668\u4F60\u53EF\u4EE5\u505A\u4EFB\u4F55\u4F60\u60F3\u505A\u7684\u4E8B\u60C5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
foo <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>

foo<span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="-99" tabindex="-1"><a class="header-anchor" href="#-99">#</a> \u7ED3\u6784\u5316</h4><p>TypeScript \u5BF9\u8C61\u662F\u4E00\u79CD\u7ED3\u6784\u7C7B\u578B\uFF0C\u8FD9\u610F\u5473\u7740\u53EA\u8981\u7ED3\u6784\u5339\u914D\uFF0C\u540D\u79F0\u4E5F\u5C31\u65E0\u5173\u7D27\u8981\u4E86\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Point2D</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token keyword">public</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> p<span class="token operator">:</span> Point<span class="token punctuation">;</span>

<span class="token comment">// ok, \u56E0\u4E3A\u662F\u7ED3\u6784\u5316\u7684\u7C7B\u578B</span>
p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point2D</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u5141\u8BB8\u4F60\u52A8\u6001\u521B\u5EFA\u5BF9\u8C61\uFF08\u5C31\u597D\u50CF\u4F60\u5728 <code>vanilla JS</code> \u4E2D\u4F7F\u7528\u4E00\u6837\uFF09\uFF0C\u5E76\u4E14\u5B83\u5982\u679C\u80FD\u88AB\u63A8\u65AD\uFF0C\u8BE5\u5BF9\u8C61\u4ECD\u7136\u5177\u6709\u5B89\u5168\u6027\u3002</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Point2D</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Point3D</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  z<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> point2D<span class="token operator">:</span> Point2D <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> point3D<span class="token operator">:</span> Point3D <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">iTakePoint2D</span><span class="token punctuation">(</span>point<span class="token operator">:</span> Point2D<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/* do something */</span>
<span class="token punctuation">}</span>

<span class="token function">iTakePoint2D</span><span class="token punctuation">(</span>point2D<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok, \u5B8C\u5168\u5339\u914D</span>
<span class="token function">iTakePoint2D</span><span class="token punctuation">(</span>point3D<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u989D\u5916\u7684\u4FE1\u606F\uFF0C\u6CA1\u5173\u7CFB</span>
<span class="token function">iTakePoint2D</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u6CA1\u6709 &#39;y&#39;</span>
</code></pre></div><h4 id="-100" tabindex="-1"><a class="header-anchor" href="#-100">#</a> \u53D8\u4F53</h4><p>\u5BF9\u7C7B\u578B\u517C\u5BB9\u6027\u6765\u8BF4\uFF0C\u53D8\u4F53\u662F\u4E00\u4E2A\u5229\u4E8E\u7406\u89E3\u548C\u91CD\u8981\u7684\u6982\u5FF5\u3002</p><p>\u5BF9\u4E00\u4E2A\u7B80\u5355\u7C7B\u578B <code>Base</code> \u548C Child \u6765\u8BF4\uFF0C\u5982\u679C <code>Child</code> \u662F <code>Base</code> \u7684\u5B50\u7C7B\uFF0C<code>Child</code> \u7684\u5B9E\u4F8B\u80FD\u88AB\u8D4B\u503C\u7ED9 <code>Base</code> \u7C7B\u578B\u7684\u53D8\u91CF\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u8FD9\u662F\u591A\u6001\u6027\u3002</p></div><p>\u5728\u7531 <code>Base</code> \u548C <code>Child</code> \u7EC4\u5408\u7684\u590D\u6742\u7C7B\u578B\u7684\u7C7B\u578B\u517C\u5BB9\u6027\u4E2D\uFF0C\u5B83\u53D6\u51B3\u4E8E\u76F8\u540C\u573A\u666F\u4E0B\u7684 <code>Base</code> \u4E0E Child \u7684\u53D8\u4F53\uFF1A</p><ul><li>\u534F\u53D8\uFF08Covariant\uFF09\uFF1A\u53EA\u5728\u540C\u4E00\u4E2A\u65B9\u5411\uFF1B</li><li>\u9006\u53D8\uFF08Contravariant\uFF09\uFF1A\u53EA\u5728\u76F8\u53CD\u7684\u65B9\u5411\uFF1B</li><li>\u53CC\u5411\u534F\u53D8\uFF08Bivariant\uFF09\uFF1A\u5305\u62EC\u540C\u4E00\u4E2A\u65B9\u5411\u548C\u4E0D\u540C\u65B9\u5411\uFF1B</li><li>\u4E0D\u53D8\uFF08Invariant\uFF09\uFF1A\u5982\u679C\u7C7B\u578B\u4E0D\u5B8C\u5168\u76F8\u540C\uFF0C\u5219\u5B83\u4EEC\u662F\u4E0D\u517C\u5BB9\u7684\u3002</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u5BF9\u4E8E\u5B58\u5728\u5B8C\u5168\u53EF\u53D8\u6570\u636E\u7684\u5065\u5168\u7684\u7C7B\u578B\u7CFB\u7EDF\uFF08\u5982 JavaScript\uFF09\uFF0C<code>Invariant</code> \u662F\u4E00\u4E2A\u552F\u4E00\u7684\u6709\u6548\u53EF\u9009\u5C5E\u6027\uFF0C\u4F46\u662F\u5982\u6211\u4EEC\u6240\u8BA8\u8BBA\u7684\uFF0C<em>\u4FBF\u5229\u6027</em>\u8FEB\u4F7F\u6211\u4EEC\u4F5C\u51FA\u4E00\u4E9B\u4E0D\u662F\u5F88\u5B89\u5168\u7684\u9009\u62E9\u3002</p></div><p>\u5173\u4E8E\u534F\u53D8\u548C\u9006\u53D8\u7684\u66F4\u591A\u5185\u5BB9\uFF0C\u8BF7\u53C2\u8003\uFF1A<a href="#%E5%8D%8F%E5%8F%98%E4%B8%8E%E9%80%86%E5%8F%98">\u534F\u53D8\u4E0E\u9006\u53D8</a></p><h4 id="-101" tabindex="-1"><a class="header-anchor" href="#-101">#</a> \u51FD\u6570</h4><p>\u5F53\u4F60\u5728\u6BD4\u8F83\u4E24\u4E2A\u51FD\u6570\u65F6\uFF0C\u8FD9\u6709\u4E00\u4E9B\u4F60\u9700\u8981\u8003\u8651\u5230\u7684\u4E8B\u60C5\u3002</p><h5 id="-102" tabindex="-1"><a class="header-anchor" href="#-102">#</a> \u8FD4\u56DE\u7C7B\u578B</h5><p>\u534F\u53D8\uFF08Covariant\uFF09\uFF1A\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u5305\u542B\u8DB3\u591F\u7684\u6570\u636E\u3002</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Point2D</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Point3D</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  z<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> iMakePoint2D <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Point2D <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iMakePoint3D <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Point3D <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

iMakePoint2D <span class="token operator">=</span> iMakePoint3D<span class="token punctuation">;</span>
iMakePoint3D <span class="token operator">=</span> iMakePoint2D<span class="token punctuation">;</span> <span class="token comment">// ERROR: Point2D \u4E0D\u80FD\u8D4B\u503C\u7ED9 Point3D</span>
</code></pre></div><h5 id="-103" tabindex="-1"><a class="header-anchor" href="#-103">#</a> \u53C2\u6570\u6570\u91CF</h5><p>\u66F4\u5C11\u7684\u53C2\u6570\u6570\u91CF\u662F\u597D\u7684\uFF08\u5982\uFF1A\u51FD\u6570\u80FD\u591F\u9009\u62E9\u6027\u7684\u5FFD\u7565\u4E00\u4E9B\u591A\u4F59\u7684\u53C2\u6570\uFF09\uFF0C\u4F46\u662F\u4F60\u5F97\u4FDD\u8BC1\u6709\u8DB3\u591F\u7684\u53C2\u6570\u88AB\u4F7F\u7528\u4E86\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">iTakeSomethingAndPassItAnErr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function-variable function">x</span><span class="token operator">:</span> <span class="token punctuation">(</span>err<span class="token operator">:</span> Error<span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">/* \u505A\u4E00\u4E9B\u5176\u4ED6\u7684 */</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">iTakeSomethingAndPassItAnErr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token function">iTakeSomethingAndPassItAnErr</span><span class="token punctuation">(</span>err <span class="token operator">=&gt;</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token function">iTakeSomethingAndPassItAnErr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>

<span class="token comment">// Error: \u53C2\u6570\u7C7B\u578B \`(err: any, data: any, more: any) =&gt; null\` \u4E0D\u80FD\u8D4B\u503C\u7ED9\u53C2\u6570\u7C7B\u578B \`(err: Error, data: any) =&gt; void\`</span>
<span class="token function">iTakeSomethingAndPassItAnErr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> data<span class="token punctuation">,</span> more<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h5 id="rest" tabindex="-1"><a class="header-anchor" href="#rest">#</a> \u53EF\u9009\u7684\u548C rest \u53C2\u6570</h5><p>\u53EF\u9009\u7684\uFF08\u9884\u5148\u786E\u5B9A\u7684\uFF09\u548C Rest \u53C2\u6570\uFF08\u4EFB\u4F55\u6570\u91CF\u7684\u53C2\u6570\uFF09\u90FD\u662F\u517C\u5BB9\u7684\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">bas</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

foo <span class="token operator">=</span> bar <span class="token operator">=</span> bas<span class="token punctuation">;</span>
bas <span class="token operator">=</span> bar <span class="token operator">=</span> foo<span class="token punctuation">;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u53EF\u9009\u7684\uFF08\u4E0A\u4F8B\u5B50\u4E2D\u7684 <code>bar</code>\uFF09\u4E0E\u4E0D\u53EF\u9009\u7684\uFF08\u4E0A\u4F8B\u5B50\u4E2D\u7684 <code>foo</code>\uFF09\u4EC5\u5728\u9009\u9879\u4E3A <code>strictNullChecks</code> \u4E3A <code>false</code> \u65F6\u517C\u5BB9\u3002</p></div><h5 id="-104" tabindex="-1"><a class="header-anchor" href="#-104">#</a> \u51FD\u6570\u53C2\u6570\u7C7B\u578B</h5><p>\u53CC\u5411\u534F\u53D8\uFF08Bivariant\uFF09\uFF1A\u65E8\u5728\u652F\u6301\u5E38\u89C1\u7684\u4E8B\u4EF6\u5904\u7406\u65B9\u6848\u3002</p><div class="language-ts"><pre><code><span class="token comment">// \u4E8B\u4EF6\u7B49\u7EA7</span>
<span class="token keyword">interface</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span>
  timestamp<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">MouseEvent</span> <span class="token keyword">extends</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">KeyEvent</span> <span class="token keyword">extends</span> <span class="token class-name">Event</span> <span class="token punctuation">{</span>
  keyCode<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B80\u5355\u7684\u4E8B\u4EF6\u76D1\u542C</span>
<span class="token keyword">enum</span> EventType <span class="token punctuation">{</span>
  Mouse<span class="token punctuation">,</span>
  Keyboard
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addEventListener</span><span class="token punctuation">(</span>eventType<span class="token operator">:</span> EventType<span class="token punctuation">,</span> <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span>n<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E0D\u5B89\u5168\uFF0C\u4F46\u662F\u6709\u7528\uFF0C\u5E38\u89C1\u3002\u51FD\u6570\u53C2\u6570\u7684\u6BD4\u8F83\u662F\u53CC\u5411\u534F\u53D8\u3002</span>
<span class="token function">addEventListener</span><span class="token punctuation">(</span>EventType<span class="token punctuation">.</span>Mouse<span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5728\u5B89\u5168\u60C5\u666F\u4E0B\u7684\u4E00\u79CD\u4E0D\u597D\u65B9\u6848</span>
<span class="token function">addEventListener</span><span class="token punctuation">(</span>EventType<span class="token punctuation">.</span>Mouse<span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MouseEvent<span class="token operator">&gt;</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>MouseEvent<span class="token operator">&gt;</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addEventListener</span><span class="token punctuation">(</span>EventType<span class="token punctuation">.</span>Mouse<span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>e<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token operator">:</span> MouseEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4ECD\u7136\u4E0D\u5141\u8BB8\u660E\u786E\u7684\u9519\u8BEF\uFF0C\u5BF9\u5B8C\u5168\u4E0D\u517C\u5BB9\u7684\u7C7B\u578B\u4F1A\u5F3A\u5236\u68C0\u67E5</span>
<span class="token function">addEventListener</span><span class="token punctuation">(</span>EventType<span class="token punctuation">.</span>Mouse<span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u540C\u6837\u7684\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u628A <code>Array&lt;Child&gt;</code> \u8D4B\u503C\u7ED9 <code>Array&lt;Base&gt;</code> \uFF08\u534F\u53D8\uFF09\uFF0C\u56E0\u4E3A\u51FD\u6570\u662F\u517C\u5BB9\u7684\u3002\u6570\u7EC4\u7684\u534F\u53D8\u9700\u8981\u6240\u6709\u7684\u51FD\u6570 <code>Array&lt;Child&gt;</code> \u90FD\u80FD\u8D4B\u503C\u7ED9 <code>Array&lt;Base&gt;</code>\uFF0C\u4F8B\u5982 <code>push(t: Child)</code> \u80FD\u88AB\u8D4B\u503C\u7ED9 <code>push(t: Base)</code>\uFF0C\u8FD9\u90FD\u53EF\u4EE5\u901A\u8FC7\u51FD\u6570\u53C2\u6570\u53CC\u5411\u534F\u53D8\u5B9E\u73B0\u3002</p><p>\u4E0B\u9762\u7684\u4EE3\u7801\u5BF9\u4E8E\u5176\u4ED6\u8BED\u8A00\u7684\u5F00\u53D1\u8005\u6765\u8BF4\uFF0C\u53EF\u80FD\u4F1A\u611F\u5230\u5F88\u56F0\u60D1\uFF0C\u56E0\u4E3A\u4ED6\u4EEC\u8BA4\u4E3A\u662F\u6709\u9519\u8BEF\u7684\uFF0C\u53EF\u662F Typescript \u5E76\u4E0D\u4F1A\u62A5\u9519\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Point2D</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Point3D</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  z<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">iTakePoint2D</span> <span class="token operator">=</span> <span class="token punctuation">(</span>point<span class="token operator">:</span> Point2D<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">iTakePoint3D</span> <span class="token operator">=</span> <span class="token punctuation">(</span>point<span class="token operator">:</span> Point3D<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

iTakePoint3D <span class="token operator">=</span> iTakePoint2D<span class="token punctuation">;</span> <span class="token comment">// ok, \u8FD9\u662F\u5408\u7406\u7684</span>
iTakePoint2D <span class="token operator">=</span> iTakePoint3D<span class="token punctuation">;</span> <span class="token comment">// ok\uFF0C\u4E3A\u4EC0\u4E48\uFF1F</span>
</code></pre></div><h4 id="-105" tabindex="-1"><a class="header-anchor" href="#-105">#</a> \u679A\u4E3E</h4><ul><li>\u679A\u4E3E\u4E0E\u6570\u5B57\u7C7B\u578B\u76F8\u4E92\u517C\u5BB9</li></ul><div class="language-ts"><pre><code><span class="token keyword">enum</span> Status <span class="token punctuation">{</span>
  Ready<span class="token punctuation">,</span>
  Waiting
<span class="token punctuation">}</span>

<span class="token keyword">let</span> status <span class="token operator">=</span> Status<span class="token punctuation">.</span>Ready<span class="token punctuation">;</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

status <span class="token operator">=</span> num<span class="token punctuation">;</span>
num <span class="token operator">=</span> status<span class="token punctuation">;</span>
</code></pre></div><ul><li>\u6765\u81EA\u4E8E\u4E0D\u540C\u679A\u4E3E\u7684\u679A\u4E3E\u53D8\u91CF\uFF0C\u88AB\u8BA4\u4E3A\u662F\u4E0D\u517C\u5BB9\u7684\uFF1A</li></ul><div class="language-ts"><pre><code><span class="token keyword">enum</span> Status <span class="token punctuation">{</span>
  Ready<span class="token punctuation">,</span>
  Waiting
<span class="token punctuation">}</span>
<span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
  Red<span class="token punctuation">,</span>
  Blue<span class="token punctuation">,</span>
  Green
<span class="token punctuation">}</span>

<span class="token keyword">let</span> status <span class="token operator">=</span> Status<span class="token punctuation">.</span>Ready<span class="token punctuation">;</span>
<span class="token keyword">let</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Red<span class="token punctuation">;</span>

status <span class="token operator">=</span> color<span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><h4 id="-106" tabindex="-1"><a class="header-anchor" href="#-106">#</a> \u7C7B</h4><ul><li>\u4EC5\u4EC5\u53EA\u6709\u5B9E\u4F8B\u6210\u5458\u548C\u65B9\u6CD5\u4F1A\u76F8\u6BD4\u8F83\uFF0C\u6784\u9020\u51FD\u6570\u548C\u9759\u6001\u6210\u5458\u4E0D\u4F1A\u88AB\u68C0\u67E5\u3002</li></ul><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  feet<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> numFeet<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Size</span> <span class="token punctuation">{</span>
  feet<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>meters<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> a<span class="token operator">:</span> Animal<span class="token punctuation">;</span>
<span class="token keyword">let</span> s<span class="token operator">:</span> Size<span class="token punctuation">;</span>

a <span class="token operator">=</span> s<span class="token punctuation">;</span> <span class="token comment">// OK</span>
s <span class="token operator">=</span> a<span class="token punctuation">;</span> <span class="token comment">// OK</span>
</code></pre></div><ul><li>\u79C1\u6709\u7684\u548C\u53D7\u4FDD\u62A4\u7684\u6210\u5458\u5FC5\u987B\u6765\u81EA\u4E8E\u76F8\u540C\u7684\u7C7B\u3002</li></ul><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> feet<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">let</span> animal<span class="token operator">:</span> Animal<span class="token punctuation">;</span>
<span class="token keyword">let</span> cat<span class="token operator">:</span> Cat<span class="token punctuation">;</span>

animal <span class="token operator">=</span> cat<span class="token punctuation">;</span> <span class="token comment">// ok</span>
cat <span class="token operator">=</span> animal<span class="token punctuation">;</span> <span class="token comment">// ok</span>

<span class="token keyword">class</span> <span class="token class-name">Size</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> feet<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> size<span class="token operator">:</span> Size<span class="token punctuation">;</span>

animal <span class="token operator">=</span> size<span class="token punctuation">;</span> <span class="token comment">// ERROR</span>
size <span class="token operator">=</span> animal<span class="token punctuation">;</span> <span class="token comment">// ERROR</span>
</code></pre></div><h4 id="-107" tabindex="-1"><a class="header-anchor" href="#-107">#</a> \u6CDB\u578B</h4><p>TypeScript \u7C7B\u578B\u7CFB\u7EDF\u57FA\u4E8E\u53D8\u91CF\u7684\u7ED3\u6784\uFF0C\u4EC5\u5F53\u7C7B\u578B\u53C2\u6570\u5728\u88AB\u4E00\u4E2A\u6210\u5458\u4F7F\u7528\u65F6\uFF0C\u624D\u4F1A\u5F71\u54CD\u517C\u5BB9\u6027\u3002\u5982\u4E0B\u4F8B\u5B50\u4E2D\uFF0C<code>T</code> \u5BF9\u517C\u5BB9\u6027\u6CA1\u6709\u5F71\u54CD\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Empty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">let</span> x<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> y<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

x <span class="token operator">=</span> y<span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u5F53 <code>T</code> \u88AB\u6210\u5458\u4F7F\u7528\u65F6\uFF0C\u5B83\u5C06\u5728\u5B9E\u4F8B\u5316\u6CDB\u578B\u540E\u5F71\u54CD\u517C\u5BB9\u6027\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Empty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  data<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> x<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> y<span class="token operator">:</span> Empty<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

x <span class="token operator">=</span> y<span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><p>\u5982\u679C\u5C1A\u672A\u5B9E\u4F8B\u5316\u6CDB\u578B\u53C2\u6570\uFF0C\u5219\u5728\u68C0\u67E5\u517C\u5BB9\u6027\u4E4B\u524D\u5C06\u5176\u66FF\u6362\u4E3A <code>any</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">identity</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token function-variable function">reverse</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>y<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">U</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

identity <span class="token operator">=</span> reverse<span class="token punctuation">;</span> <span class="token comment">// ok, \u56E0\u4E3A \`(x: any) =&gt; any\` \u5339\u914D \`(y: any) =&gt; any\`</span>
</code></pre></div><p>\u7C7B\u4E2D\u7684\u6CDB\u578B\u517C\u5BB9\u6027\u4E0E\u524D\u6587\u6240\u63D0\u53CA\u4E00\u81F4\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">List<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token function">add</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">meow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ..</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">List<span class="token operator">&lt;</span>Animal<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>

<span class="token keyword">const</span> cats <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">List<span class="token operator">&lt;</span>Cat<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cats<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
cats<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre></div><h4 id="invariance" tabindex="-1"><a class="header-anchor" href="#invariance">#</a> \u811A\u6CE8\uFF1A\u4E0D\u53D8\u6027 (Invariance)</h4><p>\u6211\u4EEC\u8BF4\u8FC7\uFF0C\u4E0D\u53D8\u6027\u53EF\u80FD\u662F\u552F\u4E00\u4E00\u4E2A\u542C\u8D77\u6765\u5408\u7406\u7684\u9009\u9879\uFF0C\u8FD9\u91CC\u6709\u4E00\u4E2A\u5173\u4E8E <code>contra</code> \u548C <code>co</code> \u7684\u53D8\u4F53\uFF0C\u88AB\u8BA4\u4E3A\u5BF9\u6570\u7EC4\u662F\u4E0D\u5B89\u5168\u7684\u3002</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">meow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> animal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;animal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u591A\u6001</span>
<span class="token comment">// Animal &lt;= Cat</span>

animal <span class="token operator">=</span> cat<span class="token punctuation">;</span> <span class="token comment">// ok</span>
cat <span class="token operator">=</span> animal<span class="token punctuation">;</span> <span class="token comment">// ERROR: cat \u7EE7\u627F\u4E8E animal</span>

<span class="token comment">// \u6F14\u793A\u6BCF\u4E2A\u6570\u7EC4\u5F62\u5F0F</span>
<span class="token keyword">let</span> animalArr<span class="token operator">:</span> Animal<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>animal<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> catArr<span class="token operator">:</span> Cat<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>cat<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u660E\u663E\u7684\u574F\u5904\uFF0C\u9006\u53D8</span>
<span class="token comment">// Animal &lt;= Cat</span>
<span class="token comment">// Animal[] &gt;= Cat[]</span>
catArr <span class="token operator">=</span> animalArr<span class="token punctuation">;</span> <span class="token comment">// ok, \u5982\u6709\u6709\u9006\u53D8</span>
catArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">meow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5141\u8BB8\uFF0C\u4F46\u662F\u4F1A\u5728\u8FD0\u884C\u65F6\u62A5\u9519</span>

<span class="token comment">// \u53E6\u5916\u4E00\u4E2A\u574F\u5904\uFF0C\u534F\u53D8</span>
<span class="token comment">// Animal &lt;= Cat</span>
<span class="token comment">// Animal[] &lt;= Cat[]</span>
animalArr <span class="token operator">=</span> catArr<span class="token punctuation">;</span> <span class="token comment">// ok\uFF0C\u534F\u53D8</span>

animalArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&#39;another animal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4EC5\u4EC5\u662F push \u4E00\u4E2A animal \u81F3 carArr \u91CC</span>
catArr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> c<span class="token punctuation">.</span><span class="token function">meow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5141\u8BB8\uFF0C\u4F46\u662F\u4F1A\u5728\u8FD0\u884C\u65F6\u62A5\u9519\u3002</span>
</code></pre></div><h3 id="never" tabindex="-1"><a class="header-anchor" href="#never">#</a> Never</h3><p>\u7A0B\u5E8F\u8BED\u8A00\u7684\u8BBE\u8BA1\u786E\u5B9E\u5E94\u8BE5\u5B58\u5728\u4E00\u4E2A\u5E95\u90E8\u7C7B\u578B\u7684\u6982\u5FF5\uFF0C\u5F53\u4F60\u5728\u5206\u6790\u4EE3\u7801\u6D41\u7684\u65F6\u5019\uFF0C\u8FD9\u4F1A\u662F\u4E00\u4E2A\u7406\u6240\u5F53\u7136\u5B58\u5728\u7684\u7C7B\u578B\u3002TypeScript \u5C31\u662F\u8FD9\u6837\u4E00\u79CD\u5206\u6790\u4EE3\u7801\u6D41\u7684\u8BED\u8A00\uFF08\u{1F60E}\uFF09\uFF0C\u56E0\u6B64\u5B83\u9700\u8981\u4E00\u4E2A\u53EF\u9760\u7684\uFF0C\u4EE3\u8868\u6C38\u8FDC\u4E0D\u4F1A\u53D1\u751F\u7684\u7C7B\u578B\u3002</p><p><code>never</code> \u7C7B\u578B\u662F TypeScript \u4E2D\u7684\u5E95\u5C42\u7C7B\u578B\u3002\u5B83\u81EA\u7136\u88AB\u5206\u914D\u7684\u4E00\u4E9B\u4F8B\u5B50\uFF1A</p><ul><li>\u4E00\u4E2A\u4ECE\u6765\u4E0D\u4F1A\u6709\u8FD4\u56DE\u503C\u7684\u51FD\u6570\uFF08\u5982\uFF1A\u5982\u679C\u51FD\u6570\u5185\u542B\u6709 <code>while(true) {}</code>\uFF09\uFF1B</li><li>\u4E00\u4E2A\u603B\u662F\u4F1A\u629B\u51FA\u9519\u8BEF\u7684\u51FD\u6570\uFF08\u5982\uFF1A<code>function foo() { throw new Error(&#39;Not Implemented&#39;) }</code>\uFF0C<code>foo</code> \u7684\u8FD4\u56DE\u7C7B\u578B\u662F <code>never</code>\uFF09\uFF1B</li></ul><p>\u4F60\u4E5F\u53EF\u4EE5\u5C06\u5B83\u7528\u505A\u7C7B\u578B\u6CE8\u89E3\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u4F46\u662F\uFF0C<code>never</code> \u7C7B\u578B\u4EC5\u80FD\u88AB\u8D4B\u503C\u7ED9\u53E6\u5916\u4E00\u4E2A <code>never</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token builtin">never</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// Error: number \u7C7B\u578B\u4E0D\u80FD\u8D4B\u503C\u7ED9 never \u7C7B\u578B</span>

<span class="token comment">// ok, \u4F5C\u4E3A\u51FD\u6570\u8FD4\u56DE\u7C7B\u578B\u7684 never</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> <span class="token builtin">never</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Throw my hands in the air like I just dont care&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5F88\u68D2\uFF0C\u73B0\u5728\u8BA9\u6211\u4EEC\u770B\u770B\u5B83\u7684\u5173\u952E\u7528\u4F8B\u3002</p><h4 id="-108" tabindex="-1"><a class="header-anchor" href="#-108">#</a> \u7528\u4F8B\uFF1A\u8BE6\u7EC6\u7684\u68C0\u67E5</h4><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u4E0D\u662F\u4E00\u4E2A never \u7C7B\u578B\uFF0C\u8FD9\u4F1A\u62A5\u9519\uFF1A</span>
  <span class="token comment">// - \u4E0D\u662F\u6240\u6709\u6761\u4EF6\u90FD\u6709\u8FD4\u56DE\u503C \uFF08\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF09</span>
  <span class="token comment">// - \u6216\u8005\u68C0\u67E5\u5230\u65E0\u6CD5\u8BBF\u95EE\u7684\u4EE3\u7801</span>
  <span class="token comment">// \u4F46\u662F\u7531\u4E8E TypeScript \u7406\u89E3 \`fail\` \u51FD\u6570\u8FD4\u56DE\u4E3A \`never\` \u7C7B\u578B</span>
  <span class="token comment">// \u5B83\u53EF\u4EE5\u8BA9\u4F60\u8C03\u7528\u5B83\uFF0C\u56E0\u4E3A\u4F60\u53EF\u80FD\u4F1A\u5728\u8FD0\u884C\u65F6\u7528\u5B83\u6765\u505A\u5B89\u5168\u6216\u8005\u8BE6\u7EC6\u7684\u68C0\u67E5\u3002</span>
  <span class="token keyword">return</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&#39;Unexhaustive&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">fail</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">never</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>never</code> \u4EC5\u80FD\u88AB\u8D4B\u503C\u7ED9\u53E6\u5916\u4E00\u4E2A <code>never</code> \u7C7B\u578B\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u7528\u5B83\u6765\u8FDB\u884C\u7F16\u8BD1\u65F6\u7684\u5168\u9762\u7684\u68C0\u67E5\uFF0C\u6211\u4EEC\u5C06\u4F1A\u5728<a href="#%E8%BE%A8%E6%9E%90%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B">\u8FA8\u6790\u8054\u5408\u7C7B\u578B</a>\u4E2D\u8BB2\u89E3\u5B83\u3002</p><h4 id="void-1" tabindex="-1"><a class="header-anchor" href="#void-1">#</a> \u4E0E <code>void</code> \u7684\u5DEE\u5F02</h4><p>\u4E00\u65E6\u6709\u4EBA\u544A\u8BC9\u4F60\uFF0C<code>never</code> \u8868\u793A\u4E00\u4E2A\u4ECE\u6765\u4E0D\u4F1A\u4F18\u96C5\u7684\u8FD4\u56DE\u7684\u51FD\u6570\u65F6\uFF0C\u4F60\u53EF\u80FD\u9A6C\u4E0A\u5C31\u4F1A\u60F3\u5230\u4E0E\u6B64\u7C7B\u4F3C\u7684 <code>void</code>\uFF0C\u7136\u800C\u5B9E\u9645\u4E0A\uFF0C<code>void</code> \u8868\u793A\u6CA1\u6709\u4EFB\u4F55\u7C7B\u578B\uFF0C<code>never</code> \u8868\u793A\u6C38\u8FDC\u4E0D\u5B58\u5728\u7684\u503C\u7684\u7C7B\u578B\u3002</p><p>\u5F53\u4E00\u4E2A\u51FD\u6570\u8FD4\u56DE\u7A7A\u503C\u65F6\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u4E3A <code>void</code> \u7C7B\u578B\uFF0C\u4F46\u662F\uFF0C\u5F53\u4E00\u4E2A\u51FD\u6570\u6C38\u4E0D\u8FD4\u56DE\u65F6\uFF08\u6216\u8005\u603B\u662F\u629B\u51FA\u9519\u8BEF\uFF09\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u4E3A <code>never</code> \u7C7B\u578B\u3002<code>void</code> \u7C7B\u578B\u53EF\u4EE5\u88AB\u8D4B\u503C\uFF08\u5728 <code>strictNullChecking</code> \u4E3A <code>false</code> \u65F6\uFF09\uFF0C\u4F46\u662F\u9664\u4E86 <code>never</code> \u672C\u8EAB\u4EE5\u5916\uFF0C\u5176\u4ED6\u4EFB\u4F55\u7C7B\u578B\u4E0D\u80FD\u8D4B\u503C\u7ED9 <code>never</code>\u3002</p><h3 id="-109" tabindex="-1"><a class="header-anchor" href="#-109">#</a> \u8FA8\u6790\u8054\u5408\u7C7B\u578B</h3><p>\u5F53\u7C7B\u4E2D\u542B\u6709<a href="#%E5%AD%97%E9%9D%A2%E9%87%8F%E7%B1%BB%E5%9E%8B">\u5B57\u9762\u91CF\u6210\u5458</a>\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u8BE5\u7C7B\u7684\u5C5E\u6027\u6765\u8FA8\u6790\u8054\u5408\u7C7B\u578B\u3002</p><p>\u4F5C\u4E3A\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u8003\u8651 <code>Square</code> \u548C <code>Rectangle</code> \u7684\u8054\u5408\u7C7B\u578B <code>Shape</code>\u3002<code>Square</code> \u548C <code>Rectangle</code>\u6709\u5171\u540C\u6210\u5458 <code>kind</code>\uFF0C\u56E0\u6B64 <code>kind</code> \u5B58\u5728\u4E8E <code>Shape</code> \u4E2D\u3002</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Square</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;square&#39;</span><span class="token punctuation">;</span>
  size<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Rectangle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;rectangle&#39;</span><span class="token punctuation">;</span>
  width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Shape</span> <span class="token operator">=</span> Square <span class="token operator">|</span> Rectangle<span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u4F60\u4F7F\u7528\u7C7B\u578B\u4FDD\u62A4\u98CE\u683C\u7684\u68C0\u67E5\uFF08<code>==</code>\u3001<code>===</code>\u3001<code>!=</code>\u3001<code>!==</code>\uFF09\u6216\u8005\u4F7F\u7528\u5177\u6709\u5224\u65AD\u6027\u7684\u5C5E\u6027\uFF08\u5728\u8FD9\u91CC\u662F <code>kind</code>\uFF09\uFF0CTypeScript \u5C06\u4F1A\u8BA4\u4E3A\u4F60\u4F1A\u4F7F\u7528\u7684\u5BF9\u8C61\u7C7B\u578B\u4E00\u5B9A\u662F\u62E5\u6709\u7279\u6B8A\u5B57\u9762\u91CF\u7684\uFF0C\u5E76\u4E14\u5B83\u4F1A\u4E3A\u4F60\u81EA\u52A8\u628A\u7C7B\u578B\u8303\u56F4\u53D8\u5C0F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;square&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u73B0\u5728 TypeScript \u77E5\u9053 s \u7684\u7C7B\u578B\u662F Square</span>
    <span class="token comment">// \u6240\u4EE5\u4F60\u73B0\u5728\u80FD\u5B89\u5168\u4F7F\u7528\u5B83</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0D\u662F\u4E00\u4E2A square \uFF1F\u56E0\u6B64 TypeScript \u5C06\u4F1A\u63A8\u7B97\u51FA s \u4E00\u5B9A\u662F Rectangle</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>width <span class="token operator">*</span> s<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-110" tabindex="-1"><a class="header-anchor" href="#-110">#</a> \u8BE6\u7EC6\u7684\u68C0\u67E5</h4><p>\u901A\u5E38\uFF0C\u8054\u5408\u7C7B\u578B\u7684\u6210\u5458\u6709\u4E00\u4E9B\u81EA\u5DF1\u7684\u884C\u4E3A\uFF08\u4EE3\u7801\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Square</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;square&#39;</span><span class="token punctuation">;</span>
  size<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Rectangle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;rectangle&#39;</span><span class="token punctuation">;</span>
  width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  height<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6709\u4EBA\u4EC5\u4EC5\u662F\u6DFB\u52A0\u4E86 \`Circle\` \u7C7B\u578B</span>
<span class="token comment">// \u6211\u4EEC\u53EF\u80FD\u5E0C\u671B TypeScript \u80FD\u5728\u4EFB\u4F55\u88AB\u9700\u8981\u7684\u5730\u65B9\u629B\u51FA\u9519\u8BEF</span>
<span class="token keyword">interface</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">;</span>
  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Shape</span> <span class="token operator">=</span> Square <span class="token operator">|</span> Rectangle <span class="token operator">|</span> Circle<span class="token punctuation">;</span>
</code></pre></div><p>\u4E00\u4E2A\u53EF\u80FD\u4F1A\u8BA9\u4F60\u7684\u4EE3\u7801\u53D8\u5DEE\u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;square&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;rectangle&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>width <span class="token operator">*</span> s<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u4F60\u80FD\u8BA9 TypeScript \u7ED9\u4F60\u4E00\u4E2A\u9519\u8BEF\uFF0C\u8FD9\u662F\u4E0D\u662F\u5F88\u68D2\uFF1F</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F60\u53EF\u4EE5\u901A\u8FC7\u4E00\u4E2A\u7B80\u5355\u7684\u5411\u4E0B\u601D\u60F3\uFF0C\u6765\u786E\u4FDD\u5757\u4E2D\u7684\u7C7B\u578B\u88AB\u63A8\u65AD\u4E3A\u4E0E <code>never</code> \u7C7B\u578B\u517C\u5BB9\u7684\u7C7B\u578B\u3002\u4F8B\u5982\uFF0C\u4F60\u53EF\u4EE5\u6DFB\u52A0\u4E00\u4E2A\u66F4\u8BE6\u7EC6\u7684\u68C0\u67E5\u6765\u6355\u83B7\u9519\u8BEF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;square&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;rectangle&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>width <span class="token operator">*</span> s<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Error: &#39;Circle&#39; \u4E0D\u80FD\u88AB\u8D4B\u503C\u7ED9 &#39;never&#39;</span>
    <span class="token keyword">const</span> _exhaustiveCheck<span class="token operator">:</span> <span class="token builtin">never</span> <span class="token operator">=</span> s<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5B83\u5C06\u5F3A\u5236\u4F60\u6DFB\u52A0\u4E00\u79CD\u65B0\u7684\u6761\u4EF6\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;square&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;rectangle&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> s<span class="token punctuation">.</span>width <span class="token operator">*</span> s<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind <span class="token operator">===</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// ok</span>
    <span class="token keyword">const</span> _exhaustiveCheck<span class="token operator">:</span> <span class="token builtin">never</span> <span class="token operator">=</span> s<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="switch" tabindex="-1"><a class="header-anchor" href="#switch">#</a> Switch</h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>switch</code> \u6765\u5B9E\u73B0\u4EE5\u4E0A\u4F8B\u5B50\u3002</p></div><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;square&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;rectangle&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> s<span class="token punctuation">.</span>width <span class="token operator">*</span> s<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;circle&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">const</span> _exhaustiveCheck<span class="token operator">:</span> <span class="token builtin">never</span> <span class="token operator">=</span> s<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="strictnullchecks" tabindex="-1"><a class="header-anchor" href="#strictnullchecks">#</a> strictNullChecks</h4><p>\u5982\u679C\u4F60\u4F7F\u7528 <code>strictNullChecks</code> \u9009\u9879\u6765\u505A\u8BE6\u7EC6\u7684\u68C0\u67E5\uFF0C\u4F60\u5E94\u8BE5\u8FD4\u56DE <code>_exhaustiveCheck</code> \u53D8\u91CF\uFF08\u7C7B\u578B\u662F <code>never</code>\uFF09\uFF0C\u5426\u5219 TypeScript \u53EF\u80FD\u4F1A\u63A8\u65AD\u8FD4\u56DE\u503C\u4E3A <code>undefined</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">area</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;square&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;rectangle&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> s<span class="token punctuation">.</span>width <span class="token operator">*</span> s<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;circle&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">const</span> _exhaustiveCheck<span class="token operator">:</span> <span class="token builtin">never</span> <span class="token operator">=</span> s<span class="token punctuation">;</span>
      <span class="token keyword">return</span> _exhaustiveCheck<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="redux" tabindex="-1"><a class="header-anchor" href="#redux">#</a> Redux</h4><p>Redux \u5E93\u6B63\u662F\u4F7F\u7528\u7684\u4E0A\u8FF0\u4F8B\u5B50\u3002</p><p>\u4EE5\u4E0B\u662F\u6DFB\u52A0\u4E86 TypeScript \u7C7B\u578B\u6CE8\u89E3\u7684<a href="https://github.com/reduxjs/redux#the-gist" target="_blank" rel="noopener noreferrer">redux \u8981\u70B9</a>\u3002</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Action</span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token operator">|</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&#39;DECREMENT&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * This is a reducer, a pure function with (state, action) =&gt; state signature.
 * It describes how an action transforms the state into the next state.
 *
 * The shape of the state is up to you: it can be a primitive, an array, an object,
 * or even an Immutable.js data structure. The only important part is that you should
 * not mutate the state object, but return a new object if the state changes.
 *
 * In this example, we use a \`switch\` statement and strings, but you can use a helper that
 * follows a different convention (such as function maps) if it makes sense for your
 * project.
 */</span>
<span class="token keyword">function</span> <span class="token function">counter</span><span class="token punctuation">(</span>state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> action<span class="token operator">:</span> Action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;INCREMENT&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> state <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&#39;DECREMENT&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> state <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> state<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Create a Redux store holding the state of your app.</span>
<span class="token comment">// Its API is { subscribe, dispatch, getState }.</span>
<span class="token keyword">let</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// You can use subscribe() to update the UI in response to state changes.</span>
<span class="token comment">// Normally you&#39;d use a view binding library (e.g. React Redux) rather than subscribe() directly.</span>
<span class="token comment">// However it can also be handy to persist the current state in the localStorage.</span>

store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// The only way to mutate the internal state is to dispatch an action.</span>
<span class="token comment">// The actions can be serialized, logged or stored and later replayed.</span>
store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;INCREMENT&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2</span>
store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;DECREMENT&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
</code></pre></div><p>\u4E0E TypeScript \u4E00\u8D77\u4F7F\u7528\u53EF\u4EE5\u6709\u6548\u7684\u9632\u6B62\u62FC\u5199\u9519\u8BEF\uFF0C\u5E76\u4E14\u80FD\u63D0\u9AD8\u91CD\u6784\u548C\u4E66\u5199\u6587\u6863\u5316\u4EE3\u7801\u7684\u80FD\u529B\u3002</p><h3 id="-111" tabindex="-1"><a class="header-anchor" href="#-111">#</a> \u7D22\u5F15\u7B7E\u540D</h3><p>\u53EF\u4EE5\u7528\u5B57\u7B26\u4E32\u8BBF\u95EE JavaScript \u4E2D\u7684\u5BF9\u8C61\uFF08TypeScript \u4E2D\u4E5F\u4E00\u6837\uFF09\uFF0C\u7528\u6765\u4FDD\u5B58\u5BF9\u5176\u4ED6\u5BF9\u8C61\u7684\u5F15\u7528\u3002</p><p>\u4F8B\u5982\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
foo<span class="token punctuation">[</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// World</span>
</code></pre></div><p>\u6211\u4EEC\u5728\u952E <code>Hello</code> \u4E0B\u4FDD\u5B58\u4E86\u4E00\u4E2A\u5B57\u7B26\u4E32 <code>World</code>\uFF0C\u9664\u5B57\u7B26\u4E32\u5916\uFF0C\u5B83\u4E5F\u53EF\u4EE5\u4FDD\u5B58\u4EFB\u610F\u7684 JavaScript \u5BF9\u8C61\uFF0C\u4F8B\u5982\u4E00\u4E2A\u7C7B\u7684\u5B9E\u4F8B\u3002</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
foo<span class="token punctuation">[</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token string">&#39;World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
foo<span class="token punctuation">[</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// World</span>
</code></pre></div><p>\u5F53\u4F60\u4F20\u5165\u4E00\u4E2A\u5176\u4ED6\u5BF9\u8C61\u81F3\u7D22\u5F15\u7B7E\u540D\u65F6\uFF0CJavaScript \u4F1A\u5728\u5F97\u5230\u7ED3\u679C\u4E4B\u524D\u4F1A\u5148\u8C03\u7528 <code>.toString</code> \u65B9\u6CD5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;toString called&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> foo<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
foo<span class="token punctuation">[</span>obj<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">;</span> <span class="token comment">// toString called</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span>obj<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// toString called, World</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Worldorld</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u53EA\u8981\u7D22\u5F15\u4F4D\u7F6E\u4F7F\u7528\u4E86 <code>obj</code>\uFF0C<code>toString</code> \u65B9\u6CD5\u90FD\u5C06\u4F1A\u88AB\u8C03\u7528\u3002</p></div><p>\u6570\u7EC4\u6709\u70B9\u7A0D\u5FAE\u4E0D\u540C\uFF0C\u5BF9\u4E8E\u4E00\u4E2A <code>number</code> \u7C7B\u578B\u7684\u7D22\u5F15\u7B7E\u540D\uFF0CJavaScript \u5F15\u64CE\u5C06\u4F1A\u5C1D\u8BD5\u53BB\u4F18\u5316\uFF08\u8FD9\u53D6\u51B3\u4E8E\u5B83\u662F\u5426\u662F\u4E00\u4E2A\u771F\u7684\u6570\u7EC4\u3001\u5B58\u50A8\u7684\u9879\u76EE\u7ED3\u6784\u662F\u5426\u5339\u914D\u7B49\uFF09\u3002\u56E0\u6B64\uFF0C<code>number</code> \u5E94\u8BE5\u88AB\u8003\u8651\u4F5C\u4E3A\u4E00\u4E2A\u6709\u6548\u7684\u5BF9\u8C61\u8BBF\u95EE\u5668\uFF08\u8FD9\u4E0E <code>string</code> \u4E0D\u540C\uFF09\uFF0C\u5982\u4E0B\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;World&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// World</span>
</code></pre></div><p>\u56E0\u6B64\uFF0C\u8FD9\u5C31\u662F JavaScript\u3002\u73B0\u5728\u8BA9\u6211\u4EEC\u770B\u770B TypeScript \u5BF9\u8FD9\u4E9B\u6982\u5FF5\u66F4\u4F18\u96C5\u7684\u5904\u7406\u3002</p><h4 id="typescript-5" tabindex="-1"><a class="header-anchor" href="#typescript-5">#</a> TypeScript \u7D22\u5F15\u7B7E\u540D</h4><p>JavaScript \u5728\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\u7684\u7D22\u5F15\u7B7E\u540D\u4E0A\u4F1A\u9690\u5F0F\u8C03\u7528 \xB7 \u65B9\u6CD5\uFF0C\u800C\u5728 TypeScript \u4E2D\uFF0C\u4E3A\u9632\u6B62\u521D\u5B66\u8005\u7838\u4F24\u81EA\u5DF1\u7684\u811A\uFF08\u6211\u603B\u662F\u770B\u5230 stackoverflow \u4E0A\u6709\u5F88\u591A JavaScript \u4F7F\u7528\u8005\u90FD\u4F1A\u8FD9\u6837\u3002\uFF09\uFF0C\u5B83\u5C06\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002</p><div class="language-ts"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> foo<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// ERROR: \u7D22\u5F15\u7B7E\u540D\u5FC5\u987B\u4E3A string, number....</span>
foo<span class="token punctuation">[</span>obj<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// FIX: TypeScript \u5F3A\u5236\u4F60\u5FC5\u987B\u660E\u786E\u8FD9\u4E48\u505A\uFF1A</span>
foo<span class="token punctuation">[</span>obj<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5F3A\u5236\u7528\u6237\u5FC5\u987B\u660E\u786E\u7684\u5199\u51FA <code>toString()</code> \u7684\u539F\u56E0\u662F\uFF1A\u5728\u5BF9\u8C61\u4E0A\u9ED8\u8BA4\u6267\u884C\u7684 <code>toString</code> \u65B9\u6CD5\u662F\u6709\u5BB3\u7684\u3002\u4F8B\u5982 v8 \u5F15\u64CE\u4E0A\u603B\u662F\u4F1A\u8FD4\u56DE <code>[object Object]</code></p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;World&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// World</span>
</code></pre></div><p>\u5F53\u7136\uFF0C\u6570\u5B57\u7C7B\u578B\u662F\u88AB\u5141\u8BB8\u7684\uFF0C\u8FD9\u662F\u56E0\u4E3A\uFF1A</p><ul><li>\u9700\u8981\u5BF9\u6570\u7EC4 / \u5143\u7EC4\u5B8C\u7F8E\u7684\u652F\u6301\uFF1B</li><li>\u5373\u4F7F\u4F60\u5728\u4E0A\u4F8B\u4E2D\u4F7F\u7528 <code>number</code> \u7C7B\u578B\u7684\u503C\u6765\u66FF\u4EE3 <code>obj</code>\uFF0C<code>number</code> \u7C7B\u578B\u9ED8\u8BA4\u7684 <code>toString</code> \u65B9\u6CD5\u5B9E\u73B0\u7684\u5F88\u53CB\u597D\uFF08\u4E0D\u662F <code>[object Object]</code>\uFF09\u3002</li></ul><p>\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre></div><p>\u56E0\u6B64\uFF0C\u6211\u4EEC\u6709\u4EE5\u4E0B\u7ED3\u8BBA\uFF1A</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>TypeScript \u7684\u7D22\u5F15\u7B7E\u540D\u5FC5\u987B\u662F <code>string</code> \u6216\u8005 <code>number</code>\u3002</p><p><code>symbols</code> \u4E5F\u662F\u6709\u6548\u7684\uFF0CTypeScript \u652F\u6301\u5B83\u3002\u5728\u63A5\u4E0B\u6765\u6211\u4EEC\u5C06\u4F1A\u8BB2\u89E3\u5B83\u3002</p></div><h4 id="-112" tabindex="-1"><a class="header-anchor" href="#-112">#</a> \u58F0\u660E\u4E00\u4E2A\u7D22\u5F15\u7B7E\u540D</h4><p>\u5728\u4E0A\u6587\u4E2D\uFF0C\u6211\u4EEC\u901A\u8FC7\u4F7F\u7528 <code>any</code> \u6765\u8BA9 TypeScript \u5141\u8BB8\u6211\u4EEC\u53EF\u4EE5\u505A\u4EFB\u610F\u6211\u4EEC\u60F3\u505A\u7684\u4E8B\u60C5\u3002\u5B9E\u9645\u4E0A\uFF0C\u6211\u4EEC\u53EF\u4EE5\u660E\u786E\u7684\u6307\u5B9A\u7D22\u5F15\u7B7E\u540D\u3002\u4F8B\u5982\uFF1A\u5047\u8BBE\u4F60\u60F3\u786E\u8BA4\u5B58\u50A8\u5728\u5BF9\u8C61\u4E2D\u4EFB\u4F55\u5185\u5BB9\u90FD\u7B26\u5408 <code>{ message: string }</code> \u7684\u7ED3\u6784\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>[index: string]: { message: string }</code> \u6765\u5B9E\u73B0\u3002</p><div class="language-ts"><pre><code><span class="token keyword">const</span> foo<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u50A8\u5B58\u7684\u4E1C\u897F\u5FC5\u987B\u7B26\u5408\u7ED3\u6784</span>
<span class="token comment">// ok</span>
foo<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;some message&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Error, \u5FC5\u987B\u5305\u542B \`message\`</span>
foo<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> messages<span class="token operator">:</span> <span class="token string">&#39;some message&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BFB\u53D6\u65F6\uFF0C\u4E5F\u4F1A\u6709\u7C7B\u578B\u68C0\u67E5</span>
<span class="token comment">// ok</span>
foo<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>message<span class="token punctuation">;</span>

<span class="token comment">// Error: messages \u4E0D\u5B58\u5728</span>
foo<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>messages<span class="token punctuation">;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u7D22\u5F15\u7B7E\u540D\u7684\u540D\u79F0\uFF08\u5982\uFF1A<code>{ [index: string]: { message: string } }</code> \u91CC\u7684 <code>index</code> \uFF09\u9664\u4E86\u53EF\u8BFB\u6027\u5916\uFF0C\u5E76\u6CA1\u6709\u4EFB\u4F55\u610F\u4E49\u3002\u4F8B\u5982\uFF1A\u5982\u679C\u6709\u4E00\u4E2A\u7528\u6237\u540D\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>{ username: string}: { message: string }</code>\uFF0C\u8FD9\u6709\u5229\u4E8E\u4E0B\u4E00\u4E2A\u5F00\u53D1\u8005\u7406\u89E3\u4F60\u7684\u4EE3\u7801\u3002</p></div><p><code>number</code> \u7C7B\u578B\u7684\u7D22\u5F15\u4E5F\u652F\u6301\uFF1A<code>{ [count: number]: &#39;SomeOtherTypeYouWantToStoreEgRebate&#39; }</code>\u3002</p><h4 id="-113" tabindex="-1"><a class="header-anchor" href="#-113">#</a> \u6240\u6709\u6210\u5458\u90FD\u5FC5\u987B\u7B26\u5408\u5B57\u7B26\u4E32\u7684\u7D22\u5F15\u7B7E\u540D</h4><p>\u5F53\u4F60\u58F0\u660E\u4E00\u4E2A\u7D22\u5F15\u7B7E\u540D\u65F6\uFF0C\u6240\u6709\u660E\u786E\u7684\u6210\u5458\u90FD\u5FC5\u987B\u7B26\u5408\u7D22\u5F15\u7B7E\u540D\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// ok</span>
<span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Error</span>
<span class="token keyword">interface</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// Error: y \u5C5E\u6027\u5FC5\u987B\u4E3A number \u7C7B\u578B</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u53EF\u4EE5\u7ED9\u4F60\u63D0\u4F9B\u5B89\u5168\u6027\uFF0C\u4EFB\u4F55\u4EE5\u5B57\u7B26\u4E32\u7684\u8BBF\u95EE\u90FD\u80FD\u5F97\u5230\u76F8\u540C\u7ED3\u679C\u3002</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> foo<span class="token operator">:</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  y<span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u76F4\u63A5</span>
foo<span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// number</span>

<span class="token comment">// \u95F4\u63A5</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">;</span>
foo<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// number</span>
</code></pre></div><h4 id="-114" tabindex="-1"><a class="header-anchor" href="#-114">#</a> \u4F7F\u7528\u4E00\u7EC4\u6709\u9650\u7684\u5B57\u7B26\u4E32\u5B57\u9762\u91CF</h4><p>\u4E00\u4E2A\u7D22\u5F15\u7B7E\u540D\u53EF\u4EE5\u901A\u8FC7\u6620\u5C04\u7C7B\u578B\u6765\u4F7F\u7D22\u5F15\u5B57\u7B26\u4E32\u4E3A\u8054\u5408\u7C7B\u578B\u4E2D\u7684\u4E00\u5458\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Index</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">FromIndex</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k <span class="token keyword">in</span> Index<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> good<span class="token operator">:</span> FromIndex <span class="token operator">=</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Error:</span>
<span class="token comment">// \`{ b: 1, c: 2, d: 3 }\` \u4E0D\u80FD\u5206\u914D\u7ED9 &#39;FromIndex&#39;</span>
<span class="token comment">// \u5BF9\u8C61\u5B57\u9762\u91CF\u53EA\u80FD\u6307\u5B9A\u5DF2\u77E5\u7C7B\u578B\uFF0C&#39;d&#39; \u4E0D\u5B58\u5728 &#39;FromIndex&#39; \u7C7B\u578B\u4E0A</span>
<span class="token keyword">const</span> bad<span class="token operator">:</span> FromIndex <span class="token operator">=</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> d<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u901A\u5E38\u4E0E <code>keyof/typeof</code> \u4E00\u8D77\u4F7F\u7528\uFF0C\u6765\u83B7\u53D6\u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u5728\u4E0B\u4E00\u7AE0\u8282\u4E2D\uFF0C\u6211\u4EEC\u5C06\u89E3\u91CA\u5B83\u3002</p><p>\u53D8\u91CF\u7684\u89C4\u5219\u4E00\u822C\u53EF\u4EE5\u5EF6\u8FDF\u88AB\u63A8\u65AD\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">FromSomeIndex<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="string-number" tabindex="-1"><a class="header-anchor" href="#string-number">#</a> \u540C\u65F6\u62E5\u6709 <code>string</code> \u548C <code>number</code> \u7C7B\u578B\u7684\u7D22\u5F15\u7B7E\u540D</h4><p>\u8FD9\u5E76\u4E0D\u662F\u4E00\u4E2A\u5E38\u89C1\u7684\u7528\u4F8B\uFF0C\u4F46\u662F TypeScript \u652F\u6301\u5B83\u3002</p><p><code>string</code> \u7C7B\u578B\u7684\u7D22\u5F15\u7B7E\u540D\u6BD4 <code>number</code> \u7C7B\u578B\u7684\u7D22\u5F15\u7B7E\u540D\u66F4\u4E25\u683C\u3002\u8FD9\u662F\u6545\u610F\u8BBE\u8BA1\uFF0C\u5B83\u5141\u8BB8\u4F60\u6709\u5982\u4E0B\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">ArrStr</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u5FC5\u987B\u5305\u62EC\u6240\u7528\u6210\u5458\u7C7B\u578B</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// \u5B57\u7B26\u4E32\u7D22\u5F15\u7C7B\u578B\u7684\u5B50\u7EA7</span>

  <span class="token comment">// example</span>
  length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-115" tabindex="-1"><a class="header-anchor" href="#-115">#</a> \u8BBE\u8BA1\u6A21\u5F0F\uFF1A\u7D22\u5F15\u7B7E\u540D\u7684\u5D4C\u5957</h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u6DFB\u52A0\u7D22\u5F15\u7B7E\u540D\u65F6\uFF0C\u9700\u8981\u8003\u8651\u7684 API\u3002</p></div><p>\u5728 JavaScript \u793E\u533A\u4F60\u5C06\u4F1A\u89C1\u5230\u5F88\u591A\u6EE5\u7528\u7D22\u5F15\u7B7E\u540D\u7684 API\u3002\u5982 JavaScript \u5E93\u4E2D\u4F7F\u7528 CSS \u7684\u5E38\u89C1\u6A21\u5F0F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">NestedCSS</span> <span class="token punctuation">{</span>
  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> <span class="token comment">// strictNullChecks=false \u65F6\u7D22\u5F15\u7B7E\u540D\u53EF\u4E3A undefined</span>
  <span class="token punctuation">[</span>selector<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> NestedCSS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> example<span class="token operator">:</span> NestedCSS <span class="token operator">=</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;.subclass&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    color<span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5C3D\u91CF\u4E0D\u8981\u4F7F\u7528\u8FD9\u79CD\u628A\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D\u4E0E\u6709\u6548\u53D8\u91CF\u6DF7\u5408\u4F7F\u7528\u3002\u5982\u679C\u5C5E\u6027\u540D\u79F0\u4E2D\u6709\u62FC\u5199\u9519\u8BEF\uFF0C\u8FD9\u4E2A\u9519\u8BEF\u4E0D\u4F1A\u88AB\u6355\u83B7\u5230\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> failsSilently<span class="token operator">:</span> NestedCSS <span class="token operator">=</span> <span class="token punctuation">{</span>
  colour<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span> <span class="token comment">// &#39;colour&#39; \u4E0D\u4F1A\u88AB\u6355\u6349\u5230\u9519\u8BEF</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u53D6\u800C\u4EE3\u4E4B\uFF0C\u6211\u4EEC\u628A\u7D22\u5F15\u7B7E\u540D\u5206\u79BB\u5230\u81EA\u5DF1\u7684\u5C5E\u6027\u91CC\uFF0C\u5982\u547D\u540D\u4E3A <code>nest</code>\uFF08\u6216\u8005 <code>children</code>\u3001<code>subnodes</code> \u7B49\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">NestedCSS</span> <span class="token punctuation">{</span>
  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  nest<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>selector<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> NestedCSS<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> example<span class="token operator">:</span> NestedCSS <span class="token operator">=</span> <span class="token punctuation">{</span>
  color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
  nest<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;.subclass&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      color<span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> failsSliently<span class="token operator">:</span> NestedCSS <span class="token operator">=</span> <span class="token punctuation">{</span>
  colour<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>  <span class="token comment">// TS Error: \u672A\u77E5\u5C5E\u6027 &#39;colour&#39;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-116" tabindex="-1"><a class="header-anchor" href="#-116">#</a> \u7D22\u5F15\u7B7E\u540D\u4E2D\u6392\u9664\u67D0\u4E9B\u5C5E\u6027</h4><p>\u6709\u65F6\uFF0C\u4F60\u9700\u8981\u628A\u5C5E\u6027\u5408\u5E76\u81F3\u7D22\u5F15\u7B7E\u540D\uFF08\u867D\u7136\u6211\u4EEC\u5E76\u4E0D\u5EFA\u8BAE\u8FD9\u4E48\u505A\uFF0C\u4F60\u5E94\u8BE5\u4F7F\u7528\u4E0A\u6587\u4E2D\u63D0\u5230\u7684\u5D4C\u5957\u7D22\u5F15\u7B7E\u540D\u7684\u5F62\u5F0F\uFF09\uFF0C\u5982\u4E0B\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">FieldState</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FromState</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  isValid<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u7B26\u5408\u7D22\u5F15\u7B7E\u540D</span>
  <span class="token punctuation">[</span>filedName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> FieldState<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>TypeScript \u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3A\u6DFB\u52A0\u7684\u7D22\u5F15\u7B7E\u540D\uFF0C\u5E76\u4E0D\u517C\u5BB9\u5B83\u539F\u6709\u7684\u7C7B\u578B\uFF0C\u4F7F\u7528\u4EA4\u53C9\u7C7B\u578B\u53EF\u4EE5\u89E3\u51B3\u4E0A\u8FF0\u95EE\u9898\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">FieldState</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FormState</span> <span class="token operator">=</span> <span class="token punctuation">{</span> isValid<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>fieldName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> FieldState <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8BF7\u6CE8\u610F\u5C3D\u7BA1\u4F60\u53EF\u4EE5\u58F0\u660E\u5B83\u81F3\u4E00\u4E2A\u5DF2\u5B58\u5728\u7684 TypeScript \u7C7B\u578B\u4E0A\uFF0C\u4F46\u662F\u4F60\u4E0D\u80FD\u521B\u5EFA\u5982\u4E0B\u7684\u5BF9\u8C61\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">FieldState</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FormState</span> <span class="token operator">=</span> <span class="token punctuation">{</span> isValid<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>fieldName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> FieldState <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u5C06\u5B83\u7528\u4E8E\u4ECE\u67D0\u4E9B\u5730\u65B9\u83B7\u53D6\u7684 JavaScript \u5BF9\u8C61</span>
<span class="token keyword">declare</span> <span class="token keyword">const</span> foo<span class="token operator">:</span> FormState<span class="token punctuation">;</span>

<span class="token keyword">const</span> isValidBool <span class="token operator">=</span> foo<span class="token punctuation">.</span>isValid<span class="token punctuation">;</span>
<span class="token keyword">const</span> somethingFieldState <span class="token operator">=</span> foo<span class="token punctuation">[</span><span class="token string">&#39;something&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u5B83\u6765\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\u65F6\uFF0C\u5C06\u4E0D\u4F1A\u5DE5\u4F5C</span>
<span class="token keyword">const</span> bar<span class="token operator">:</span> FormState <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// &#39;isValid&#39; \u4E0D\u80FD\u8D4B\u503C\u7ED9 &#39;FieldState&#39;</span>
  isValid<span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="-117" tabindex="-1"><a class="header-anchor" href="#-117">#</a> \u6D41\u52A8\u7684\u7C7B\u578B</h3><p>TypeScript \u7C7B\u578B\u7CFB\u7EDF\u975E\u5E38\u5F3A\u5927\uFF0C\u5B83\u652F\u6301\u5176\u4ED6\u4EFB\u4F55\u5355\u4E00\u8BED\u8A00\u65E0\u6CD5\u5B9E\u73B0\u7684\u7C7B\u578B\u6D41\u52A8\u548C\u7C7B\u578B\u7247\u6BB5\u3002</p><p>\u8FD9\u662F\u56E0\u4E3A TypeScript \u7684\u8BBE\u8BA1\u76EE\u7684\u4E4B\u4E00\u662F\u8BA9\u4F60\u65E0\u7F1D\u4E0E\u50CF JavaScript \u8FD9\u7C7B\u9AD8\u52A8\u6001\u7684\u8BED\u8A00\u4E00\u8D77\u5DE5\u4F5C\u3002\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u4ECB\u7ECD\u4E00\u4E9B\u5728 TypeScript \u4E2D\u4F7F\u7528\u79FB\u52A8\u7C7B\u578B\u7684\u6280\u5DE7\u3002</p><p>\u5173\u952E\u7684\u52A8\u673A\uFF1A\u5F53\u4F60\u6539\u53D8\u4E86\u5176\u4E2D\u4E00\u4E2A\u65F6\uFF0C\u5176\u4ED6\u76F8\u5173\u7684\u4F1A\u81EA\u52A8\u66F4\u65B0\uFF0C\u5E76\u4E14\u5F53\u6709\u4E8B\u60C5\u53D8\u7CDF\u7CD5\u65F6\uFF0C\u4F60\u4F1A\u5F97\u5230\u4E00\u4E2A\u53CB\u597D\u7684\u63D0\u793A\uFF0C\u5C31\u597D\u50CF\u4E00\u4E2A\u88AB\u7CBE\u5FC3\u8BBE\u8BA1\u8FC7\u7684\u7EA6\u675F\u7CFB\u7EDF\u3002</p><h4 id="-118" tabindex="-1"><a class="header-anchor" href="#-118">#</a> \u590D\u5236\u7C7B\u578B\u548C\u503C</h4><p>\u5982\u679C\u4F60\u60F3\u79FB\u52A8\u4E00\u4E2A\u7C7B\uFF0C\u4F60\u53EF\u80FD\u4F1A\u60F3\u8981\u505A\u4EE5\u4E0B\u4E8B\u60C5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">const</span> Bar <span class="token operator">=</span> Foo<span class="token punctuation">;</span>

<span class="token keyword">let</span> bar<span class="token operator">:</span> Bar<span class="token punctuation">;</span> <span class="token comment">// Error: \u4E0D\u80FD\u627E\u5230\u540D\u79F0 &#39;Bar&#39;</span>
</code></pre></div><p>\u8FD9\u4F1A\u5F97\u5230\u4E00\u4E2A\u9519\u8BEF\uFF0C\u56E0\u4E3A <code>const</code> \u4EC5\u4EC5\u662F\u590D\u5236\u4E86 <code>Foo</code> \u5230\u4E00\u4E2A\u53D8\u91CF\u58F0\u660E\u7A7A\u95F4\uFF0C\u56E0\u6B64\u4F60\u65E0\u6CD5\u628A <code>Bar</code> \u5F53\u4F5C\u4E00\u4E2A\u7C7B\u578B\u58F0\u660E\u4F7F\u7528\u3002\u6B63\u786E\u7684\u65B9\u5F0F\u662F\u4F7F\u7528 <code>import</code> \u5173\u952E\u5B57\uFF0C\u8BF7\u6CE8\u610F\uFF0C\u5982\u679C\u4F60\u5728\u4F7F\u7528 <code>namespace</code> \u6216\u8005 <code>modules</code>\uFF0C\u4F7F\u7528 <code>import</code> \u662F\u4F60\u552F\u4E00\u80FD\u7528\u7684\u65B9\u5F0F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">namespace</span> importing <span class="token punctuation">{</span>
  <span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">import</span> Bar <span class="token operator">=</span> importing<span class="token punctuation">.</span>Foo<span class="token punctuation">;</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> Bar<span class="token punctuation">;</span> <span class="token comment">// ok</span>
</code></pre></div><p>\u8FD9\u4E2A <code>import</code> \u6280\u5DE7\uFF0C\u4EC5\u9002\u5408\u4E8E\u7C7B\u578B\u548C\u53D8\u91CF\u3002</p><h4 id="-119" tabindex="-1"><a class="header-anchor" href="#-119">#</a> \u6355\u83B7\u53D8\u91CF\u7684\u7C7B\u578B</h4><p>\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>typeof</code> \u64CD\u4F5C\u7B26\u5728\u7C7B\u578B\u6CE8\u89E3\u4E2D\u4F7F\u7528\u53D8\u91CF\u3002\u8FD9\u5141\u8BB8\u4F60\u544A\u8BC9\u7F16\u8BD1\u5668\uFF0C\u4E00\u4E2A\u53D8\u91CF\u7684\u7C7B\u578B\u4E0E\u5176\u4ED6\u7C7B\u578B\u76F8\u540C\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> <span class="token keyword">typeof</span> foo<span class="token punctuation">;</span> <span class="token comment">// &#39;bar&#39; \u7C7B\u578B\u4E0E &#39;foo&#39; \u7C7B\u578B\u76F8\u540C\uFF08\u5728\u8FD9\u91CC\u662F\uFF1A &#39;number&#39;\uFF09</span>

bar <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
bar <span class="token operator">=</span> <span class="token string">&#39;789&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error: &#39;string&#39; \u4E0D\u80FD\u5206\u914D\u7ED9 &#39;number&#39; \u7C7B\u578B</span>
</code></pre></div><h4 id="-120" tabindex="-1"><a class="header-anchor" href="#-120">#</a> \u6355\u83B7\u7C7B\u6210\u5458\u7684\u7C7B\u578B</h4><p>\u4E0E\u6355\u83B7\u53D8\u91CF\u7684\u7C7B\u578B\u76F8\u4F3C\uFF0C\u4F60\u4EC5\u4EC5\u662F\u9700\u8981\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\u7528\u6765\u6355\u83B7\u5230\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  foo<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u6211\u4EEC\u60F3\u8981\u6355\u83B7\u7684\u7C7B\u578B</span>
<span class="token punctuation">}</span>

<span class="token keyword">declare</span> <span class="token keyword">let</span> _foo<span class="token operator">:</span> Foo<span class="token punctuation">;</span>

<span class="token comment">// \u4E0E\u4E4B\u524D\u505A\u6CD5\u76F8\u540C</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> <span class="token keyword">typeof</span> _foo<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>
</code></pre></div><h4 id="-121" tabindex="-1"><a class="header-anchor" href="#-121">#</a> \u6355\u83B7\u5B57\u7B26\u4E32\u7C7B\u578B</h4><p>\u8BB8\u591A JavaScript \u5E93\u548C\u6846\u67B6\u90FD\u4F7F\u7528\u539F\u59CB\u7684 JavaScript \u5B57\u7B26\u4E32\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>const</code> \u5B9A\u4E49\u4E00\u4E2A\u53D8\u91CF\u6355\u83B7\u5B83\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u6355\u83B7\u5B57\u7B26\u4E32\u7684\u7C7B\u578B\u4E0E\u503C</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u4E00\u4E2A\u6355\u83B7\u7684\u7C7B\u578B</span>
<span class="token keyword">let</span> bar<span class="token operator">:</span> <span class="token keyword">typeof</span> foo<span class="token punctuation">;</span>

<span class="token comment">// bar \u4EC5\u80FD\u88AB\u8D4B\u503C &#39;Hello World&#39;</span>
bar <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
bar <span class="token operator">=</span> <span class="token string">&#39;anything else&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u91CC\uFF0C<code>bar</code> \u6709\u5B57\u9762\u91CF\u7C7B\u578B <code>Hello World</code>\uFF0C\u6211\u4EEC\u5728<a href="#%E5%AD%97%E9%9D%A2%E9%87%8F%E7%B1%BB%E5%9E%8B">\u5B57\u9762\u91CF\u7C7B\u578B</a>\u7AE0\u8282\u5DF2\u7ECF\u6DF1\u5165\u8BA8\u8BBA\u3002</p><h4 id="-122" tabindex="-1"><a class="header-anchor" href="#-122">#</a> \u6355\u83B7\u952E\u7684\u540D\u79F0</h4><p>keyof \u64CD\u4F5C\u7B26\u80FD\u8BA9\u4F60\u6355\u83B7\u4E00\u4E2A\u7C7B\u578B\u7684\u952E\u3002\u4F8B\u5982\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u5B83\u6765\u6355\u83B7\u53D8\u91CF\u7684\u952E\u540D\u79F0\uFF0C\u5728\u901A\u8FC7\u4F7F\u7528 typeof \u6765\u83B7\u53D6\u7C7B\u578B\u4E4B\u540E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">{</span>
  red<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
  blue<span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Colors</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> colors<span class="token punctuation">;</span>

<span class="token keyword">let</span> color<span class="token operator">:</span> Colors<span class="token punctuation">;</span> <span class="token comment">// color \u7684\u7C7B\u578B\u662F &#39;red&#39; | &#39;blue&#39;</span>
color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
color <span class="token operator">=</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">;</span> <span class="token comment">// ok</span>
color <span class="token operator">=</span> <span class="token string">&#39;anythingElse&#39;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre></div><p>\u8FD9\u5141\u8BB8\u4F60\u5F88\u5BB9\u6613\u5730\u62E5\u6709\u50CF\u5B57\u7B26\u4E32\u679A\u4E3E+\u5E38\u91CF\u8FD9\u6837\u7684\u7C7B\u578B\uFF0C\u5982\u4E0A\u4F8B\u6240\u793A\u3002</p><h3 id="-123" tabindex="-1"><a class="header-anchor" href="#-123">#</a> \u5F02\u5E38\u5904\u7406</h3><p>JavaScript \u6709\u4E00\u4E2A <code>Error</code> \u7C7B\uFF0C\u7528\u4E8E\u5904\u7406\u5F02\u5E38\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>throw</code> \u5173\u952E\u5B57\u6765\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002\u7136\u540E\u901A\u8FC7 <code>try/catch</code> \u5757\u6765\u6355\u83B7\u6B64\u9519\u8BEF\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Something bad happened&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-124" tabindex="-1"><a class="header-anchor" href="#-124">#</a> \u9519\u8BEF\u7684\u5B50\u7C7B\u578B</h4><p>\u9664\u5185\u7F6E\u7684 <code>Error</code> \u7C7B\u5916\uFF0C\u8FD8\u6709\u4E00\u4E9B\u989D\u5916\u7684\u5185\u7F6E\u9519\u8BEF\uFF0C\u5B83\u4EEC\u7EE7\u627F\u81EA <code>Error</code> \u7C7B\uFF1A</p><h5 id="rangeerror" tabindex="-1"><a class="header-anchor" href="#rangeerror">#</a> RangeError</h5><p>\u5F53\u6570\u5B57\u7C7B\u578B\u53D8\u91CF\u6216\u8005\u53C2\u6570\u8D85\u51FA\u5176\u6709\u6548\u8303\u56F4\u65F6\uFF0C\u51FA\u73B0 <code>RangeError</code> \u7684\u9519\u8BEF\u63D0\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u4F7F\u7528\u8FC7\u591A\u53C2\u6570\u8C03\u7528 console</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token builtin">console</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// RangeError: \u6570\u7EC4\u957F\u5EA6\u65E0\u6548</span>
</code></pre></div><h5 id="referenceerror" tabindex="-1"><a class="header-anchor" href="#referenceerror">#</a> ReferenceError</h5><p>\u5F53\u5F15\u7528\u65E0\u6548\u65F6\uFF0C\u4F1A\u51FA\u73B0 <code>ReferenceError</code> \u7684\u9519\u8BEF\u63D0\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>notValidVar<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ReferenceError: notValidVar \u672A\u5B9A\u4E49</span>
</code></pre></div><h5 id="syntaxerror" tabindex="-1"><a class="header-anchor" href="#syntaxerror">#</a> SyntaxError</h5><p>\u5F53\u89E3\u6790\u65E0\u6548 JavaScript \u4EE3\u7801\u65F6\uFF0C\u4F1A\u51FA\u73B0 <code>SyntaxError</code> \u7684\u9519\u8BEF\u63D0\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token number">1</span> <span class="token operator">**</span><span class="token operator">*</span> <span class="token number">3</span>   <span class="token comment">// SyntaxError: \u65E0\u6548\u7684\u6807\u8BB0 *</span>
</code></pre></div><h5 id="typeerror" tabindex="-1"><a class="header-anchor" href="#typeerror">#</a> TypeError</h5><p>\u53D8\u91CF\u6216\u8005\u53C2\u6570\u4E0D\u662F\u6709\u6548\u7C7B\u578B\u65F6\uFF0C\u4F1A\u51FA\u73B0 <code>TypeError</code> \u7684\u9519\u8BEF\u63D0\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token string">&#39;1.2&#39;</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: &#39;1.2&#39;.toPrecision \u4E0D\u662F\u51FD\u6570\u3002</span>

</code></pre></div><h5 id="urierror" tabindex="-1"><a class="header-anchor" href="#urierror">#</a> URIError</h5><p>\u5F53\u4F20\u5165\u65E0\u6548\u53C2\u6570\u81F3 <code>encodeURI()</code> \u548C <code>decodeURI()</code> \u65F6\uFF0C\u4F1A\u51FA\u73B0 <code>URIError</code> \u7684\u9519\u8BEF\u63D0\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token function">decodeURI</span><span class="token punctuation">(</span><span class="token string">&#39;%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// URIError: URL \u5F02\u5E38</span>
</code></pre></div><h4 id="error" tabindex="-1"><a class="header-anchor" href="#error">#</a> \u4F7F\u7528 <code>Error</code></h4><p>JavaScript \u521D\u5B66\u8005\u53EF\u80FD\u6709\u65F6\u5019\u4EC5\u4EC5\u662F\u629B\u51FA\u4E00\u4E2A\u539F\u59CB\u5B57\u7B26\u4E32\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;World&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// World</span>
</code></pre></div><p>**\u4E0D\u8981\u8FD9\u4E48\u505A\uFF0C**\u4F7F\u7528 <code>Error</code> \u5BF9\u8C61\u7684\u57FA\u672C\u597D\u5904\u662F\uFF0C\u5B83\u80FD\u81EA\u52A8\u8DDF\u8E2A\u5806\u6808\u7684\u5C5E\u6027\u6784\u5EFA\u4EE5\u53CA\u751F\u6210\u4F4D\u7F6E\u3002</p><p>\u539F\u59CB\u5B57\u7B26\u4E32\u4F1A\u5BFC\u81F4\u6781\u5DEE\u7684\u8C03\u8BD5\u4F53\u9A8C\uFF0C\u5E76\u4E14\u5728\u5206\u6790\u65E5\u5FD7\u65F6\uFF0C\u5C06\u4F1A\u53D8\u5F97\u9519\u7EFC\u590D\u6742\u3002</p><h4 id="throw" tabindex="-1"><a class="header-anchor" href="#throw">#</a> \u4F60\u5E76\u4E0D\u9700\u8981 <code>throw</code> \u629B\u51FA\u4E00\u4E2A\u9519\u8BEF</h4><p>\u4F20\u9012\u4E00\u4E2A <code>Error</code> \u5BF9\u8C61\u662F\u6CA1\u95EE\u9898\u7684\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u5728 <code>Node.js</code> \u56DE\u8C03\u51FD\u6570\u4E2D\u975E\u5E38\u5E38\u89C1\uFF0C\u5B83\u7528\u7B2C\u4E00\u4E2A\u53C2\u6570\u4F5C\u4E3A\u9519\u8BEF\u5BF9\u8C61\u8FDB\u884C\u56DE\u8C03\u5904\u7406</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">myFunction</span> <span class="token punctuation">(</span>callback<span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> Error<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">doSomethingAsync</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>somethingWrong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;This is my error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-125" tabindex="-1"><a class="header-anchor" href="#-125">#</a> \u4F18\u79C0\u7684\u7528\u4F8B</h4><p>\u300CExceptions should be exceptional\u300D\u662F\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\u5E38\u7528\u7528\u8BED\u3002\u8FD9\u91CC\u6709\u4E00\u4E9B\u539F\u56E0\u8BF4\u660E\u5728 JavaScript(TypeScript) \u4E2D\u4E5F\u662F\u5982\u6B64\u3002</p><h5 id="-126" tabindex="-1"><a class="header-anchor" href="#-126">#</a> \u4E0D\u6E05\u695A\u4ECE\u54EA\u91CC\u629B\u51FA\u9519\u8BEF</h5><p>\u8003\u8651\u5982\u4E0B\u4EE3\u7801\u5757\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">runTask1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token function">runTask2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Error:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0B\u4E00\u4E2A\u5F00\u53D1\u8005\u53EF\u80FD\u5E76\u4E0D\u6E05\u695A\u54EA\u4E2A\u51FD\u6570\u53EF\u80FD\u4F1A\u629B\u51FA\u9519\u8BEF\u3002\u5728\u6CA1\u6709\u9605\u8BFB <code>task1/task2</code> \u4EE3\u7801\u4EE5\u53CA\u4ED6\u4EEC\u53EF\u80FD\u4F1A\u8C03\u7528\u7684\u51FD\u6570\u65F6\uFF0C\u5BF9\u4EE3\u7801 <code>review</code> \u7684\u4EBA\u5458\u53EF\u80FD\u4E5F\u4E0D\u4F1A\u77E5\u9053\u9519\u8BEF\u4F1A\u4ECE\u54EA\u91CC\u629B\u51FA\u3002</p><h5 id="-127" tabindex="-1"><a class="header-anchor" href="#-127">#</a> \u4F18\u96C5\u7684\u9519\u8BEF\u6355\u83B7</h5><p>\u4F60\u53EF\u4EE5\u901A\u8FC7\u4E3A\u6BCF\u4E2A\u53EF\u80FD\u629B\u51FA\u9519\u8BEF\u7684\u4EE3\u7801\u663E\u5F0F\u6355\u83B7\uFF0C\u6765\u4F7F\u5176\u4F18\u96C5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">runTask1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Error:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token function">runTask2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Error:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F46\u662F\u73B0\u5728\uFF0C\u5982\u679C\u4F60\u60F3\u4ECE\u7B2C\u4E00\u4E2A\u4EFB\u52A1\u4E2D\u4F20\u9012\u53D8\u91CF\u5230\u7B2C\u4E8C\u4E2A\u4EFB\u52A1\u4E2D\uFF0C\u4EE3\u7801\u4F1A\u53D8\u7684\u6DF7\u4E71\uFF08\u6CE8\u610F\uFF1Afoo \u53D8\u91CF\u9700\u8981\u7528 let \u663E\u5F0F\u6CE8\u89E3\u5B83\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u80FD\u4ECE <code>runTask1</code> \u4E2D\u8FD4\u56DE\u51FA\u6765\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;World&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// World</span>
</code></pre></div><h5 id="-128" tabindex="-1"><a class="header-anchor" href="#-128">#</a> \u6CA1\u6709\u5728\u7C7B\u578B\u7CFB\u7EDF\u4E2D\u5F88\u597D\u7684\u8868\u793A</h5><p>\u8003\u8651\u5982\u4E0B\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">validate</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> value <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Invalid value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u8FD9\u79CD\u60C5\u5883\u4E0B\u4F7F\u7528 <code>Error</code> \u4E0D\u662F\u4E00\u4E2A\u597D\u7684\u4E3B\u610F\u3002\u56E0\u4E3A\u6CA1\u6709\u7528\u6765\u9A8C\u8BC1\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\uFF08\u5982\uFF1A<code>(value: number) =&gt; void</code>\uFF09\uFF0C\u53D6\u800C\u4EE3\u4E4B\u4E00\u4E2A\u66F4\u597D\u7684\u65B9\u5F0F\u662F\u521B\u5EFA\u4E00\u4E2A\u9A8C\u8BC1\u65B9\u6CD5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">validate</span><span class="token punctuation">(</span>
  value<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  error<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> value <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> error<span class="token operator">:</span> <span class="token string">&#39;Invalid value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u73B0\u5728\u5B83\u5177\u6709\u7C7B\u578B\u5B9A\u4E49\u4E86\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u9664\u975E\u4F60\u60F3\u7528\u4EE5\u975E\u5E38\u901A\u7528\uFF08try/catch\uFF09\u7684\u65B9\u5F0F\u5904\u7406\u9519\u8BEF\uFF0C\u5426\u5219\u4E0D\u8981\u629B\u51FA\u9519\u8BEF\u3002</p></div><h3 id="-129" tabindex="-1"><a class="header-anchor" href="#-129">#</a> \u6DF7\u5408</h3><p>TypeScript (\u548C JavaScript) \u7C7B\u53EA\u80FD\u4E25\u683C\u7684\u5355\u7EE7\u627F\uFF0C\u56E0\u6B64\u4F60\u4E0D\u80FD\u505A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">extends</span> <span class="token class-name">Tagged</span><span class="token punctuation">,</span> Timestamped <span class="token punctuation">{</span> <span class="token comment">// ERROR : \u4E0D\u80FD\u591A\u91CD\u7EE7\u627F</span>
  <span class="token comment">// ..</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4ECE\u53EF\u91CD\u7528\u7EC4\u4EF6\u6784\u5EFA\u7C7B\u7684\u53E6\u4E00\u79CD\u65B9\u5F0F\u662F\u901A\u8FC7\u57FA\u7C7B\u6765\u6784\u5EFA\u5B83\u4EEC\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u79F0\u4E3A\u6DF7\u5408\u3002</p><p>\u8FD9\u4E2A\u4E3B\u610F\u662F\u7B80\u5355\u7684\uFF0C\u91C7\u7528\u51FD\u6570 B \u63A5\u53D7\u4E00\u4E2A\u7C7B A\uFF0C\u5E76\u4E14\u8FD4\u56DE\u4E00\u4E2A\u5E26\u6709\u65B0\u529F\u80FD\u7684\u7C7B\u7684\u65B9\u5F0F\u6765\u66FF\u4EE3 A \u7C7B\u6269\u5C55 B \u6765\u83B7\u53D6 B \u4E0A\u7684\u529F\u80FD\uFF0C\u524D\u8005\u4E2D\u7684 B \u5373\u662F\u6DF7\u5408\u3002</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u300C\u6DF7\u5408\u300D\u662F\u4E00\u4E2A\u51FD\u6570\uFF1A</p><ul><li>\u4F20\u5165\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF1B</li><li>\u521B\u5EFA\u4E00\u4E2A\u5E26\u6709\u65B0\u529F\u80FD\uFF0C\u5E76\u4E14\u6269\u5C55\u6784\u9020\u51FD\u6570\u7684\u65B0\u7C7B\uFF1B</li><li>\u8FD4\u56DE\u8FD9\u4E2A\u65B0\u7C7B\u3002</li></ul></div><p>\u4E00\u4E2A\u5B8C\u6574\u7684\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u6240\u6709 mixins \u90FD\u9700\u8981</span>
<span class="token keyword">type</span> <span class="token class-name">Constructor<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token comment">/////////////</span>
<span class="token comment">// mixins \u4F8B\u5B50</span>
<span class="token comment">////////////</span>

<span class="token comment">// \u6DFB\u52A0\u5C5E\u6027\u7684\u6DF7\u5408\u4F8B\u5B50</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">TimesTamped</span><span class="token generic class-name"><span class="token operator">&lt;</span>TBase <span class="token keyword">extends</span> Constructor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Base<span class="token operator">:</span> TBase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token keyword">extends</span></span> Base <span class="token punctuation">{</span>
    timestamp <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6DFB\u52A0\u5C5E\u6027\u548C\u65B9\u6CD5\u7684\u6DF7\u5408\u4F8B\u5B50</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">Activatable</span><span class="token generic class-name"><span class="token operator">&lt;</span>TBase <span class="token keyword">extends</span> Constructor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Base<span class="token operator">:</span> TBase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token keyword">extends</span></span> Base <span class="token punctuation">{</span>
    isActivated <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token function">activate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>isActivated <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">deactivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>isActivated <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">///////////</span>
<span class="token comment">// \u7EC4\u5408\u7C7B</span>
<span class="token comment">///////////</span>

<span class="token comment">// \u7B80\u5355\u7684\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6DFB\u52A0 TimesTamped \u7684 User</span>
<span class="token keyword">const</span> TimestampedUser <span class="token operator">=</span> <span class="token function">TimesTamped</span><span class="token punctuation">(</span>User<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Tina TimesTamped \u548C Activatable \u7684\u7C7B</span>
<span class="token keyword">const</span> TimestampedActivatableUser <span class="token operator">=</span> <span class="token function">TimesTamped</span><span class="token punctuation">(</span><span class="token function">Activatable</span><span class="token punctuation">(</span>User<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//////////</span>
<span class="token comment">// \u4F7F\u7528\u7EC4\u5408\u7C7B</span>
<span class="token comment">//////////</span>

<span class="token keyword">const</span> timestampedUserExample <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimestampedUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timestampedUserExample<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> timestampedActivatableUserExample <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimestampedActivatableUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timestampedActivatableUserExample<span class="token punctuation">.</span>timestamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timestampedActivatableUserExample<span class="token punctuation">.</span>isActivated<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8BA9\u6211\u4EEC\u5206\u89E3\u8FD9\u4E2A\u4F8B\u5B50\u3002</p><h4 id="-130" tabindex="-1"><a class="header-anchor" href="#-130">#</a> \u521B\u5EFA\u4E00\u4E2A\u6784\u9020\u51FD\u6570</h4><p>\u6DF7\u5408\u63A5\u53D7\u4E00\u4E2A\u7C7B\uFF0C\u5E76\u4E14\u4F7F\u7528\u65B0\u529F\u80FD\u6269\u5C55\u5B83\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u5B9A\u4E49\u6784\u9020\u51FD\u6570\u7684\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Constructor<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">;</span>

</code></pre></div><h4 id="-131" tabindex="-1"><a class="header-anchor" href="#-131">#</a> \u6269\u5C55\u4E00\u4E2A\u7C7B\u5E76\u4E14\u8FD4\u56DE\u5B83</h4><div class="language-ts"><pre><code><span class="token comment">// \u6DFB\u52A0\u5C5E\u6027\u7684\u6DF7\u5408\u4F8B\u5B50</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">TimesTamped</span><span class="token generic class-name"><span class="token operator">&lt;</span>TBase <span class="token keyword">extends</span> Constructor<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Base<span class="token operator">:</span> TBase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">class</span> <span class="token class-name"><span class="token keyword">extends</span></span> Base <span class="token punctuation">{</span>
    timestamp <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="thistype" tabindex="-1"><a class="header-anchor" href="#thistype">#</a> ThisType</h3><p>\u901A\u8FC7 <code>ThisType</code> \u6211\u4EEC\u53EF\u4EE5\u5728\u5BF9\u8C61\u5B57\u9762\u91CF\u4E2D\u952E\u5165 <code>this</code>\uFF0C\u5E76\u63D0\u4F9B\u901A\u8FC7\u4E0A\u4E0B\u6587\u7C7B\u578B\u63A7\u5236 <code>this</code> \u7C7B\u578B\u7684\u4FBF\u6377\u65B9\u5F0F\u3002\u5B83\u53EA\u6709\u5728 <code>--noImplicitThis</code> \u7684\u9009\u9879\u4E0B\u624D\u6709\u6548\u3002</p><p>\u73B0\u5728\uFF0C\u5728\u5BF9\u8C61\u5B57\u9762\u91CF\u65B9\u6CD5\u4E2D\u7684 <code>this</code> \u7C7B\u578B\uFF0C\u5C06\u7531\u4EE5\u4E0B\u51B3\u5B9A\uFF1A</p><ul><li>\u5982\u679C\u8FD9\u4E2A\u65B9\u6CD5\u663E\u5F0F\u6307\u5B9A\u4E86 <code>this</code> \u53C2\u6570\uFF0C\u90A3\u4E48 <code>this</code> \u5177\u6709\u8BE5\u53C2\u6570\u7684\u7C7B\u578B\u3002\uFF08\u4E0B\u4F8B\u5B50\u4E2D <code>bar</code>\uFF09</li><li>\u5426\u5219\uFF0C\u5982\u679C\u65B9\u6CD5\u7531\u5E26 <code>this</code> \u53C2\u6570\u7684\u7B7E\u540D\u8FDB\u884C\u4E0A\u4E0B\u6587\u952E\u5165\uFF0C\u90A3\u4E48 <code>this</code> \u5177\u6709\u8BE5\u53C2\u6570\u7684\u7C7B\u578B\u3002\uFF08\u4E0B\u4F8B\u5B50\u4E2D <code>foo</code>\uFF09</li><li>\u5426\u5219\uFF0C\u5982\u679C <code>--noImplicitThis</code> \u9009\u9879\u5DF2\u7ECF\u542F\u7528\uFF0C\u5E76\u4E14\u5BF9\u8C61\u5B57\u9762\u91CF\u4E2D\u5305\u542B\u7531 <code>ThisType&lt;T&gt;</code> \u952E\u5165\u7684\u4E0A\u4E0B\u6587\u7C7B\u578B\uFF0C\u90A3\u4E48 <code>this</code> \u7684\u7C7B\u578B\u4E3A <code>T</code>\u3002</li><li>\u5426\u5219\uFF0C\u5982\u679C <code>--noImplicitThis</code> \u9009\u9879\u5DF2\u7ECF\u542F\u7528\uFF0C\u5E76\u4E14\u5BF9\u8C61\u5B57\u9762\u91CF\u4E2D\u4E0D\u5305\u542B\u7531 <code>ThisType&lt;T&gt;</code> \u952E\u5165\u7684\u4E0A\u4E0B\u6587\u7C7B\u578B\uFF0C\u90A3\u4E48 <code>this</code> \u7684\u7C7B\u578B\u4E3A\u8BE5\u4E0A\u4E0B\u6587\u7C7B\u578B\u3002</li><li>\u5426\u5219\uFF0C\u5982\u679C <code>--noImplicitThis</code> \u9009\u9879\u5DF2\u7ECF\u542F\u7528\uFF0C<code>this</code> \u5177\u6709\u8BE5\u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u7C7B\u578B\u3002</li><li>\u5426\u5219\uFF0C<code>this</code> \u7684\u7C7B\u578B\u4E3A <code>any</code>\u3002</li></ul><p>\u4E00\u4E9B\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// Compile with --noImplicitThis</span>

<span class="token keyword">type</span> <span class="token class-name">Point</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">moveBy</span><span class="token punctuation">(</span>dx<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> dy<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> p<span class="token operator">:</span> Point <span class="token operator">=</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  y<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
  <span class="token function">moveBy</span><span class="token punctuation">(</span>dx<span class="token punctuation">,</span> dy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> dx<span class="token punctuation">;</span> <span class="token comment">// this has type Point</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> dy<span class="token punctuation">;</span> <span class="token comment">// this has type Point</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
  <span class="token function">f</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// { x: string, f(n: number): void }</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>
  <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token comment">// { message: string }</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7C7B\u4F3C\u7684\u65B9\u5F0F\uFF0C\u5F53\u4F7F\u7528 <code>--noImplicitThis</code> \u65F6\uFF0C\u51FD\u6570\u8868\u8FBE\u5F0F\u8D4B\u503C\u7ED9 <code>obj.xxx</code> \u6216\u8005 <code>obj[xxx]</code> \u7684\u76EE\u6807\u65F6\uFF0C\u5728\u51FD\u6570\u4E2D <code>this</code> \u7684\u7C7B\u578B\u5C06\u4F1A\u662F <code>obj</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// Compile with --noImplicitThis</span>

obj<span class="token punctuation">.</span><span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-</span> n<span class="token punctuation">;</span> <span class="token comment">// &#39;this&#39; has same type as &#39;obj&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

obj<span class="token punctuation">[</span><span class="token string">&#39;f&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">-</span> n<span class="token punctuation">;</span> <span class="token comment">// &#39;this&#39; has same type as &#39;obj&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u901A\u8FC7 API \u8F6C\u6362\u53C2\u6570\u7684\u5F62\u5F0F\u6765\u751F\u6210 <code>this</code> \u7684\u503C\u7684\u60C5\u666F\u4E0B\uFF0C\u53EF\u4EE5\u901A\u8FC7\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 <code>ThisType&lt;T&gt;</code> \u6807\u8BB0\u63A5\u53E3\uFF0C\u53EF\u7528\u4E8E\u5728\u4E0A\u4E0B\u6587\u4E2D\u8868\u660E\u8F6C\u6362\u540E\u7684\u7C7B\u578B\u3002\u5C24\u5176\u662F\u5F53\u5B57\u9762\u91CF\u4E2D\u7684\u4E0A\u4E0B\u6587\u7C7B\u578B\u4E3A <code>ThisType&lt;T&gt;</code> \u6216\u8005\u662F\u5305\u542B <code>ThisType&lt;T&gt;</code> \u7684\u4EA4\u96C6\u65F6\uFF0C\u663E\u5F97\u5C24\u4E3A\u6709\u6548\uFF0C\u5BF9\u8C61\u5B57\u9762\u91CF\u65B9\u6CD5\u4E2D <code>this</code> \u7684\u7C7B\u578B\u5373\u4E3A <code>T</code>\u3002</p><div class="language-ts"><pre><code><span class="token comment">// Compile with --noImplicitThis</span>

<span class="token keyword">type</span> <span class="token class-name">ObjectDescriptor<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  data<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">D</span><span class="token punctuation">;</span>
  methods<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">M</span> <span class="token operator">&amp;</span> ThisType<span class="token operator">&lt;</span><span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// Type of &#39;this&#39; in methods is D &amp; M</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeObject</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>desc<span class="token operator">:</span> ObjectDescriptor<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> data<span class="token operator">:</span> object <span class="token operator">=</span> desc<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> methods<span class="token operator">:</span> object <span class="token operator">=</span> desc<span class="token punctuation">.</span>methods <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>data<span class="token punctuation">,</span> <span class="token operator">...</span>methods <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token constant">D</span> <span class="token operator">&amp;</span> <span class="token constant">M</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token function">makeObject</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  methods<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">moveBy</span><span class="token punctuation">(</span>dx<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> dy<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> dx<span class="token punctuation">;</span> <span class="token comment">// Strongly typed this</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> dy<span class="token punctuation">;</span> <span class="token comment">// Strongly typed this</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">moveBy</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C<code>makeObject</code> \u53C2\u6570\u4E2D\u7684\u5BF9\u8C61\u5C5E\u6027 <code>methods</code> \u5177\u6709\u5305\u542B <code>ThisType&lt;D &amp; M&gt;</code> \u7684\u4E0A\u4E0B\u6587\u7C7B\u578B\uFF0C\u56E0\u6B64\u5BF9\u8C61\u4E2D <code>methods</code> \u5C5E\u6027\u4E0B\u7684\u65B9\u6CD5\u7684 <code>this</code> \u7C7B\u578B\u4E3A <code>{ x: number, y: number } &amp; { moveBy(dx: number, dy: number): number }</code>\u3002</p><p><code>ThisType&lt;T&gt;</code> \u7684\u63A5\u53E3\uFF0C\u5728 <code>lib.d.ts</code> \u53EA\u662F\u88AB\u58F0\u660E\u4E3A\u7A7A\u7684\u63A5\u53E3\uFF0C\u9664\u4E86\u53EF\u4EE5\u5728\u5BF9\u8C61\u5B57\u9762\u91CF\u4E0A\u4E0B\u6587\u4E2D\u53EF\u4EE5\u88AB\u8BC6\u522B\u4EE5\u5916\uFF0C\u8BE5\u63A5\u53E3\u7684\u4F5C\u7528\u7B49\u540C\u4E8E\u4EFB\u610F\u7A7A\u63A5\u53E3\u3002</p><h2 id="typescript-6" tabindex="-1"><a class="header-anchor" href="#typescript-6">#</a> TypeScript \u7F16\u8BD1\u539F\u7406</h2><h3 id="-132" tabindex="-1"><a class="header-anchor" href="#-132">#</a> \u6982\u89C8</h3><p>TypeScript \u7F16\u8BD1\u5668\u6E90\u6587\u4EF6\u4F4D\u4E8E <a href="https://github.com/Microsoft/TypeScript/tree/master/src/compiler" target="_blank" rel="noopener noreferrer"><code>src/compiler</code></a> \u76EE\u5F55\u4E0B</p><blockquote><p>\u8BD1\u6CE8\uFF1ATypescript Deep Dive \u4F7F\u7528\u7684\u6E90\u7801\u5E94\u4E3A 2016 \u5E74\u4EE5\u524D\u7684\u6E90\u7801\u3002\u5B66\u4E60\u65F6\u8BF7\u5BF9\u7167\u73B0\u6709\u7684\u6E90\u7801</p></blockquote><p>\u5B83\u5206\u4E3A\u4EE5\u4E0B\u51E0\u4E2A\u5173\u952E\u90E8\u5206\uFF1A</p><ul><li>Scanner \u626B\u63CF\u5668\uFF08<code>scanner.ts</code>\uFF09</li><li>Parser \u89E3\u6790\u5668\uFF08<code>parser.ts\uFF09</code></li><li>Binder \u7ED1\u5B9A\u5668\uFF08<code>binder.ts\uFF09</code></li><li>Checker \u68C0\u67E5\u5668\uFF08<code>checker.ts</code>\uFF09</li><li>Emitter \u53D1\u5C04\u5668\uFF08<code>emitter.ts</code>\uFF09</li></ul><p>\u6BCF\u4E2A\u90E8\u5206\u5728\u6E90\u6587\u4EF6\u4E2D\u5747\u6709\u72EC\u7ACB\u6587\u4EF6\uFF0C\u672C\u7AE0\u7A0D\u540E\u4F1A\u5BF9\u8FD9\u4E9B\u90E8\u5206\u505A\u89E3\u91CA\u3002</p><h4 id="byots" tabindex="-1"><a class="header-anchor" href="#byots">#</a> BYOTS</h4><p>\u6211\u4EEC\u6709\u4E2A\u540D\u4E3A <a href="https://github.com/basarat/byots" target="_blank" rel="noopener noreferrer">Bring Your Own TypeScript (BYOTS)</a> \u7684\u9879\u76EE\uFF0C\u901A\u8FC7\u66B4\u9732\u5185\u90E8\u63A5\u53E3\u8BA9\u7F16\u8BD1\u5668 API \u4F7F\u7528\u8D77\u6765\u66F4\u7B80\u5355\u3002\u4F60\u53EF\u4EE5\u5728\u5168\u5C40\u8303\u56F4\u4E0A\u66B4\u9732\u4F60 TypeScript \u5E94\u7528\u7684\u672C\u5730\u53D8\u91CF\u3002</p><h4 id="-133" tabindex="-1"><a class="header-anchor" href="#-133">#</a> \u8BED\u6CD5\u548C\u8BED\u4E49</h4><p><strong>\u8BED\u6CD5</strong>\u6B63\u786E\u5E76\u4E0D\u610F\u5473\u7740\u8BED\u4E49\u4E0A\u4E5F\u6B63\u786E\u3002\u4E0B\u9762\u7684 TypeScript \u4EE3\u7801\uFF0C\u8BED\u6CD5\u5408\u6CD5\uFF0C\u4F46\u662F\u8BED\u4E49\u5374\u4E0D\u6B63\u786E</p><div class="language-ts"><pre><code><span class="token keyword">var</span> foo<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token string">&#39;not a number&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p><code>\u8BED\u4E49</code> \u4ECE\u81EA\u7136\u8BED\u8A00\u89D2\u5EA6\u610F\u5473\u7740\u6709\u610F\u4E49\uFF0C\u7406\u89E3\u8FD9\u4E2A\u6982\u5FF5\u5BF9\u4F60\u5F88\u6709\u7528\u3002</p><h4 id="-134" tabindex="-1"><a class="header-anchor" href="#-134">#</a> \u5904\u7406\u6982\u89C8</h4><p>\u4EE5\u4E0B\u6F14\u793A\u7B80\u5355\u8BF4\u660E TypeScript \u7F16\u8BD1\u5668\u5982\u4F55\u5C06\u4E0A\u8FF0\u51E0\u4E2A\u5173\u952E\u90E8\u5206\u7EC4\u5408\u5728\u4E00\u8D77\uFF1A</p><div class="language-shell"><pre><code>SourceCode\uFF08\u6E90\u7801\uFF09 ~~ \u626B\u63CF\u5668 ~~<span class="token operator">&gt;</span> Token \u6D41
</code></pre></div><div class="language-shell"><pre><code>Token \u6D41 ~~ \u89E3\u6790\u5668 ~~<span class="token operator">&gt;</span> AST\uFF08\u62BD\u8C61\u8BED\u6CD5\u6811\uFF09
</code></pre></div><div class="language-shell"><pre><code>AST ~~ \u7ED1\u5B9A\u5668 ~~<span class="token operator">&gt;</span> Symbols\uFF08\u7B26\u53F7\uFF09
</code></pre></div><p>\u7B26\u53F7\uFF08<code>Symbol</code>\uFF09\u662F TypeScript \u8BED\u4E49\u7CFB\u7EDF\u7684\u4E3B\u8981\u6784\u9020\u5757\u3002\u5982\u4E0A\u6240\u793A\uFF0C\u7B26\u53F7\u662F\u7ED1\u5B9A\u7684\u7ED3\u679C\u3002\u7B26\u53F7\u5C06 AST \u4E2D\u7684\u58F0\u660E\u8282\u70B9\u4E0E\u76F8\u540C\u5B9E\u4F53\u7684\u5176\u4ED6\u58F0\u660E\u76F8\u8FDE\u3002</p><p>\u7B26\u53F7\u548C AST \u662F\u68C0\u67E5\u5668\u7528\u6765\u9A8C\u8BC1\u6E90\u4EE3\u7801\u8BED\u4E49\u7684</p><div class="language-shell"><pre><code>AST + \u7B26\u53F7 ~~ \u68C0\u67E5\u5668 ~~<span class="token operator">&gt;</span> \u7C7B\u578B\u9A8C\u8BC1
</code></pre></div><p>\u6700\u540E\uFF0C\u9700\u8981\u8F93\u51FA JavaScript \u65F6\uFF1A</p><div class="language-shell"><pre><code>AST + \u68C0\u67E5\u5668 ~~ \u53D1\u5C04\u5668 ~~<span class="token operator">&gt;</span> JavaScript \u4EE3\u7801
</code></pre></div><p>TypeScript \u7F16\u8BD1\u5668\u4E2D\u8FD8\u6709\u4E00\u4E9B\u5176\u4ED6\u6587\u4EF6\uFF0C\u4E3A\u6211\u4EEC\u63A5\u4E0B\u6765\u4ECB\u7ECD\u7684\u5F88\u591A\u5173\u952E\u90E8\u5206\u63D0\u4F9B\u5B9E\u7528\u5DE5\u5177\u3002</p><h4 id="utilities" tabindex="-1"><a class="header-anchor" href="#utilities">#</a> \u6587\u4EF6\uFF1AUtilities</h4><p><code>core.ts</code> \uFF1ATypeScript \u7F16\u8BD1\u5668\u4F7F\u7528\u7684\u6838\u5FC3\u5DE5\u5177\u96C6\uFF0C\u91CD\u8981\u7684\u6709\uFF1A</p><ul><li><code>let objectAllocator: ObjectAllocator</code> \u662F\u4E00\u4E2A\u5B9A\u4E49\u4E3A\u5168\u5C40\u5355\u4F8B\u7684\u53D8\u91CF\u3002\u63D0\u4F9B\u4EE5\u4E0B\u5B9A\u4E49\uFF1A <ul><li><code>getNodeConstructor</code>\uFF08\u8282\u70B9\u4F1A\u5728\u89E3\u6790\u5668 / AST \u4E2D\u4ECB\u7ECD\uFF09</li><li><code>getSymbolConstructor</code>\uFF08\u7B26\u53F7\u4F1A\u5728\u7ED1\u5B9A\u5668\u4E2D\u4ECB\u7ECD\uFF09</li><li><code>getTypeConstructor</code>\uFF08\u7C7B\u578B\u4F1A\u5728\u68C0\u67E5\u5668\u4E2D\u4ECB\u7ECD\uFF09</li><li><code>getSignatureConstructor</code>\uFF08\u7B7E\u540D\u662F\u7D22\u5F15\uFF0C\u8C03\u7528\u548C\u6784\u9020\u7B7E\u540D\uFF09</li></ul></li></ul><h4 id="-135" tabindex="-1"><a class="header-anchor" href="#-135">#</a> \u6587\u4EF6\uFF1A\u5173\u952E\u6570\u636E\u7ED3\u6784</h4><p><code>types.ts</code> \u5305\u542B\u6574\u4E2A\u7F16\u8BD1\u5668\u4E2D\u4F7F\u7528\u7684\u5173\u952E\u6570\u636E\u7ED3\u6784\u548C\u63A5\u53E3\uFF0C\u8FD9\u91CC\u5217\u51FA\u4E00\u4E9B\u5173\u952E\u90E8\u5206\uFF1A</p><ul><li><code>SyntaxKind</code> AST \u8282\u70B9\u7C7B\u578B\u901A\u8FC7 <code>SyntaxKind</code> \u679A\u4E3E\u8FDB\u884C\u8BC6\u522B</li><li><code>TypeChecker</code> \u7C7B\u578B\u68C0\u67E5\u5668\u63D0\u4F9B\u6B64\u63A5\u53E3</li><li><code>CompilerHost</code> \u7528\u4E8E\u7A0B\u5E8F\uFF08Program\uFF09\u548C\u7CFB\u7EDF\u4E4B\u95F4\u7684\u4EA4\u4E92</li><li><code>Node</code> AST \u8282\u70B9</li></ul><h4 id="-136" tabindex="-1"><a class="header-anchor" href="#-136">#</a> \u6587\u4EF6\uFF1A\u7CFB\u7EDF</h4><p><code>system.ts</code>\uFF0CTypeScript \u7F16\u8BD1\u5668\u4E0E\u64CD\u4F5C\u7CFB\u7EDF\u7684\u6240\u6709\u4EA4\u4E92\u5747\u901A\u8FC7 <code>System</code> \u63A5\u53E3\u8FDB\u884C\u3002\u63A5\u53E3\u53CA\u5176\u5B9E\u73B0\uFF08<code>WScript</code> \u548C <code>Node</code>\uFF09 \u5747\u5B9A\u4E49\u5728 <code>system.ts</code> \u4E2D\u3002\u4F60\u53EF\u4EE5\u5C06\u5176\u89C6\u4E3A<strong>\u64CD\u4F5C\u73AF\u5883\uFF08OE, Operating Environment\uFF09</strong>\u3002</p><p>\u73B0\u5728\u5BF9\u4E3B\u8981\u6587\u4EF6\u6709\u4E00\u4E2A\u6574\u4F53\u4E86\u89E3\u4E86\uFF0C\u6211\u4EEC\u7EE7\u7EED\u4ECB\u7ECD\u7A0B\u5E8F\uFF08<code>Program</code>\uFF09\u7684\u6982\u5FF5</p><h3 id="-137" tabindex="-1"><a class="header-anchor" href="#-137">#</a> \u7A0B\u5E8F</h3><p>\u7A0B\u5E8F\u5B9A\u4E49\u5728 <code>program.ts</code> \u4E2D\u3002<a href="#%E7%BC%96%E8%AF%91%E4%B8%8A%E4%B8%8B%E6%96%87">\u7F16\u8BD1\u4E0A\u4E0B\u6587</a>\u5728 TypeScript \u7F16\u8BD1\u5668\u4E2D\u88AB\u89C6\u4E3A\u4E00\u4E2A <code>Program</code>\uFF0C\u5B83\u5305\u542B <code>SourceFile</code> \u548C\u7F16\u8BD1\u9009\u9879</p><h4 id="compilerhost" tabindex="-1"><a class="header-anchor" href="#compilerhost">#</a> <code>CompilerHost</code> \u7684\u4F7F\u7528</h4><p>CompilerHost \u662F\u4E0E\u64CD\u4F5C\u73AF\u5883\uFF08OE, Operating Enviornment\uFF09\u8FDB\u884C\u4EA4\u4E92\u7684\u673A\u5236\uFF1A</p><p><code>Program</code> -\u4F7F\u7528-&gt; <code>CompilerHost</code> -\u4F7F\u7528-&gt; <code>System</code></p><p>\u7528 <code>CompilerHost</code> \u4F5C\u4E2D\u95F4\u5C42\u7684\u539F\u56E0\u662F\u53EF\u4EE5\u8BA9\u63A5\u53E3\u5BF9 <code>Program</code> \u7684\u9700\u6C42\u8FDB\u884C\u7EC6\u7C92\u5EA6\u7684\u8C03\u6574\uFF0C\u800C\u65E0\u9700\u8003\u8651\u64CD\u4F5C\u73AF\u5883\u7684\u9700\u6C42\u3002\uFF08\u4F8B\u5982\uFF1A<code>Program</code> \u65E0\u9700\u5173\u5FC3 <code>System</code> \u7684 <code>fileExists</code> \u51FD\u6570\uFF09</p><p>\u5BF9<code>System</code>\u800C\u8A00\u8FD8\u6709\u5176\u4ED6\u7684\u4F7F\u7528\u8005\uFF08\u6BD4\u5982\u6D4B\u8BD5\uFF09</p><h4 id="sourcefile" tabindex="-1"><a class="header-anchor" href="#sourcefile">#</a> SourceFile</h4><p>\u7A0B\u5E8F\u6709\u4E2A API\uFF0C\u7528\u4E8E\u83B7\u53D6 SourceFile\uFF1A<code>getSourceFiles(): SourceFile[];</code>\u3002\u5F97\u5230\u7684\u6BCF\u4E2A\u5143\u7D20\u5747\u662F\u4E00\u68F5\u62BD\u8C61\u8BED\u6CD5\u6811\u7684\u6839\u8282\u70B9\uFF08\u79F0\u505A <code>SourceFile</code>\uFF09</p><h3 id="-138" tabindex="-1"><a class="header-anchor" href="#-138">#</a> \u62BD\u8C61\u8BED\u6CD5\u6811</h3><h4 id="node" tabindex="-1"><a class="header-anchor" href="#node">#</a> Node \u8282\u70B9</h4><p>\u8282\u70B9\u662F\u62BD\u8C61\u8BED\u6CD5\u6811\uFF08AST\uFF09 \u7684\u57FA\u672C\u6784\u9020\u5757\u3002\u8BED\u6CD5\u4E0A\uFF0C\u901A\u5E38 <code>Node</code> \u8868\u793A\u975E\u672B\u7AEF\uFF08non-terminals\uFF09\u8282\u70B9\u3002\u4F46\u662F\uFF0C\u6709\u4E9B\u672B\u7AEF\u8282\u70B9\uFF0C\u5982\uFF1A\u6807\u8BC6\u7B26\u548C\u5B57\u9762\u91CF\u4E5F\u4F1A\u4FDD\u7559\u5728\u6811\u4E2D\u3002</p><p>AST \u8282\u70B9\u6587\u6863\u7531\u4E24\u4E2A\u5173\u952E\u90E8\u5206\u6784\u6210\u3002\u4E00\u662F\u8282\u70B9\u7684 <code>SyntaxKind</code> \u679A\u4E3E\uFF0C\u7528\u4E8E\u6807\u8BC6 AST \u4E2D\u7684\u7C7B\u578B\u3002\u4E8C\u662F\u5176\u63A5\u53E3\uFF0C\u5373\u5B9E\u4F8B\u5316 AST \u65F6\u8282\u70B9\u63D0\u4F9B\u7684 API\u3002</p><p>\u8FD9\u91CC\u662F <code>interface Node</code> \u7684\u4E00\u4E9B\u5173\u952E\u6210\u5458\uFF1A</p><ul><li><code>TextRange</code> \u6807\u8BC6\u8BE5\u8282\u70B9\u5728\u6E90\u6587\u4EF6\u4E2D\u7684\u8D77\u6B62\u4F4D\u7F6E\u3002</li><li><code>parent?: Node</code> \u5F53\u524D\u8282\u70B9\uFF08\u5728 AST \u4E2D\uFF09\u7684\u7236\u8282\u70B9</li></ul><p><code>Node</code> \u8FD8\u6709\u4E00\u4E9B\u5176\u4ED6\u7684\u6210\u5458\uFF0C\u6807\u5FD7\uFF08flags\uFF09\u548C\u4FEE\u9970\u7B26\uFF08modifiers\uFF09\u7B49\u3002\u4F60\u53EF\u4EE5\u5728\u6E90\u7801\u4E2D\u641C\u7D22 <code>interface Node</code> \u6765\u67E5\u770B\uFF0C\u800C\u4E0A\u9762\u63D0\u5230\u5BF9\u8282\u70B9\u7684\u904D\u5386\u662F\u975E\u5E38\u91CD\u8981\u7684\u3002</p><h5 id="sourcefile-1" tabindex="-1"><a class="header-anchor" href="#sourcefile-1">#</a> SourceFile</h5><ul><li><code>SyntaxKind.SourceFile</code></li><li><code>interface SourceFile</code></li></ul><p>\u6BCF\u4E2A <code>SourceFile</code> \u90FD\u662F\u4E00\u68F5 AST \u7684\u9876\u7EA7\u8282\u70B9\uFF0C\u5B83\u4EEC\u5305\u542B\u5728 <code>Program</code> \u4E2D\u3002</p><h4 id="ast" tabindex="-1"><a class="header-anchor" href="#ast">#</a> AST \u6280\u5DE7\uFF1A\u8BBF\u95EE\u5B50\u8282\u70B9</h4><p>\u6709\u4E2A\u5DE5\u5177\u51FD\u6570 <code>ts.forEachChild</code>\uFF0C\u53EF\u4EE5\u7528\u6765\u8BBF\u95EE AST \u4EFB\u4E00\u8282\u70B9\u7684\u6240\u6709\u5B50\u8282\u70B9\u3002</p><p>\u4E0B\u9762\u662F\u7B80\u5316\u7684\u4EE3\u7801\u7247\u6BB5\uFF0C\u7528\u4E8E\u6F14\u793A\u5982\u4F55\u5DE5\u4F5C\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">forEachChild</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">,</span> <span class="token function-variable function">cbNode</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">,</span> cbNodeArray<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>nodes<span class="token operator">:</span> Node<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>BinaryExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">visitNode</span><span class="token punctuation">(</span>cbNode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>BinaryExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token function">visitNode</span><span class="token punctuation">(</span>cbNode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>BinaryExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>operatorToken<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token function">visitNode</span><span class="token punctuation">(</span>cbNode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>BinaryExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>IfStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">visitNode</span><span class="token punctuation">(</span>cbNode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>IfStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token function">visitNode</span><span class="token punctuation">(</span>cbNode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>IfStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>thenStatement<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token function">visitNode</span><span class="token punctuation">(</span>cbNode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>IfStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>elseStatement<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// .... \u66F4\u591A</span>
</code></pre></div><p>\u8BE5\u51FD\u6570\u4E3B\u8981\u68C0\u67E5 <code>node.kind</code> \u5E76\u636E\u6B64\u5224\u65AD node \u7684\u63A5\u53E3\uFF0C\u7136\u540E\u5728\u5176\u5B50\u8282\u70B9\u4E0A\u8C03\u7528 <code>cbNode</code>\u3002\u4F46\u662F\uFF0C\u8981\u6CE8\u610F\u8BE5\u51FD\u6570\u4E0D\u4F1A\u4E3A<strong>\u6240\u6709</strong>\u5B50\u8282\u70B9\u8C03\u7528 <code>visitNode</code>\uFF08\u4F8B\u5982\uFF1ASyntaxKind.SemicolonToken\uFF09\u3002\u60F3\u83B7\u5F97\u67D0 AST \u8282\u70B9\u7684<strong>\u6240\u6709</strong>\u5B50\u8282\u70B9\uFF0C\u53EA\u8981\u8C03\u7528\u8BE5\u8282\u70B9\u7684\u6210\u5458\u51FD\u6570 <code>.getChildren</code>\u3002</p><p>\u5982\u4E0B\u51FD\u6570\u4F1A\u6253\u5370 AST \u8282\u70B9\u8BE6\u7EC6\u4FE1\u606F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">printAllChildren</span><span class="token punctuation">(</span>node<span class="token operator">:</span> ts<span class="token punctuation">.</span>Node<span class="token punctuation">,</span> depth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>depth <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;----&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">syntaxKindToName</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>kind<span class="token punctuation">)</span><span class="token punctuation">,</span> node<span class="token punctuation">.</span>pos<span class="token punctuation">,</span> node<span class="token punctuation">.</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
  depth<span class="token operator">++</span><span class="token punctuation">;</span>
  node<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> <span class="token function">printAllChildren</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> depth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6211\u4EEC\u8FDB\u4E00\u6B65\u8BA8\u8BBA\u89E3\u6790\u5668\u65F6\u4F1A\u770B\u5230\u8BE5\u51FD\u6570\u7684\u4F7F\u7528\u793A\u4F8B\u3002</p><h4 id="ast-syntaxkind" tabindex="-1"><a class="header-anchor" href="#ast-syntaxkind">#</a> AST \u6280\u5DE7\uFF1ASyntaxKind \u679A\u4E3E</h4><p><code>SyntaxKind</code> \u88AB\u5B9A\u4E49\u4E3A\u4E00\u4E2A\u5E38\u91CF\u679A\u4E3E\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token keyword">enum</span> SyntaxKind <span class="token punctuation">{</span>
  Unknown<span class="token punctuation">,</span>
  EndOfFileToken<span class="token punctuation">,</span>
  SingleLineCommentTrivia<span class="token punctuation">,</span>
  <span class="token comment">// ... \u66F4\u591A</span>
</code></pre></div><p>\u8FD9\u662F\u4E2A<a href="#%E5%B8%B8%E9%87%8F%E6%9E%9A%E4%B8%BE">\u5E38\u91CF\u679A\u4E3E</a>\uFF0C\u65B9\u4FBF\u5185\u8054\uFF08\u4F8B\u5982\uFF1A<code>ts.SyntaxKind.EndOfFileToken</code> \u4F1A\u53D8\u4E3A <code>1</code>\uFF09\uFF0C\u8FD9\u6837\u5728\u4F7F\u7528 AST \u65F6\u5C31\u4E0D\u4F1A\u6709\u5904\u7406\u5F15\u7528\u7684\u989D\u5916\u5F00\u9500\u3002\u4F46\u7F16\u8BD1\u65F6\u9700\u8981\u4F7F\u7528 --preserveConstEnums \u7F16\u8BD1\u6807\u5FD7\uFF0C\u4EE5\u4FBF\u679A\u4E3E<strong>\u5728\u8FD0\u884C\u65F6\u4ECD\u53EF\u7528</strong>\u3002JavaScript \u4E2D\u4F60\u4E5F\u53EF\u4EE5\u6839\u636E\u9700\u8981\u4F7F\u7528 <code>ts.SyntaxKind.EndOfFileToken</code>\u3002\u53E6\u5916\uFF0C\u53EF\u4EE5\u7528\u4EE5\u4E0B\u51FD\u6570\uFF0C\u5C06\u679A\u4E3E\u6210\u5458\u8F6C\u5316\u4E3A\u53EF\u8BFB\u7684\u5B57\u7B26\u4E32\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">syntaxKindToName</span><span class="token punctuation">(</span>kind<span class="token operator">:</span> ts<span class="token punctuation">.</span>SyntaxKind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>ts<span class="token punctuation">)</span><span class="token punctuation">.</span>SyntaxKind<span class="token punctuation">[</span>kind<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="ast-1" tabindex="-1"><a class="header-anchor" href="#ast-1">#</a> AST \u6742\u9879</h4><p>\u6742\u9879\uFF08Trivia\uFF09\u662F\u6307\u6E90\u6587\u672C\u4E2D\u5BF9\u6B63\u5E38\u7406\u89E3\u4EE3\u7801\u4E0D\u592A\u91CD\u8981\u7684\u90E8\u5206\uFF0C\u4F8B\u5982\uFF1A\u7A7A\u767D\uFF0C\u6CE8\u91CA\uFF0C\u51B2\u7A81\u6807\u8BB0\u3002\uFF08\u4E3A\u4E86\u4FDD\u6301\u8F7B\u91CF\uFF09\u6742\u9879<strong>\u4E0D\u4F1A\u5B58\u50A8</strong>\u5728 AST \u4E2D\u3002\u4F46\u662F\u53EF\u4EE5\u89C6\u9700\u8981\u4F7F\u7528\u4E00\u4E9B <code>ts.*</code> API \u6765\u83B7\u53D6\u3002</p><p>\u5C55\u793A\u8FD9\u4E9B API \u524D\uFF0C\u4F60\u9700\u8981\u7406\u89E3\u4EE5\u4E0B\u5185\u5BB9\uFF1A</p><h5 id="-139" tabindex="-1"><a class="header-anchor" href="#-139">#</a> \u6742\u9879\u6240\u6709\u6743</h5><p>\u901A\u5E38\uFF1A</p><ul><li>token \u62E5\u6709\u5B83\u540E\u9762 \u540C\u4E00\u884C \u5230\u4E0B\u4E00\u4E2A token \u4E4B\u524D\u7684\u6240\u6709\u6742\u9879</li><li>\u8BE5\u884C\u4E4B\u540E\u7684\u6CE8\u91CA\u90FD\u4E0E\u4E0B\u4E2A\u7684 token \u76F8\u5173</li></ul><p>\u5BF9\u4E8E\u6587\u4EF6\u4E2D\u7684\u524D\u5BFC\uFF08leading\uFF09\u548C\u7ED3\u675F\uFF08ending\uFF09\u6CE8\u91CA\uFF1A</p><ul><li>\u6E90\u6587\u4EF6\u4E2D\u7684\u7B2C\u4E00\u4E2A token \u62E5\u6709\u6240\u6709\u5F00\u59CB\u7684\u6742\u9879</li><li>\u800C\u6587\u4EF6\u6700\u540E\u7684\u4E00\u4E9B\u5217\u6742\u9879\u5219\u9644\u52A0\u5230\u6587\u4EF6\u7ED3\u675F\u7B26\u4E0A\uFF0C\u8BE5 token \u957F\u5EA6\u4E3A 0</li></ul><h5 id="api" tabindex="-1"><a class="header-anchor" href="#api">#</a> \u6742\u9879 API</h5><p>\u6CE8\u91CA\u5728\u591A\u6570\u57FA\u672C\u4F7F\u7528\u4E2D\uFF0C\u90FD\u662F\u8BA9\u4EBA\u5173\u6CE8\u7684\u6742\u9879\u3002\u8282\u70B9\u7684\u6CE8\u91CA\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u51FD\u6570\u83B7\u53D6\uFF1A</p><table><thead><tr><th style="text-align:center;">\u51FD\u6570</th><th style="text-align:center;">\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ts.getLeadingCommentRanges</code></td><td style="text-align:center;">\u7ED9\u5B9A\u6E90\u6587\u672C\u53CA\u5176\u4F4D\u7F6E\uFF0C\u8FD4\u56DE\u7ED9\u5B9A\u4F4D\u7F6E\u540E\u7B2C\u4E00\u4E2A\u6362\u884C\u7B26\u5230 token \u672C\u8EAB\u4E4B\u95F4\u7684\u6CE8\u91CA\u8303\u56F4\uFF08\u53EF\u80FD\u9700\u8981\u7ED3\u5408 <code>ts.Node.getFullStart</code> \u4F7F\u7528\uFF09\u3002</td></tr><tr><td style="text-align:center;"><code>ts.getTrailingCommentRanges</code></td><td style="text-align:center;">\u7ED9\u5B9A\u6E90\u6587\u672C\u53CA\u5176\u4F4D\u7F6E\uFF0C\u8FD4\u56DE\u7ED9\u5B9A\u4F4D\u7F6E\u540E\u7B2C\u4E00\u4E2A\u6362\u884C\u7B26\u4E4B\u524D\u7684\u6CE8\u91CA\u8303\u56F4\uFF08\u53EF\u80FD\u9700\u8981\u7ED3\u5408 <code>ts.Node.getEnd</code> \u4F7F\u7528\uFF09\u3002</td></tr></tbody></table><p>\u5047\u8BBE\u4E0B\u9762\u662F\u67D0\u4E2A\u6E90\u6587\u4EF6\u7684\u4E00\u90E8\u5206\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">debugger</span><span class="token punctuation">;</span><span class="token comment">/*hello*/</span>
    <span class="token comment">//bye</span>
  <span class="token comment">/*hi*/</span>    <span class="token keyword">function</span>
</code></pre></div><p>\u5BF9 <code>function</code> <code>\u800C\u8A00\uFF0CgetLeadingCommentRanges</code> \u4EC5\u8FD4\u56DE\u6700\u540E\u7684\u4E24\u4E2A\u6CE8\u91CA <code>//bye</code> \u548C <code>/*hi*/</code>\u3002 \u53E6\u5916\uFF0C\u800C\u5728 <code>debugger</code> \u8BED\u53E5\u7ED3\u675F\u4F4D\u7F6E\u8C03\u7528 <code>getTrailingCommentRanges</code> \u4F1A\u5F97\u5230\u6CE8\u91CA <code>/*hello*/</code>\u3002</p><h5 id="token-start-full-start" tabindex="-1"><a class="header-anchor" href="#token-start-full-start">#</a> Token Start \u548C Full Start \u4F4D\u7F6E</h5><p>\u8282\u70B9\u6709\u6240\u8C13\u7684 &quot;token start&quot; \u548C &quot;full start&quot; \u4F4D\u7F6E\u3002</p><ul><li>Token Start\uFF1A\u6BD4\u8F83\u81EA\u7136\u7684\u7248\u672C\uFF0C\u5373\u6587\u4EF6\u4E2D\u4E00\u4E2A token \u7684\u6587\u672C\u5F00\u59CB\u7684\u4F4D\u7F6E\u3002</li><li>Full Start\uFF1A\u662F\u6307\u626B\u63CF\u5668\u4ECE\u4E0A\u4E00\u4E2A\u91CD\u8981 token \u5F00\u59CB\u626B\u63CF\u7684\u4F4D\u7F6E\u3002</li></ul><p>AST \u8282\u70B9\u6709 <code>getStart</code> \u548C <code>getFullStart</code> API \u7528\u4E8E\u83B7\u53D6\u4EE5\u4E0A\u4E24\u79CD\u4F4D\u7F6E\uFF0C\u8FD8\u662F\u8FD9\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">debugger</span><span class="token punctuation">;</span><span class="token comment">/*hello*/</span>
    <span class="token comment">//bye</span>
  <span class="token comment">/*hi*/</span>    <span class="token keyword">function</span>
</code></pre></div><p>\u5BF9 <code>function</code> \u800C\u8A00\uFF0Ctoken start \u5373 <code>function</code> \u7684\u4F4D\u7F6E\uFF0C\u800C <strong>full</strong> start \u662F <code>/*hello*/</code> \u7684\u4F4D\u7F6E\u3002\u8981\u6CE8\u610F\uFF0Cfull start \u751A\u81F3\u4F1A\u5305\u542B\u524D\u4E00\u8282\u70B9\u62E5\u6709\u7684\u6742\u9879\u3002</p><h3 id="-140" tabindex="-1"><a class="header-anchor" href="#-140">#</a> \u626B\u63CF\u5668</h3><p>TypeScript \u626B\u63CF\u5668\u7684\u6E90\u7801\u5747\u4F4D\u4E8E <code>scanner.ts</code>\u3002\u5728\u5185\u90E8\uFF0C\u7531\u89E3\u6790\u5668\u63A7\u5236\u626B\u63CF\u5668\u5C06\u6E90\u7801\u8F6C\u5316\u4E3A\u62BD\u8C61\u8BED\u6CD5\u6811\uFF08AST\uFF09\u3002\u671F\u671B\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-shell"><pre><code>SourceCode ~~ \u626B\u63CF\u5668 ~~<span class="token operator">&gt;</span> Token \u6D41 ~~ \u89E3\u6790\u5668 ~~<span class="token operator">&gt;</span> AST
</code></pre></div><h4 id="-141" tabindex="-1"><a class="header-anchor" href="#-141">#</a> \u89E3\u6790\u5668\u5BF9\u626B\u63CF\u5668\u7684\u4F7F\u7528</h4><p>\u4E3A\u907F\u514D\u91CD\u590D\u521B\u5EFA\u626B\u63CF\u5668\u9020\u6210\u7684\u5F00\u9500\uFF0C<code>parser.ts</code> \u4E2D\u521B\u5EFA\u4E86\u4E00\u4E2A\u626B\u63CF\u5668\u7684<strong>\u5355\u4F8B</strong>\u3002\u89E3\u6790\u5668\u6839\u636E\u9700\u8981\u4F7F\u7528 <code>initializeState</code> \u51FD\u6570\u51C6\u5907\u8BE5\u626B\u63CF\u5668\u3002</p><p>\u4E0B\u9762\u662F\u89E3\u6790\u5668\u4E2D\u7684\u5B9E\u9645\u4EE3\u7801\u7684\u7B80\u5316\u7248\uFF0C\u4F60\u53EF\u4EE5\u8FD0\u884C\u5B83\u6F14\u793A\u4EE5\u4E0A\u6982\u5FF5</p><p><code>code/compiler/scanner/runScanner.ts</code></p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ts <span class="token keyword">from</span> <span class="token string">&#39;ntypescript&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u5355\u4F8B\u626B\u63CF\u5668</span>
<span class="token keyword">const</span> scanner <span class="token operator">=</span> ts<span class="token punctuation">.</span><span class="token function">createScanner</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span>ScriptTarget<span class="token punctuation">.</span>Latest<span class="token punctuation">,</span> <span class="token comment">/* \u5FFD\u7565\u6742\u9879 */</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B64\u51FD\u6570\u4E0E\u521D\u59CB\u5316\u4F7F\u7528\u7684 \`initializeState\` \u51FD\u6570\u76F8\u4F3C</span>
<span class="token keyword">function</span> <span class="token function">initializeState</span><span class="token punctuation">(</span>text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  scanner<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
  scanner<span class="token punctuation">.</span><span class="token function">setOnError</span><span class="token punctuation">(</span><span class="token punctuation">(</span>message<span class="token operator">:</span> ts<span class="token punctuation">.</span>DiagnosticMessage<span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  scanner<span class="token punctuation">.</span><span class="token function">setScriptTarget</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span>ScriptTarget<span class="token punctuation">.</span><span class="token constant">ES5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  scanner<span class="token punctuation">.</span><span class="token function">setLanguageVariant</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span>LanguageVariant<span class="token punctuation">.</span>Standard<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528\u793A\u4F8B</span>
<span class="token function">initializeState</span><span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
var foo = 123;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F00\u59CB\u626B\u63CF</span>
<span class="token keyword">var</span> token <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>token <span class="token operator">!=</span> ts<span class="token punctuation">.</span>SyntaxKind<span class="token punctuation">.</span>EndOfFileToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span><span class="token function">formatSyntaxKind</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  token <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8BE5\u6BB5\u4EE3\u7801\u8F93\u51FA\u4EE5\u4E0B\u5185\u5BB9\uFF1A</p><div class="language-shell"><pre><code>VarKeyword
Identifier
FirstAssignment
FirstLiteralToken
SemicolonToken
</code></pre></div><h4 id="-142" tabindex="-1"><a class="header-anchor" href="#-142">#</a> \u626B\u63CF\u5668\u72B6\u6001</h4><p>\u8C03\u7528 <code>scan</code> \u540E\uFF0C\u626B\u63CF\u5668\u66F4\u65B0\u5176\u5C40\u90E8\u72B6\u6001\uFF08\u626B\u63CF\u4F4D\u7F6E\uFF0C\u5F53\u524D token \u8BE6\u60C5\u7B49\uFF09\u3002\u626B\u63CF\u5668\u63D0\u4F9B\u4E86\u4E00\u7EC4\u5DE5\u5177\u51FD\u6570\u83B7\u53D6\u5F53\u524D\u626B\u63CF\u5668\u72B6\u6001\u3002\u4E0B\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A\u626B\u63CF\u5668\u5E76\u7528\u5B83\u8BC6\u522B token \u4EE5\u53CA token \u5728\u4EE3\u7801\u4E2D\u7684\u4F4D\u7F6E\u3002</p><p><code>code/compiler/scanner/runScannerWithPosition.ts</code></p><div class="language-ts"><pre><code><span class="token comment">// \u4F7F\u7528\u793A\u4F8B</span>
<span class="token function">initializeState</span><span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
var foo = 123;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F00\u59CB\u626B\u63CF</span>
<span class="token keyword">var</span> token <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>token <span class="token operator">!=</span> ts<span class="token punctuation">.</span>SyntaxKind<span class="token punctuation">.</span>EndOfFileToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> currentToken <span class="token operator">=</span> ts<span class="token punctuation">.</span><span class="token function">formatSyntaxKind</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> tokenStart <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">getStartPos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  token <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> tokenEnd <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">getStartPos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>currentToken<span class="token punctuation">,</span> tokenStart<span class="token punctuation">,</span> tokenEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8BE5\u4EE3\u7801\u8F93\u51FA\u4EE5\u4E0B\u5185\u5BB9\uFF1A</p><div class="language-shell"><pre><code>VarKeyword <span class="token number">0</span> <span class="token number">3</span>
Identifier <span class="token number">3</span> <span class="token number">7</span>
FirstAssignment <span class="token number">7</span> <span class="token number">9</span>
FirstLiteralToken <span class="token number">9</span> <span class="token number">13</span>
SemicolonToken <span class="token number">13</span> <span class="token number">14</span>
</code></pre></div><h4 id="-143" tabindex="-1"><a class="header-anchor" href="#-143">#</a> \u72EC\u7ACB\u626B\u63CF\u5668</h4><p>\u5373\u4FBF TypeScript \u89E3\u6790\u5668\u6709\u5355\u4F8B\u626B\u63CF\u5668\uFF0C\u4F60\u4ECD\u53EF\u4EE5\u4F7F\u7528 <code>createScanner</code> \u521B\u5EFA\u72EC\u7ACB\u7684\u626B\u63CF\u5668\uFF0C\u7136\u540E\u53EF\u4EE5\u7528 <code>setText/setTextPos</code> \u968F\u610F\u626B\u63CF\u6587\u4EF6\u7684\u4E0D\u540C\u4F4D\u7F6E\u3002</p><h3 id="-144" tabindex="-1"><a class="header-anchor" href="#-144">#</a> \u89E3\u6790\u5668</h3><p>TypeScript \u89E3\u6790\u5668\u4EE3\u7801\u5747\u4F4D\u4E8E parser.ts \u4E2D\u3002\u5728\u5185\u90E8\uFF0C\u7531\u89E3\u6790\u5668\u63A7\u5236\u626B\u63CF\u5668\u5C06\u6E90\u7801\u8F6C\u5316\u4E3A AST\u3002\u5176\u671F\u671B\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-shell"><pre><code>\u6E90\u7801 ~~ \u626B\u63CF\u5668 ~~<span class="token operator">&gt;</span> Token \u6D41 ~~ \u89E3\u6790\u5668 ~~<span class="token operator">&gt;</span> AST
</code></pre></div><p>\u89E3\u6790\u5668\u5B9E\u73B0\u539F\u7406\u662F\u5355\u4F8B\u6A21\u5F0F\uFF08\u5176\u539F\u56E0\u7C7B\u4F3C\u626B\u63CF\u5668\uFF0C\u5982\u679C\u80FD\u91CD\u65B0\u521D\u59CB\u5316\u5C31\u4E0D\u91CD\u65B0\u6784\u5EFA\uFF09\u3002\u5B9E\u9645\u5B9E\u73B0\u6210 <code>namespace Parser</code>\uFF0C\u5305\u542B\u89E3\u6790\u5668\u7684\u5404\u79CD\u72B6\u6001\u53D8\u91CF\u548C\u5355\u4F8B\u626B\u63CF\u5668\uFF08<code>const scanner</code>\uFF09\u3002\u8BE5\u626B\u63CF\u5668\u7531\u89E3\u6790\u5668\u51FD\u6570\u7BA1\u7406\u3002</p><h4 id="-145" tabindex="-1"><a class="header-anchor" href="#-145">#</a> \u7A0B\u5E8F\u5BF9\u89E3\u6790\u5668\u7684\u4F7F\u7528</h4><p>\u89E3\u6790\u5668\u7531\u7A0B\u5E8F\u95F4\u63A5\u9A71\u52A8\uFF08\u901A\u8FC7\u4E4B\u524D\u63D0\u5230\u8FC7\u7684 <code>CompilerHost</code>\uFF09\u3002\u57FA\u672C\u4E0A\uFF0C\u7B80\u5316\u7684\u8C03\u7528\u6808\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-shell"><pre><code>\u7A0B\u5E8F -<span class="token operator">&gt;</span>
  CompilerHost.getSourceFile -<span class="token operator">&gt;</span>
    <span class="token punctuation">(</span>\u5168\u5C40\u51FD\u6570 parser.ts<span class="token punctuation">)</span>.createSourceFile -<span class="token operator">&gt;</span>
      Parser.parseSourceFile
</code></pre></div><p><code>parseSourceFile</code> \u4E0D\u4EC5\u51C6\u5907\u597D\u89E3\u6790\u5668\u7684\u72B6\u6001\uFF0C\u8FD8\u8C03\u7528 <code>initializeState</code> \u51C6\u5907\u597D\u626B\u63CF\u5668\u7684\u72B6\u6001\u3002\u7136\u540E\u4F7F\u7528 <code>parseSourceFileWorker</code> \u7EE7\u7EED\u89E3\u6790\u6E90\u4EE3\u7801\u3002</p><h4 id="-146" tabindex="-1"><a class="header-anchor" href="#-146">#</a> \u4F7F\u7528\u793A\u4F8B</h4><p>\u6DF1\u5165\u89E3\u6790\u5668\u7684\u5185\u90E8\u4E4B\u524D\uFF0C\u8FD9\u91CC\u6709\u4E2A\u4F7F\u7528 TypeScript \u89E3\u6790\u5668\u7684\u793A\u4F8B\uFF0C\uFF08\u4F7F\u7528 <code>ts.createSourceFile</code>\uFF09\u83B7\u53D6\u4E00\u4E2A\u6E90\u6587\u4EF6\u7684 AST \u5E76\u6253\u5370\u5B83\u3002</p><p><code>code/compiler/parser/runParser.ts</code></p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ts <span class="token keyword">from</span> <span class="token string">&#39;ntypescript&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">printAllChildren</span><span class="token punctuation">(</span>node<span class="token operator">:</span> ts<span class="token punctuation">.</span>Node<span class="token punctuation">,</span> depth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>depth <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;----&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ts<span class="token punctuation">.</span><span class="token function">formatSyntaxKind</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>kind<span class="token punctuation">)</span><span class="token punctuation">,</span> node<span class="token punctuation">.</span>pos<span class="token punctuation">,</span> node<span class="token punctuation">.</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
  depth<span class="token operator">++</span><span class="token punctuation">;</span>
  node<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> <span class="token function">printAllChildren</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> depth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> sourceCode <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
var foo = 123;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> sourceFile <span class="token operator">=</span> ts<span class="token punctuation">.</span><span class="token function">createSourceFile</span><span class="token punctuation">(</span><span class="token string">&#39;foo.ts&#39;</span><span class="token punctuation">,</span> sourceCode<span class="token punctuation">,</span> ts<span class="token punctuation">.</span>ScriptTarget<span class="token punctuation">.</span><span class="token constant">ES5</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printAllChildren</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8BE5\u6BB5\u4EE3\u7801\u4F1A\u6253\u5370\u4EE5\u4E0B\u5185\u5BB9\uFF1A</p><div class="language-ts"><pre><code>SourceFile <span class="token number">0</span> <span class="token number">14</span>
<span class="token operator">--</span><span class="token operator">--</span> SyntaxList <span class="token number">0</span> <span class="token number">14</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> VariableStatement <span class="token number">0</span> <span class="token number">14</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> VariableDeclarationList <span class="token number">0</span> <span class="token number">13</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> VarKeyword <span class="token number">0</span> <span class="token number">3</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> SyntaxList <span class="token number">3</span> <span class="token number">13</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> VariableDeclaration <span class="token number">3</span> <span class="token number">13</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> Identifier <span class="token number">3</span> <span class="token number">7</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> FirstAssignment <span class="token number">7</span> <span class="token number">9</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> FirstLiteralToken <span class="token number">9</span> <span class="token number">13</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span> SemicolonToken <span class="token number">13</span> <span class="token number">14</span>
<span class="token operator">--</span><span class="token operator">--</span> EndOfFileToken <span class="token number">14</span> <span class="token number">14</span>
</code></pre></div><p>\u5982\u679C\u628A\u5934\u5411\u5DE6\u503E\uFF0C\u8FD9\u4E2A\u770B\u8D77\u6765\u50CF\u68F5\uFF08\u53F3\u4FA7\uFF09\u6811</p><h4 id="-147" tabindex="-1"><a class="header-anchor" href="#-147">#</a> \u89E3\u6790\u5668\u51FD\u6570</h4><p>\u5982\u524D\u6240\u8FF0\uFF0C<code>parseSourceFile</code> \u8BBE\u7F6E\u521D\u59CB\u72B6\u6001\u5E76\u5C06\u5DE5\u4F5C\u4EA4\u7ED9 <code>parseSourceFileWorker</code> \u51FD\u6570\u3002</p><h5 id="parsesourcefileworker" tabindex="-1"><a class="header-anchor" href="#parsesourcefileworker">#</a> <code>parseSourceFileWorker</code></h5><p>\u8BE5\u51FD\u6570\u5148\u521B\u5EFA\u4E00\u4E2A <code>SourceFile</code> AST \u8282\u70B9\uFF0C\u7136\u540E\u4ECE <code>parseStatements</code> \u51FD\u6570\u5F00\u59CB\u89E3\u6790\u6E90\u4EE3\u7801\u3002\u4E00\u65E6\u8FD4\u56DE\u7ED3\u679C\uFF0C\u5C31\u7528\u989D\u5916\u4FE1\u606F\uFF08\u4F8B\u5982 <code>nodeCount</code>, <code>identifierCount</code>\u7B49\uFF09 \u5B8C\u5584 <code>SourceFile</code> \u8282\u70B9\u3002</p><h5 id="parsestatements" tabindex="-1"><a class="header-anchor" href="#parsestatements">#</a> <code>parseStatements</code></h5><p>\u662F\u6700\u91CD\u8981\u7684 <code>parseXXX</code> \u7CFB\u51FD\u6570\u4E4B\u4E00\uFF08\u6982\u5FF5\u63A5\u4E0B\u6765\u4ECB\u7ECD\uFF09\u3002\u5B83\u6839\u636E\u626B\u63CF\u5668\u8FD4\u56DE\u7684\u5F53\u524D token \u6765\u5207\u6362\uFF08\u8C03\u7528\u76F8\u5E94\u7684 <code>parseXXX</code> \u51FD\u6570\uFF09\uFF0C\u4F8B\u5982\uFF1A\u5982\u679C\u5F53\u524D token \u662F\u4E00\u4E2A <code>SemicolonToken</code>\uFF08\u5206\u53F7\u6807\u8BB0\uFF09\uFF0C\u5C31\u4F1A\u8C03\u7528 <code>paserEmptyStatement</code> \u4E3A\u7A7A\u8BED\u53E5\u521B\u5EFA\u4E00\u4E2A AST \u8282\u70B9</p><h5 id="-148" tabindex="-1"><a class="header-anchor" href="#-148">#</a> \u8282\u70B9\u521B\u5EFA</h5><p>\u89E3\u6790\u5668\u6709\u4E00\u7CFB\u5217 <code>parseXXX</code> \u51FD\u6570\u7528\u6765\u521B\u5EFA\u76F8\u5E94\u7C7B\u578B\u4E3AXXX\u7684\u8282\u70B9\uFF0C\u901A\u5E38\u5728\u76F8\u5E94\u7C7B\u578B\u7684\u8282\u70B9\u51FA\u73B0\u65F6\u88AB\uFF08\u5176\u4ED6\u89E3\u6790\u5668\u51FD\u6570\uFF09\u8C03\u7528\u3002\u8BE5\u8FC7\u7A0B\u7684\u5178\u578B\u793A\u4F8B\u662F\u89E3\u6790\u7A7A\u8BED\u53E5\uFF08\u4F8B\u5982 <code>;;;;;;</code>\uFF09\u65F6\u8981\u7528\u7684 <code>parseEmptyStatement()</code> \u51FD\u6570\u3002\u4E0B\u9762\u662F\u5176\u5168\u90E8\u4EE3\u7801\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">parseEmptyStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Statement <span class="token punctuation">{</span>
  <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token operator">&lt;</span>Statement<span class="token operator">&gt;</span><span class="token function">createNode</span><span class="token punctuation">(</span>SyntaxKind<span class="token punctuation">.</span>EmptyStatement<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">parseExpected</span><span class="token punctuation">(</span>SyntaxKind<span class="token punctuation">.</span>SemicolonToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">finishNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5B83\u5C55\u793A\u4E86 3 \u4E2A\u5173\u952E\u51FD\u6570 <code>createNode</code>, <code>parseExpected</code> \u548C <code>finishNode</code>.</p><h6 id="createnode" tabindex="-1"><a class="header-anchor" href="#createnode">#</a> <code>createNode</code></h6><p>\u89E3\u6790\u5668\u51FD\u6570 <code>function createNode(kind: SyntaxKind, pos?: number): Node</code> \u8D1F\u8D23\u521B\u5EFA\u8282\u70B9\uFF0C\u8BBE\u7F6E\u4F20\u5165\u7684 <code>SyntaxKind</code>\uFF08\u8BED\u6CD5\u7C7B\u522B\uFF09\uFF0C\u548C\u521D\u59CB\u4F4D\u7F6E\uFF08\u9ED8\u8BA4\u4F7F\u7528\u5F53\u524D\u626B\u63CF\u5668\u72B6\u6001\u63D0\u4F9B\u7684\u4F4D\u7F6E\u4FE1\u606F\uFF09\u3002</p><h6 id="parseexpected" tabindex="-1"><a class="header-anchor" href="#parseexpected">#</a> <code>parseExpected</code></h6><p>\u89E3\u6790\u5668\u7684 <code>parseExpected</code> \u51FD\u6570 <code>function parseExpected(kind: SyntaxKind, diagnosticMessage?: DiagnosticMessage): boolean</code> \u4F1A\u68C0\u67E5\u89E3\u6790\u5668\u72B6\u6001\u4E2D\u7684\u5F53\u524D token \u662F\u5426\u4E0E\u6307\u5B9A\u7684 <code>SyntaxKind</code> \u5339\u914D\u3002\u5982\u679C\u4E0D\u5339\u914D\uFF0C\u5219\u4F1A\u5411\u4F20\u5165\u7684 <code>diagnosticMessage</code>\uFF08\u8BCA\u65AD\u6D88\u606F\uFF09\u62A5\u544A\uFF0C\u672A\u4F20\u5165\u5219\u521B\u5EFA\u67D0\u79CD\u901A\u7528\u5F62\u5F0F <code>xxx expected</code>\u3002\u8BE5\u51FD\u6570\u5185\u90E8\u7528 <code>parseErrorAtPosition</code> \u51FD\u6570\uFF08\u4F7F\u7528\u626B\u63CF\u4F4D\u7F6E\uFF09\u63D0\u4F9B\u826F\u597D\u7684\u9519\u8BEF\u62A5\u544A\u3002</p><h6 id="finishnode" tabindex="-1"><a class="header-anchor" href="#finishnode">#</a> <code>finishNode</code></h6><p>\u89E3\u6790\u5668\u7684 <code>finishNode</code> \u51FD\u6570 <code>function finishNode&lt;T extends Node&gt;(node: T, end?: number): T</code> \u8BBE\u7F6E\u8282\u70B9\u7684 <code>end</code> \u4F4D\u7F6E\uFF0C\u5E76\u6DFB\u52A0\u4E00\u4E9B\u6709\u7528\u7684\u4FE1\u606F\uFF0C\u4F8B\u5982\u4E0A\u4E0B\u6587\u6807\u5FD7\uFF08<code>parserContextFlags</code>\uFF09\u4EE5\u53CA\u89E3\u6790\u8BE5\u8282\u70B9\u524D\u51FA\u73B0\u7684\u9519\u8BEF\uFF08\u5982\u679C\u6709\u9519\u7684\u8BDD\uFF0C\u5C31\u4E0D\u80FD\u5728\u589E\u91CF\u89E3\u6790\u4E2D\u91CD\u7528\u6B64 AST \u8282\u70B9\uFF09\u3002</p><h3 id="-149" tabindex="-1"><a class="header-anchor" href="#-149">#</a> \u7ED1\u5B9A\u5668</h3><p>\u5927\u591A\u6570\u7684 JavaScript \u8F6C\u8BD1\u5668\uFF08transpiler\uFF09\u90FD\u6BD4 TypeScript \u7B80\u5355\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u51E0\u4E4E\u6CA1\u63D0\u4F9B\u4EE3\u7801\u5206\u6790\u7684\u65B9\u6CD5\u3002\u5178\u578B\u7684 JavaScript \u8F6C\u6362\u5668\u53EA\u6709\u4EE5\u4E0B\u6D41\u7A0B\uFF1A</p><div class="language-shell"><pre><code>\u6E90\u7801 ~~\u626B\u63CF\u5668~~<span class="token operator">&gt;</span> Tokens ~~\u89E3\u6790\u5668~~<span class="token operator">&gt;</span> AST ~~\u53D1\u5C04\u5668~~<span class="token operator">&gt;</span> JavaScript
</code></pre></div><p>\u4E0A\u8FF0\u67B6\u6784\u786E\u5B9E\u5BF9\u4E8E\u7B80\u5316 TypeScript \u751F\u6210 JavaScript \u7684\u7406\u89E3\u6709\u5E2E\u52A9\uFF0C\u4F46\u7F3A\u5931\u4E86\u4E00\u4E2A\u5173\u952E\u529F\u80FD\uFF0C\u5373 TypeScript \u7684\u8BED\u4E49\u7CFB\u7EDF\u3002\u4E3A\u4E86\u534F\u52A9\uFF08\u68C0\u67E5\u5668\u6267\u884C\uFF09\u7C7B\u578B\u68C0\u67E5\uFF0C\u7ED1\u5B9A\u5668\u5C06\u6E90\u7801\u7684\u5404\u90E8\u5206\u8FDE\u63A5\u6210\u4E00\u4E2A\u76F8\u5173\u7684\u7C7B\u578B\u7CFB\u7EDF\uFF0C\u4F9B\u68C0\u67E5\u5668\u4F7F\u7528\u3002\u7ED1\u5B9A\u5668\u7684\u4E3B\u8981\u804C\u8D23\u662F\u521B\u5EFA\u7B26\u53F7\uFF08Symbols\uFF09\u3002</p><h4 id="-150" tabindex="-1"><a class="header-anchor" href="#-150">#</a> \u7B26\u53F7</h4><p>\u7B26\u53F7\u5C06 AST \u4E2D\u7684\u58F0\u660E\u8282\u70B9\u4E0E\u5176\u5B83\u58F0\u660E\u8FDE\u63A5\u5230\u76F8\u540C\u7684\u5B9E\u4F53\u4E0A\u3002\u7B26\u53F7\u662F\u8BED\u4E49\u7CFB\u7EDF\u7684\u57FA\u672C\u6784\u9020\u5757\u3002\u7B26\u53F7\u7684\u6784\u9020\u5668\u5B9A\u4E49\u5728 <code>core.ts</code>\uFF08\u7ED1\u5B9A\u5668\u5B9E\u9645\u4E0A\u901A\u8FC7 <code>objectAllocator.getSymbolConstructor</code> \u6765\u83B7\u53D6\u6784\u9020\u5668\uFF09\u3002\u4E0B\u9762\u662F\u7B26\u53F7\u6784\u9020\u5668\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">Symbol</span><span class="token punctuation">(</span>flags<span class="token operator">:</span> SymbolFlags<span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>flags <span class="token operator">=</span> flags<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>declarations <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>SymbolFlags</code> \u7B26\u53F7\u6807\u5FD7\u662F\u4E2A\u6807\u5FD7\u679A\u4E3E\uFF0C\u7528\u4E8E\u8BC6\u522B\u989D\u5916\u7684\u7B26\u53F7\u7C7B\u522B\uFF08\u4F8B\u5982\uFF1A\u53D8\u91CF\u4F5C\u7528\u57DF\u6807\u5FD7 <code>FunctionScopedVariable</code> \u6216 <code>BlockScopedVariable</code> \u7B49\uFF09</p><h4 id="-151" tabindex="-1"><a class="header-anchor" href="#-151">#</a> \u68C0\u67E5\u5668\u5BF9\u7ED1\u5B9A\u5668\u7684\u4F7F\u7528</h4><p>\u5B9E\u9645\u4E0A\uFF0C\u7ED1\u5B9A\u5668\u88AB\u68C0\u67E5\u5668\u5728\u5185\u90E8\u8C03\u7528\uFF0C\u800C\u68C0\u67E5\u5668\u53C8\u88AB\u7A0B\u5E8F\u8C03\u7528\u3002\u7B80\u5316\u7684\u8C03\u7528\u6808\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code>program<span class="token punctuation">.</span>getTypeChecker <span class="token operator">-</span><span class="token operator">&gt;</span>
  ts<span class="token punctuation">.</span>createTypeChecker\uFF08\u68C0\u67E5\u5668\u4E2D\uFF09<span class="token operator">-</span><span class="token operator">&gt;</span>
    initializeTypeChecker\uFF08\u68C0\u67E5\u5668\u4E2D\uFF09 <span class="token operator">-</span><span class="token operator">&gt;</span>
      <span class="token keyword">for</span> each SourceFile <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ts.bindSourceFile</span><span class="token template-punctuation string">\`</span></span>\uFF08\u7ED1\u5B9A\u5668\u4E2D\uFF09
      <span class="token comment">// followed by</span>
      <span class="token keyword">for</span> each SourceFile <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ts.mergeSymbolTable</span><span class="token template-punctuation string">\`</span></span>\uFF08\u68C0\u67E5\u5668\u4E2D\uFF09
</code></pre></div><p>SourceFile \u662F\u7ED1\u5B9A\u5668\u7684\u5DE5\u4F5C\u5355\u5143\uFF0C<code>binder.ts</code> \u7531 <code>checker.ts</code> \u9A71\u52A8\u3002</p><h4 id="-152" tabindex="-1"><a class="header-anchor" href="#-152">#</a> \u7ED1\u5B9A\u5668\u51FD\u6570</h4><p><code>bindSourceFile</code> \u548C <code>mergeSymbolTable</code> \u662F\u4E24\u4E2A\u5173\u952E\u7684\u7ED1\u5B9A\u5668\u51FD\u6570\uFF0C\u6211\u4EEC\u6765\u770B\u4E0B\uFF1A</p><h5 id="bindsourcefile" tabindex="-1"><a class="header-anchor" href="#bindsourcefile">#</a> <code>bindSourceFile</code></h5><p>\u8BE5\u51FD\u6570\u4E3B\u8981\u662F\u68C0\u67E5 <code>file.locals</code> \u662F\u5426\u5B9A\u4E49\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u4EA4\u7ED9\uFF08\u672C\u5730\u51FD\u6570\uFF09 <code>bind</code> \u6765\u5904\u7406\u3002</p><p>\u6CE8\u610F\uFF1A<code>locals</code> \u5B9A\u4E49\u5728\u8282\u70B9\u4E0A\uFF0C\u5176\u7C7B\u578B\u4E3A <code>SymbolTable</code>\u3002<code>SourceFile</code> \u4E5F\u662F\u4E00\u4E2A\u8282\u70B9\uFF08\u4E8B\u5B9E\u4E0A\u662F AST \u4E2D\u7684\u6839\u8282\u70B9\uFF09\u3002</p><p>\u63D0\u793A\uFF1ATypeScript \u7F16\u8BD1\u5668\u5927\u91CF\u4F7F\u7528\u672C\u5730\u51FD\u6570\u3002\u672C\u5730\u51FD\u6570\u5F88\u53EF\u80FD\u4F7F\u7528\u6765\u81EA\u7236\u51FD\u6570\u7684\u53D8\u91CF\uFF08\u901A\u8FC7\u95ED\u5305\u6355\u83B7\uFF09\u3002\u4F8B\u5982 <code>bind</code> \u662F <code>bindSourceFile</code> \u4E2D\u7684\u4E00\u4E2A\u672C\u5730\u51FD\u6570\uFF0C\u5B83\u6216\u5B83\u8C03\u7528\u7684\u51FD\u6570\u4F1A\u8BBE\u7F6E <code>symbolCount</code> \u548C <code>classifiableNames</code> \u7B49\u72B6\u6001\uFF0C\u7136\u540E\u5C06\u5176\u5B58\u5728\u8FD4\u56DE\u7684 <code>SourceFile</code> \u4E2D</p><h5 id="bind" tabindex="-1"><a class="header-anchor" href="#bind">#</a> <code>bind</code></h5><p>bind \u80FD\u5904\u7406\u4EFB\u4E00\u8282\u70B9\uFF08\u4E0D\u53EA\u662F <code>SourceFile</code>\uFF09\uFF0C\u5B83\u505A\u7684\u7B2C\u4E00\u4EF6\u4E8B\u662F\u5206\u914D <code>node.parent</code>\uFF08\u5982\u679C <code>parent</code> \u53D8\u91CF\u5DF2\u8BBE\u7F6E\uFF0C\u7ED1\u5B9A\u5668\u5728 <code>bindChildren</code> \u51FD\u6570\u7684\u5904\u7406\u4E2D\u4ECD\u4F1A\u518D\u6B21\u8BBE\u7F6E\uFF09\uFF0C \u7136\u540E\u4EA4\u7ED9 <code>bindWorker</code> \u505A\u5F88\u591A\u91CD\u6D3B\u3002\u6700\u540E\u8C03\u7528 <code>bindChildren</code>\uFF08\u8BE5\u51FD\u6570\u7B80\u5355\u5730\u5C06\u7ED1\u5B9A\u5668\u7684\u72B6\u6001\uFF08\u5982\uFF1A<code>parent</code>\uFF09\u5B58\u5165\u51FD\u6570\u672C\u5730\u53D8\u91CF\u4E2D\uFF0C\u63A5\u7740\u5728\u6BCF\u4E2A\u5B50\u8282\u70B9\u4E0A\u8C03\u7528 <code>bind</code>\uFF0C\u7136\u540E\u518D\u5C06\u72B6\u6001\u8F6C\u5B58\u56DE\u7ED1\u5B9A\u5668\u4E2D\uFF09\u3002\u73B0\u5728\u6211\u4EEC\u770B\u4E0B <code>bindWorker</code>\uFF0C\u4E00\u4E2A\u66F4\u6709\u8DA3\u7684\u51FD\u6570\u3002</p><h5 id="bindworker" tabindex="-1"><a class="header-anchor" href="#bindworker">#</a> bindWorker</h5><p>\u8BE5\u51FD\u6570\u4F9D\u636E <code>node.kind</code>\uFF08<code>SyntaxKind</code>\u7C7B\u578B\uFF09\u8FDB\u884C\u5207\u6362\uFF0C\u5E76\u5C06\u5DE5\u4F5C\u59D4\u6258\u7ED9\u5408\u9002\u7684 <code>bindXXX</code> \u51FD\u6570\uFF08\u4E5F\u5B9A\u4E49\u5728<code>binder.ts</code>\u4E2D\uFF09\u3002\u4F8B\u5982\uFF1A\u5982\u679C\u8BE5\u8282\u70B9\u662F <code>SourceFile</code> \u5219\uFF08\u6700\u7EC8\u4E14\u4EC5\u5F53\u8282\u70B9\u662F\u5916\u90E8\u6587\u4EF6\u6A21\u5757\u65F6\uFF09\u8C03\u7528 <code>bindAnonymousDeclaration</code></p><h5 id="bindxxx" tabindex="-1"><a class="header-anchor" href="#bindxxx">#</a> <code>bindXXX</code> \u51FD\u6570</h5><p><code>bindXXX</code> \u7CFB\u51FD\u6570\u6709\u4E00\u4E9B\u901A\u7528\u7684\u6A21\u5F0F\u548C\u5DE5\u5177\u51FD\u6570\u3002\u5176\u4E2D\u6700\u5E38\u7528\u7684\u4E00\u4E2A\u662F <code>createSymbol</code> \u51FD\u6570\uFF0C\u5168\u90E8\u4EE3\u7801\u5C55\u793A\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">createSymbol</span><span class="token punctuation">(</span>flags<span class="token operator">:</span> SymbolFlags<span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Symbol <span class="token punctuation">{</span>
  symbolCount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Symbol</span><span class="token punctuation">(</span>flags<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u60A8\u6240\u89C1\uFF0C\u5B83\u7B80\u5355\u5730\u66F4\u65B0 <code>symbolCount</code>\uFF08\u4E00\u4E2A <code>bindSourceFile</code> \u7684\u672C\u5730\u53D8\u91CF\uFF09\uFF0C\u5E76\u4F7F\u7528\u6307\u5B9A\u7684\u53C2\u6570\u521B\u5EFA\u7B26\u53F7\u3002</p><h4 id="-153" tabindex="-1"><a class="header-anchor" href="#-153">#</a> \u7ED1\u5B9A\u5668\u58F0\u660E</h4><h5 id="-154" tabindex="-1"><a class="header-anchor" href="#-154">#</a> \u7B26\u53F7\u4E0E\u58F0\u660E</h5><p>\u8282\u70B9\u548C\u7B26\u53F7\u95F4\u7684\u94FE\u63A5\u7531\u51E0\u4E2A\u51FD\u6570\u6267\u884C\u3002\u5176\u4E2D\u4E00\u4E2A\u7528\u4E8E\u7ED1\u5B9A <code>SourceFile</code> \u8282\u70B9\u5230\u6E90\u6587\u4EF6\u7B26\u53F7\uFF08\u5916\u90E8\u6A21\u5757\u7684\u60C5\u51B5\u4E0B\uFF09\u7684\u51FD\u6570\u662F <code>addDeclarationToSymbol</code></p><p>\u6CE8\u610F\uFF1A\u5916\u90E8\u6A21\u5757\u6E90\u6587\u4EF6\u7684\u7B26\u53F7\u8BBE\u7F6E\u65B9\u5F0F\u662F <code>flags : SymbolFlags.ValueModule</code> \u548C <code>name: &#39;&quot;&#39; + removeFileExtension(file.fileName) + &#39;&quot;&#39;</code>.</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">addDeclarationToSymbol</span><span class="token punctuation">(</span><span class="token builtin">symbol</span><span class="token operator">:</span> Symbol<span class="token punctuation">,</span> node<span class="token operator">:</span> Declaration<span class="token punctuation">,</span> symbolFlags<span class="token operator">:</span> SymbolFlags<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">symbol</span><span class="token punctuation">.</span>flags <span class="token operator">|=</span> symbolFlags<span class="token punctuation">;</span>

  <span class="token comment">// \u521B\u5EFA AST \u8282\u70B9\u5230 symbol \u7684\u8FDE\u63A5</span>
  node<span class="token punctuation">.</span><span class="token builtin">symbol</span> <span class="token operator">=</span> <span class="token builtin">symbol</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token builtin">symbol</span><span class="token punctuation">.</span>declarations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">symbol</span><span class="token punctuation">.</span>declarations <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5C06\u8BE5\u8282\u70B9\u6DFB\u52A0\u4E3A\u8BE5\u7B26\u53F7\u7684\u4E00\u4E2A\u58F0\u660E</span>
  <span class="token builtin">symbol</span><span class="token punctuation">.</span>declarations<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>symbolFlags <span class="token operator">&amp;</span> SymbolFlags<span class="token punctuation">.</span>HasExports <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token builtin">symbol</span><span class="token punctuation">.</span>exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">symbol</span><span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>symbolFlags <span class="token operator">&amp;</span> SymbolFlags<span class="token punctuation">.</span>HasMembers <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token builtin">symbol</span><span class="token punctuation">.</span>members<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">symbol</span><span class="token punctuation">.</span>members <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>symbolFlags <span class="token operator">&amp;</span> SymbolFlags<span class="token punctuation">.</span>Value <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token builtin">symbol</span><span class="token punctuation">.</span>valueDeclaration<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">symbol</span><span class="token punctuation">.</span>valueDeclaration <span class="token operator">=</span> node<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0A\u8FF0\u4EE3\u7801\u4E3B\u8981\u6267\u884C\u7684\u64CD\u4F5C\u5982\u4E0B\uFF1A</p><ul><li>\u521B\u5EFA\u4E00\u4E2A\u4ECE AST \u8282\u70B9\u5230\u7B26\u53F7\u7684\u94FE\u63A5\uFF08<code>node.symbol</code>\uFF09</li><li>\u5C06\u8282\u70B9\u6DFB\u52A0\u4E3A\u8BE5\u7B26\u53F7\u7684\u4E00\u4E2A\u58F0\u660E</li></ul><h5 id="-155" tabindex="-1"><a class="header-anchor" href="#-155">#</a> \u58F0\u660E</h5><p>\u58F0\u660E\u5C31\u662F\u4E00\u4E2A\u6709\u53EF\u9009\u7684\u540D\u5B57\u7684\u8282\u70B9\u3002\u4E0B\u9762\u662F <code>types.ts</code> \u4E2D\u7684\u5B9A\u4E49\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Declaration</span> <span class="token keyword">extends</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  _declarationBrand<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  name<span class="token operator">?</span><span class="token operator">:</span> DeclarationName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-156" tabindex="-1"><a class="header-anchor" href="#-156">#</a> \u7ED1\u5B9A\u5668\u5BB9\u5668</h4><p>AST \u7684\u8282\u70B9\u53EF\u4EE5\u88AB\u5F53\u4F5C\u5BB9\u5668\u3002\u8FD9\u51B3\u5B9A\u4E86\u8282\u70B9\u53CA\u76F8\u5173\u7B26\u53F7\u7684 <code>SymbolTables</code> \u7684\u7C7B\u522B\u3002\u5BB9\u5668\u662F\u4E2A\u62BD\u8C61\u6982\u5FF5\uFF08\u6CA1\u6709\u76F8\u5173\u7684\u6570\u636E\u7ED3\u6784\uFF09\u3002\u8BE5\u6982\u5FF5\u7531\u4E00\u4E9B\u4E1C\u897F\u51B3\u5B9A\uFF0C<code>ContainerFlags</code> \u679A\u4E3E\u662F\u5176\u4E2D\u4E4B\u4E00\u3002\u51FD\u6570 <code>getContainerFlags</code>\uFF08\u4F4D\u4E8E <code>binder.ts</code>\uFF09 \u9A71\u52A8\u6B64\u6807\u5FD7\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">getContainerFlags</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span><span class="token operator">:</span> ContainerFlags <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ClassExpression<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ClassDeclaration<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>InterfaceDeclaration<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>EnumDeclaration<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TypeLiteral<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ObjectLiteralExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> ContainerFlags<span class="token punctuation">.</span>IsContainer<span class="token punctuation">;</span>

    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>CallSignature<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ConstructSignature<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>IndexSignature<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>MethodDeclaration<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>MethodSignature<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>FunctionDeclaration<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>Constructor<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>GetAccessor<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>SetAccessor<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>FunctionType<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ConstructorType<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>FunctionExpression<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ArrowFunction<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ModuleDeclaration<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>SourceFile<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TypeAliasDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> ContainerFlags<span class="token punctuation">.</span>IsContainerWithLocals<span class="token punctuation">;</span>

    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>CatchClause<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ForStatement<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ForInStatement<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ForOfStatement<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>CaseBlock<span class="token operator">:</span>
      <span class="token keyword">return</span> ContainerFlags<span class="token punctuation">.</span>IsBlockScopedContainer<span class="token punctuation">;</span>

    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>Block<span class="token operator">:</span>
      <span class="token comment">// \u4E0D\u8981\u5C06\u51FD\u6570\u5185\u90E8\u7684\u5757\u76F4\u63A5\u5F53\u505A\u5757\u4F5C\u7528\u57DF\u7684\u5BB9\u5668\u3002</span>
      <span class="token comment">// \u672C\u5757\u4E2D\u7684\u672C\u5730\u53D8\u91CF\u5E94\u5F53\u7F6E\u4E8E\u51FD\u6570\u4E2D\uFF0C\u5426\u5219\u4E0B\u4F8B\u4E2D\u7684 &#39;x&#39; \u4E0D\u4F1A\u91CD\u65B0\u58F0\u660E\u4E3A\u4E00\u4E2A\u5757\u4F5C\u7528\u57DF\u7684\u672C\u5730\u53D8\u91CF\uFF1A</span>
      <span class="token comment">//</span>
      <span class="token comment">//     function foo() {</span>
      <span class="token comment">//         var x;</span>
      <span class="token comment">//         let x;</span>
      <span class="token comment">//     }</span>
      <span class="token comment">//</span>
      <span class="token comment">// \u5982\u679C\u5C06 &#39;var x&#39; \u7559\u5728\u51FD\u6570\u4E2D\uFF0C\u800C\u5C06 &#39;let x&#39; \u653E\u5230\u672C\u5757\u4E2D\uFF08\u51FD\u6570\u5916\uFF09\uFF0C\u5C31\u4E0D\u4F1A\u6709\u51B2\u7A81\u4E86\u3002</span>
      <span class="token comment">//</span>
      <span class="token comment">// \u5982\u679C\u4E0D\u5728\u8FD9\u91CC\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5757\u4F5C\u7528\u57DF\u5BB9\u5668\uFF0C&#39;var x&#39; \u548C &#39;let x&#39; \u90FD\u4F1A\u8FDB\u5165\u51FD\u6570\u5BB9\u5668\u672C\u5730\u4E2D\uFF0C\u8FD9\u6837\u5C31\u4F1A\u6709\u78B0\u649E\u51B2\u7A81\u3002</span>
      <span class="token keyword">return</span> <span class="token function">isFunctionLike</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">?</span> ContainerFlags<span class="token punctuation">.</span>None <span class="token operator">:</span> ContainerFlags<span class="token punctuation">.</span>IsBlockScopedContainer<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> ContainerFlags<span class="token punctuation">.</span>None<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8BE5\u51FD\u6570\u53EA\u5728\u7ED1\u5B9A\u5668\u51FD\u6570 <code>bindChildren</code> \u4E2D\u8C03\u7528\uFF0C\u4F1A\u6839\u636E <code>getContainerFlags</code> \u7684\u8FD0\u884C\u7ED3\u679C\u5C06\u8282\u70B9\u8BBE\u4E3A <code>container</code> \u548C\uFF08\u6216\uFF09 <code>blockScopedContainer</code>\u3002\u51FD\u6570 <code>bindChildren</code> \u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u6240\u6709\u5BB9\u5668\u8282\u70B9\u90FD\u4EE5\u58F0\u660E\u987A\u5E8F\u4FDD\u5B58\u5728\u4E00\u4E2A\u94FE\u8868\u4E2D\u3002</span>
<span class="token comment">// \u7C7B\u578B\u68C0\u67E5\u5668\u4E2D\u7684 getLocalNameOfContainer \u51FD\u6570\u4F1A\u4F7F\u7528\u8BE5\u94FE\u8868\u5BF9\u5BB9\u5668\u4F7F\u7528\u7684\u672C\u5730\u540D\u79F0\u7684\u552F\u4E00\u6027\u505A\u9A8C\u8BC1\u3002</span>
<span class="token keyword">function</span> <span class="token function">bindChildren</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5728\u9012\u5F52\u5230\u5B50\u8282\u70B9\u4E4B\u524D\uFF0C\u6211\u4EEC\u5148\u8981\u4FDD\u5B58\u7236\u8282\u70B9\uFF0C\u5BB9\u5668\u548C\u5757\u5BB9\u5668\u3002\u5904\u7406\u5B8C\u5F39\u51FA\u7684\u5B50\u8282\u70B9\u540E\uFF0C\u518D\u5C06\u8FD9\u4E9B\u503C\u5B58\u56DE\u539F\u5904\u3002</span>
  <span class="token keyword">let</span> saveParent <span class="token operator">=</span> parent<span class="token punctuation">;</span>
  <span class="token keyword">let</span> saveContainer <span class="token operator">=</span> container<span class="token punctuation">;</span>
  <span class="token keyword">let</span> savedBlockScopeContainer <span class="token operator">=</span> blockScopeContainer<span class="token punctuation">;</span>

  <span class="token comment">// \u73B0\u5728\u8981\u5C06\u8FD9\u4E2A\u8282\u70B9\u8BBE\u4E3A\u7236\u8282\u70B9\uFF0C\u6211\u4EEC\u8981\u9012\u5F52\u5B83\u7684\u5B50\u8282\u70B9\u3002</span>
  parent <span class="token operator">=</span> node<span class="token punctuation">;</span>

  <span class="token comment">// \u6839\u636E\u8282\u70B9\u7684\u7C7B\u578B\uFF0C\u9700\u8981\u5BF9\u5F53\u524D\u5BB9\u5668\u6216\u5757\u5BB9\u5668\u8FDB\u884C\u8C03\u6574\u3002 \u5982\u679C\u5F53\u524D\u8282\u70B9\u662F\u4E2A\u5BB9\u5668\uFF0C\u5219\u81EA\u52A8\u5C06\u5176\u89C6\u4E3A\u5F53\u524D\u7684\u5757\u5BB9\u5668\u3002</span>
  <span class="token comment">// \u7531\u4E8E\u6211\u4EEC\u77E5\u9053\u5BB9\u5668\u53EF\u80FD\u5305\u542B\u672C\u5730\u53D8\u91CF\uFF0C\u56E0\u6B64\u63D0\u524D\u521D\u59CB\u5316 .locals \u5B57\u6BB5\u3002</span>
  <span class="token comment">// \u8FD9\u6837\u505A\u662F\u56E0\u4E3A\u5F88\u53EF\u80FD\u9700\u8981\u5C06\u4E00\u4E9B\u5B50\uFF08\u8282\u70B9\uFF09\u7F6E\u5165 .locals \u4E2D\uFF08\u4F8B\u5982\uFF1A\u51FD\u6570\u53C2\u6570\u6216\u53D8\u91CF\u58F0\u660E\uFF09\u3002</span>
  <span class="token comment">//</span>
  <span class="token comment">// \u4F46\u662F\uFF0C\u6211\u4EEC\u4E0D\u4F1A\u4E3B\u52A8\u4E3A\u5757\u5BB9\u5668\u521B\u5EFA .locals\uFF0C\u56E0\u4E3A\u901A\u5E38\u5757\u5BB9\u5668\u4E2D\u4E0D\u4F1A\u6709\u5757\u4F5C\u7528\u57DF\u53D8\u91CF\u3002</span>
  <span class="token comment">// \u6211\u4EEC\u4E0D\u60F3\u4E3A\u9047\u5230\u7684\u6BCF\u4E2A\u5757\u90FD\u5206\u914D\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5927\u591A\u6570\u60C5\u51B5\u6CA1\u6709\u5FC5\u8981\u3002</span>
  <span class="token comment">//</span>
  <span class="token comment">// \u6700\u540E\uFF0C\u5982\u679C\u662F\u4E2A\u5757\u5BB9\u5668\uFF0C\u6211\u4EEC\u5C31\u6E05\u7406\u8BE5\u5BB9\u5668\u4E2D\u53EF\u80FD\u5B58\u5728\u7684 .locals \u5BF9\u8C61\u3002\u8FD9\u79CD\u60C5\u51B5\u5E38\u5728\u589E\u91CF\u7F16\u8BD1\u573A\u666F\u4E2D\u53D1\u751F\u3002</span>
  <span class="token comment">// \u7531\u4E8E\u6211\u4EEC\u53EF\u4EE5\u91CD\u7528\u4E0A\u6B21\u7F16\u8BD1\u7684\u8282\u70B9\uFF0C\u800C\u8BE5\u8282\u70B9\u53EF\u80FD\u5DF2\u7ECF\u521B\u5EFA\u4E86 locals \u5BF9\u8C61\u3002</span>
  <span class="token comment">// \u56E0\u6B64\u5FC5\u987B\u6E05\u7406\uFF0C\u4EE5\u514D\u610F\u5916\u5730\u4ECE\u4E0A\u6B21\u7684\u7F16\u8BD1\u4E2D\u79FB\u52A8\u4E86\u8FC7\u65F6\u7684\u6570\u636E\u3002</span>
  <span class="token keyword">let</span> containerFlags <span class="token operator">=</span> <span class="token function">getContainerFlags</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>containerFlags <span class="token operator">&amp;</span> ContainerFlags<span class="token punctuation">.</span>IsContainer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    container <span class="token operator">=</span> blockScopeContainer <span class="token operator">=</span> node<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>containerFlags <span class="token operator">&amp;</span> ContainerFlags<span class="token punctuation">.</span>HasLocals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      container<span class="token punctuation">.</span>locals <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">addToContainerChain</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>containerFlags <span class="token operator">&amp;</span> ContainerFlags<span class="token punctuation">.</span>IsBlockScopedContainer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    blockScopeContainer <span class="token operator">=</span> node<span class="token punctuation">;</span>
    blockScopeContainer<span class="token punctuation">.</span>locals <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">forEachChild</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> bind<span class="token punctuation">)</span><span class="token punctuation">;</span>

  container <span class="token operator">=</span> saveContainer<span class="token punctuation">;</span>
  parent <span class="token operator">=</span> saveParent<span class="token punctuation">;</span>
  blockScopeContainer <span class="token operator">=</span> savedBlockScopeContainer<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u60A8\u53EF\u80FD\u8FD8\u8BB0\u5F97\u7ED1\u5B9A\u5668\u51FD\u6570\u4E2D\u7684\u8FD9\u90E8\u5206\uFF1A<code>bindChildren</code> \u7531 <code>bind</code> \u51FD\u6570\u8C03\u7528\u3002\u6211\u4EEC\u5F97\u5230\u8FD9\u6837\u7684\u9012\u5F52\u7ED1\u5B9A\uFF1A<code>bind</code> \u8C03\u7528 <code>bindChildren</code>\uFF0C\u800C bindChildren \u53C8\u4E3A\u5176\u6BCF\u4E2A\u5B50\u8282\u70B9\u8C03\u7528 <code>bind</code></p><h4 id="-157" tabindex="-1"><a class="header-anchor" href="#-157">#</a> \u7ED1\u5B9A\u5668\u7B26\u53F7\u8868</h4><p>\u7B26\u53F7\u8868\uFF08SymbolTable\uFF09\u662F\u4EE5\u4E00\u4E2A\u7B80\u5355\u7684 HashMap \u5B9E\u73B0\u7684\uFF0C\u4E0B\u9762\u662F\u5176\u63A5\u53E3\uFF08<code>types.ts</code>\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">SymbolTable</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Symbol<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7B26\u53F7\u8868\u901A\u8FC7\u7ED1\u5B9A\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u8FD9\u91CC\u662F\u7F16\u8BD1\u5668\u4F7F\u7528\u7684\u4E00\u4E9B\u7B26\u53F7\u8868\uFF1A</p><p>\u8282\u70B9\u4E0A\uFF1A</p><div class="language-ts"><pre><code>locals<span class="token operator">?</span><span class="token operator">:</span> SymbolTable<span class="token punctuation">;</span>                   <span class="token comment">// \u8282\u70B9\u76F8\u5173\u7684\u672C\u5730\u53D8\u91CF</span>
</code></pre></div><p>\u7B26\u53F7\u4E0A\uFF1A</p><div class="language-ts"><pre><code>members<span class="token operator">?</span><span class="token operator">:</span> SymbolTable<span class="token punctuation">;</span>                  <span class="token comment">// \u7C7B\uFF0C\u63A5\u53E3\u6216\u5B57\u9762\u91CF\u5B9E\u4F8B\u6210\u5458</span>
exports<span class="token operator">?</span><span class="token operator">:</span> SymbolTable<span class="token punctuation">;</span>                  <span class="token comment">// \u6A21\u5757\u5BFC\u51FA</span>
</code></pre></div><p>\u8BF7\u6CE8\u610F\uFF1A<code>bindChildren</code> \u57FA\u4E8E <code>ContainerFlags</code> \u521D\u59CB\u5316 <code>locals</code>\uFF08\u4E3A <code>{}</code>\uFF09</p><h5 id="-158" tabindex="-1"><a class="header-anchor" href="#-158">#</a> \u7B26\u53F7\u8868\u586B\u5145</h5><p>\u7B26\u53F7\u8868\u4F7F\u7528\u7B26\u53F7\u6765\u586B\u5145\uFF0C\u4E3B\u8981\u662F\u901A\u8FC7\u8C03\u7528 declareSymbol \u6765\u8FDB\u884C\uFF0C\u5982\u4E0B\u6240\u793A\u7684\u662F\u8BE5\u51FD\u6570\u7684\u5168\u90E8\u4EE3\u7801\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">/**
 * \u4E3A\u6307\u5B9A\u7684\u8282\u70B9\u58F0\u660E\u4E00\u4E2A\u7B26\u53F7\u5E76\u52A0\u5165 symbols\u3002\u6807\u8BC6\u540D\u51B2\u7A81\u65F6\u62A5\u544A\u9519\u8BEF\u3002
 * @param symbolTable - \u8981\u5C06\u8282\u70B9\u52A0\u5165\u8FDB\u7684\u7B26\u53F7\u8868
 * @param parent - \u6307\u5B9A\u8282\u70B9\u7684\u7236\u8282\u70B9\u7684\u58F0\u660E
 * @param node - \u8981\u6DFB\u52A0\u5230\u7B26\u53F7\u8868\u7684\uFF08\u8282\u70B9\uFF09\u58F0\u660E
 * @param includes - SymbolFlags\uFF0C\u6307\u5B9A\u8282\u70B9\u989D\u5916\u7684\u58F0\u660E\u7C7B\u578B\uFF08\u4F8B\u5982\uFF1Aexport, ambient \u7B49\uFF09
 * @param excludes - \u4E0D\u80FD\u5728\u7B26\u53F7\u8868\u4E2D\u58F0\u660E\u7684\u6807\u5FD7\uFF0C\u7528\u4E8E\u62A5\u544A\u7981\u6B62\u7684\u58F0\u660E
 */</span>
<span class="token keyword">function</span> <span class="token function">declareSymbol</span><span class="token punctuation">(</span>
  symbolTable<span class="token operator">:</span> SymbolTable<span class="token punctuation">,</span>
  parent<span class="token operator">:</span> Symbol<span class="token punctuation">,</span>
  node<span class="token operator">:</span> Declaration<span class="token punctuation">,</span>
  includes<span class="token operator">:</span> SymbolFlags<span class="token punctuation">,</span>
  excludes<span class="token operator">:</span> SymbolFlags
<span class="token punctuation">)</span><span class="token operator">:</span> Symbol <span class="token punctuation">{</span>
  Debug<span class="token punctuation">.</span><span class="token function">assert</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasDynamicName</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u9ED8\u8BA4\u5BFC\u51FA\u7684\u51FD\u6570\u8282\u70B9\u6216\u7C7B\u8282\u70B9\u7684\u7B26\u53F7\u603B\u662F&quot;default&quot;</span>
  <span class="token keyword">let</span> name <span class="token operator">=</span> node<span class="token punctuation">.</span>flags <span class="token operator">&amp;</span> NodeFlags<span class="token punctuation">.</span>Default <span class="token operator">&amp;&amp;</span> parent <span class="token operator">?</span> <span class="token string">&#39;default&#39;</span> <span class="token operator">:</span> <span class="token function">getDeclarationName</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> <span class="token builtin">symbol</span><span class="token operator">:</span> Symbol<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u68C0\u67E5\u7B26\u53F7\u8868\u4E2D\u662F\u5426\u5DF2\u6709\u540C\u540D\u7684\u7B26\u53F7\u3002\u82E5\u6CA1\u6709\uFF0C\u521B\u5EFA\u6B64\u540D\u79F0\u7684\u65B0\u7B26\u53F7\u5E76\u52A0\u5165\u8868\u4E2D\u3002</span>
    <span class="token comment">// \u6CE8\u610F\uFF0C\u6211\u4EEC\u5C1A\u672A\u7ED9\u65B0\u7B26\u53F7\u6307\u5B9A\u4EFB\u4F55\u6807\u5FD7\u3002\u8FD9\u53EF\u4EE5\u786E\u4FDD\u4E0D\u4F1A\u548C\u4F20\u5165\u7684 excludes \u6807\u5FD7\u8D77\u51B2\u7A81\u3002</span>
    <span class="token comment">//</span>
    <span class="token comment">// \u5982\u679C\u5DF2\u5B58\u5728\u7684\u4E00\u4E2A\u7B26\u53F7\uFF0C\u67E5\u770B\u662F\u5426\u4E0E\u8981\u521B\u5EFA\u7684\u65B0\u7B26\u53F7\u51B2\u7A81\u3002</span>
    <span class="token comment">// \u4F8B\u5982\uFF1A\u540C\u4E00\u7B26\u53F7\u8868\u4E2D\uFF0C&#39;var&#39; \u7B26\u53F7\u548C &#39;class&#39; \u7B26\u53F7\u4F1A\u51B2\u7A81\u3002</span>
    <span class="token comment">// \u5982\u679C\u6709\u51B2\u7A81\uFF0C\u62A5\u544A\u8BE5\u95EE\u9898\u7ED9\u8BE5\u7B26\u53F7\u7684\u6BCF\u4E2A\u58F0\u660E\uFF0C\u7136\u540E\u4E3A\u8BE5\u58F0\u660E\u521B\u5EFA\u4E00\u4E2A\u65B0\u7B26\u53F7</span>
    <span class="token comment">//</span>
    <span class="token comment">// \u5982\u679C\u6211\u4EEC\u521B\u5EFA\u7684\u65B0\u7B26\u53F7\u65E2\u6CA1\u5728\u7B26\u53F7\u8868\u4E2D\u91CD\u540D\u4E5F\u6CA1\u548C\u73B0\u6709\u7B26\u53F7\u51B2\u7A81\uFF0C\u5C31\u5C06\u8BE5\u8282\u70B9\u6DFB\u52A0\u4E3A\u65B0\u7B26\u53F7\u7684\u552F\u4E00\u58F0\u660E\u3002</span>
    <span class="token comment">//</span>
    <span class="token comment">// \u5426\u5219\uFF0C\u5C31\u8981\uFF08\u5C06\u65B0\u7B26\u53F7\uFF09\u5408\u5E76\u8FDB\u517C\u5BB9\u7684\u73B0\u6709\u7B26\u53F7\u4E2D\uFF08\u4F8B\u5982\u540C\u4E00\u5BB9\u5668\u4E2D\u6709\u591A\u4E2A\u540C\u540D\u7684 &#39;var&#39; \u65F6\uFF09\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\u8981\u628A\u8BE5\u8282\u70B9\u6DFB\u52A0\u5230\u7B26\u53F7\u7684\u58F0\u660E\u5217\u8868\u4E2D\u3002</span>
    <span class="token builtin">symbol</span> <span class="token operator">=</span> <span class="token function">hasProperty</span><span class="token punctuation">(</span>symbolTable<span class="token punctuation">,</span> name<span class="token punctuation">)</span>
      <span class="token operator">?</span> symbolTable<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
      <span class="token operator">:</span> <span class="token punctuation">(</span>symbolTable<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createSymbol</span><span class="token punctuation">(</span>SymbolFlags<span class="token punctuation">.</span>None<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">&amp;&amp;</span> includes <span class="token operator">&amp;</span> SymbolFlags<span class="token punctuation">.</span>Classifiable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      classifiableNames<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">symbol</span><span class="token punctuation">.</span>flags <span class="token operator">&amp;</span> excludes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span>name<span class="token punctuation">.</span>parent <span class="token operator">=</span> node<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u62A5\u544A\u6BCF\u4E2A\u91CD\u590D\u58F0\u660E\u7684\u9519\u8BEF\u4F4D\u7F6E</span>
      <span class="token comment">// \u62A5\u544A\u4E4B\u524D\u9047\u5230\u7684\u58F0\u660E\u9519\u8BEF</span>
      <span class="token keyword">let</span> message <span class="token operator">=</span>
        <span class="token builtin">symbol</span><span class="token punctuation">.</span>flags <span class="token operator">&amp;</span> SymbolFlags<span class="token punctuation">.</span>BlockScopedVariable
          <span class="token operator">?</span> Diagnostics<span class="token punctuation">.</span>Cannot_redeclare_block_scoped_variable_0
          <span class="token operator">:</span> Diagnostics<span class="token punctuation">.</span>Duplicate_identifier_0<span class="token punctuation">;</span>
      <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token builtin">symbol</span><span class="token punctuation">.</span>declarations<span class="token punctuation">,</span> declaration <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        file<span class="token punctuation">.</span>bindDiagnostics<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
          <span class="token function">createDiagnosticForNode</span><span class="token punctuation">(</span>declaration<span class="token punctuation">.</span>name <span class="token operator">||</span> declaration<span class="token punctuation">,</span> message<span class="token punctuation">,</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span>declaration<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      file<span class="token punctuation">.</span>bindDiagnostics<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">createDiagnosticForNode</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>name <span class="token operator">||</span> node<span class="token punctuation">,</span> message<span class="token punctuation">,</span> <span class="token function">getDisplayName</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token builtin">symbol</span> <span class="token operator">=</span> <span class="token function">createSymbol</span><span class="token punctuation">(</span>SymbolFlags<span class="token punctuation">.</span>None<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">symbol</span> <span class="token operator">=</span> <span class="token function">createSymbol</span><span class="token punctuation">(</span>SymbolFlags<span class="token punctuation">.</span>None<span class="token punctuation">,</span> <span class="token string">&#39;__missing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">addDeclarationToSymbol</span><span class="token punctuation">(</span><span class="token builtin">symbol</span><span class="token punctuation">,</span> node<span class="token punctuation">,</span> includes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">symbol</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> parent<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token builtin">symbol</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u586B\u5145\u54EA\u4E2A\u7B26\u53F7\u8868\uFF0C\u7531\u6B64\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u51B3\u5B9A\u3002\u4F8B\u5982\uFF1A\u6DFB\u52A0\u58F0\u660E\u5230\u7C7B\u578B\u4E3A <code>SyntaxKind.ClassDeclaration</code> \u6216 <code>SyntaxKind.ClassExpression</code> \u7684\u5BB9\u5668\u65F6\uFF0C\u5C06\u4F1A\u8C03\u7528\u4E0B\u9762\u7684\u51FD\u6570 <code>declareClassMember</code>:</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">declareClassMember</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Declaration<span class="token punctuation">,</span> symbolFlags<span class="token operator">:</span> SymbolFlags<span class="token punctuation">,</span> symbolExcludes<span class="token operator">:</span> SymbolFlags<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> node<span class="token punctuation">.</span>flags <span class="token operator">&amp;</span> NodeFlags<span class="token punctuation">.</span>Static
    <span class="token operator">?</span> <span class="token function">declareSymbol</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span><span class="token builtin">symbol</span><span class="token punctuation">.</span>exports<span class="token punctuation">,</span> container<span class="token punctuation">.</span><span class="token builtin">symbol</span><span class="token punctuation">,</span> node<span class="token punctuation">,</span> symbolFlags<span class="token punctuation">,</span> symbolExcludes<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">declareSymbol</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span><span class="token builtin">symbol</span><span class="token punctuation">.</span>members<span class="token punctuation">,</span> container<span class="token punctuation">.</span><span class="token builtin">symbol</span><span class="token punctuation">,</span> node<span class="token punctuation">,</span> symbolFlags<span class="token punctuation">,</span> symbolExcludes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="-159" tabindex="-1"><a class="header-anchor" href="#-159">#</a> \u7ED1\u5B9A\u5668\u9519\u8BEF\u62A5\u544A</h4><p>\u7ED1\u5B9A\u9519\u8BEF\u88AB\u6DFB\u52A0\u5230\u6E90\u6587\u4EF6\u7684 <code>bindDiagnostics</code> \u5217\u8868\u4E2D</p><p>\u4E00\u4E2A\u7ED1\u5B9A\u65F6\u9519\u8BEF\u68C0\u6D4B\u7684\u4F8B\u5B50\u662F\u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\u4F7F\u7528 <code>eval</code> \u6216 <code>arguments</code> \u4F5C\u4E3A\u53D8\u91CF\u540D\u3002\u4E0B\u9762\u5C55\u793A\u4E86\u76F8\u5173\u7684\u5168\u90E8\u4EE3\u7801\uFF08\u591A\u4E2A\u4F4D\u7F6E\u90FD\u4F1A\u8C03\u7528<code>checkStrictModeEvalOrArguments</code>\uFF0C\u8C03\u7528\u6808\u53D1\u81EA <code>bindWorker</code>\uFF0C\u8BE5\u51FD\u6570\u5BF9\u4E0D\u540C\u8282\u70B9\u7684 <code>SyntaxKind</code> \u8C03\u7528\u4E0D\u540C\u7684\u68C0\u67E5\u51FD\u6570\uFF09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">checkStrictModeEvalOrArguments</span><span class="token punctuation">(</span>contextNode<span class="token operator">:</span> Node<span class="token punctuation">,</span> name<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">&amp;&amp;</span> name<span class="token punctuation">.</span>kind <span class="token operator">===</span> SyntaxKind<span class="token punctuation">.</span>Identifier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> identifier <span class="token operator">=</span> <span class="token operator">&lt;</span>Identifier<span class="token operator">&gt;</span>name<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEvalOrArgumentsIdentifier</span><span class="token punctuation">(</span>identifier<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9996\u5148\u68C0\u67E5\u540D\u5B57\u662F\u5426\u5728\u7C7B\u58F0\u660E\u6216\u8005\u7C7B\u8868\u8FBE\u5F0F\u4E2D\uFF0C\u5982\u679C\u662F\u5219\u7ED9\u51FA\u660E\u786E\u6D88\u606F\uFF0C\u5426\u5219\u62A5\u544A\u4E00\u822C\u6027\u9519\u8BEF</span>
      <span class="token keyword">let</span> span <span class="token operator">=</span> <span class="token function">getErrorSpanForNode</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      file<span class="token punctuation">.</span>bindDiagnostics<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        <span class="token function">createFileDiagnostic</span><span class="token punctuation">(</span>
          file<span class="token punctuation">,</span>
          span<span class="token punctuation">.</span>start<span class="token punctuation">,</span>
          span<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
          <span class="token function">getStrictModeEvalOrArgumentsMessage</span><span class="token punctuation">(</span>contextNode<span class="token punctuation">)</span><span class="token punctuation">,</span>
          identifier<span class="token punctuation">.</span>text
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">isEvalOrArgumentsIdentifier</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    node<span class="token punctuation">.</span>kind <span class="token operator">===</span> SyntaxKind<span class="token punctuation">.</span>Identifier <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Identifier<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token operator">===</span> <span class="token string">&#39;eval&#39;</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Identifier<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token operator">===</span> <span class="token string">&#39;arguments&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getStrictModeEvalOrArgumentsMessage</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5411\u7528\u6237\u63D0\u4F9B\u7279\u5B9A\u6D88\u606F\uFF0C\u6709\u52A9\u4ED6\u4EEC\u7406\u89E3\u4E3A\u4F55\u4F1A\u5904\u4E8E\u4E25\u683C\u6A21\u5F0F\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getContainingClass</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Diagnostics<span class="token punctuation">.</span>Invalid_use_of_0_Class_definitions_are_automatically_in_strict_mode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>externalModuleIndicator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Diagnostics<span class="token punctuation">.</span>Invalid_use_of_0_Modules_are_automatically_in_strict_mode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> Diagnostics<span class="token punctuation">.</span>Invalid_use_of_0_in_strict_mode<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="-160" tabindex="-1"><a class="header-anchor" href="#-160">#</a> \u68C0\u67E5\u5668</h3><p>\u5982\u524D\u6240\u8FF0\uFF0C<strong>\u68C0\u67E5\u5668</strong>\u4F7F\u5F97 TypeScript \u66F4\u72EC\u7279\uFF0C\u6BD4<strong>\u5176\u5B83 JavaScript \u8F6C\u8BD1\u5668</strong>\u66F4\u5F3A\u5927\u3002\u68C0\u67E5\u5668\u4F4D\u4E8E <code>checker.ts</code> \u4E2D\uFF0C\u5F53\u524D\u6709 23k \u884C\u4EE5\u4E0A\u7684\u4EE3\u7801\uFF08\u7F16\u8BD1\u5668\u4E2D\u6700\u5927\u7684\u90E8\u5206\uFF09</p><h4 id="-161" tabindex="-1"><a class="header-anchor" href="#-161">#</a> \u7A0B\u5E8F\u5BF9\u68C0\u67E5\u5668\u7684\u4F7F\u7528</h4><p>\u68C0\u67E5\u5668\u662F\u7531\u7A0B\u5E8F\u521D\u59CB\u5316\uFF0C\u4E0B\u9762\u662F\u8C03\u7528\u6808\u793A\u610F\uFF08\u7ED1\u5B9A\u5668\u4E00\u8282\u4E5F\u5C55\u793A\u8FC7\uFF09\uFF1A</p><div class="language-shell"><pre><code>program.getTypeChecker -<span class="token operator">&gt;</span>
  ts.createTypeChecker\uFF08\u68C0\u67E5\u5668\u4E2D\uFF09-<span class="token operator">&gt;</span>
    initializeTypeChecker\uFF08\u68C0\u67E5\u5668\u4E2D\uFF09 -<span class="token operator">&gt;</span>
      <span class="token keyword">for</span> each SourceFile <span class="token variable"><span class="token variable">\`</span>ts.bindSourceFile<span class="token variable">\`</span></span>\uFF08\u7ED1\u5B9A\u5668\u4E2D\uFF09
      // \u63A5\u7740
      <span class="token keyword">for</span> each SourceFile <span class="token variable"><span class="token variable">\`</span>ts.mergeSymbolTable<span class="token variable">\`</span></span>\uFF08\u68C0\u67E5\u5668\u4E2D\uFF09
</code></pre></div><h4 id="-162" tabindex="-1"><a class="header-anchor" href="#-162">#</a> \u4E0E\u53D1\u5C04\u5668\u7684\u8054\u7CFB</h4><p>\u771F\u6B63\u7684\u7C7B\u578B\u68C0\u67E5\u4F1A\u5728\u8C03\u7528 getDiagnostics \u65F6\u624D\u53D1\u751F\u3002\u8BE5\u51FD\u6570\u88AB\u8C03\u7528\u65F6\uFF08\u6BD4\u5982\u7531 Program.emit \u8BF7\u6C42\uFF09\uFF0C\u68C0\u67E5\u5668\u8FD4\u56DE\u4E00\u4E2A EmitResolver\uFF08\u7531\u7A0B\u5E8F\u8C03\u7528\u68C0\u67E5\u5668\u7684 getEmitResolver \u51FD\u6570\u5F97\u5230\uFF09\uFF0CEmitResolver \u662F createTypeChecker \u7684\u4E00\u4E2A\u672C\u5730\u51FD\u6570\u7684\u96C6\u5408\u3002\u4ECB\u7ECD\u53D1\u5C04\u5668\u65F6\u8FD8\u4F1A\u518D\u6B21\u63D0\u5230\u3002</p><p>\u4E0B\u9762\u662F\u8BE5\u8FC7\u7A0B\u76F4\u5230 checkSourceFile \u7684\u8C03\u7528\u6808\uFF08checkSourceFile \u662F createTypeChecker \u7684\u4E00\u4E2A\u672C\u5730\u51FD\u6570\uFF09\uFF1A</p><div class="language-shell"><pre><code>program.emit -<span class="token operator">&gt;</span>
  emitWorker <span class="token punctuation">(</span>program <span class="token builtin class-name">local</span><span class="token punctuation">)</span> -<span class="token operator">&gt;</span>
    createTypeChecker.getEmitResolver -<span class="token operator">&gt;</span>
      // \u7B2C\u4E00\u6B21\u8C03\u7528\u4E0B\u9762\u7684\u51E0\u4E2A createTypeChecker \u7684\u672C\u5730\u51FD\u6570
      call getDiagnostics -<span class="token operator">&gt;</span>
          getDiagnosticsWorker -<span class="token operator">&gt;</span>
              checkSourceFile

      // \u63A5\u7740
      <span class="token builtin class-name">return</span> resolver
      // \u901A\u8FC7\u5BF9\u672C\u5730\u51FD\u6570 createResolver<span class="token punctuation">(</span><span class="token punctuation">)</span> \u7684\u8C03\u7528\uFF0Cresolver \u5DF2\u5728 createTypeChecker \u4E2D\u521D\u59CB\u5316\u3002
</code></pre></div><h4 id="-163" tabindex="-1"><a class="header-anchor" href="#-163">#</a> \u5168\u5C40\u547D\u540D\u7A7A\u95F4\u5408\u5E76</h4><p><code>initializeTypeChecker</code> \u4E2D\u5B58\u5728\u4EE5\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u521D\u59CB\u5316\u5168\u5C40\u7B26\u53F7\u8868\uFF08SymbolTable\uFF09\u3002</span>
<span class="token function">forEach</span><span class="token punctuation">(</span>host<span class="token punctuation">.</span><span class="token function">getSourceFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> file <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isExternalModule</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">mergeSymbolTable</span><span class="token punctuation">(</span>globals<span class="token punctuation">,</span> file<span class="token punctuation">.</span>locals<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u57FA\u672C\u4E0A\u662F\u5C06\u6240\u6709\u7684 <code>global</code> \u7B26\u53F7\u5408\u5E76\u5230 <code>let globals: SymbolTable = {}</code> \u7B26\u53F7\u8868\u4E2D\uFF08\u4F4D\u4E8E <code>createTypeChecker</code> \u4E2D\uFF09\u3002 <code>mergeSymbolTable</code> \u4E3B\u8981\u8C03\u7528 <code>mergeSymbol</code> \u51FD\u6570\u3002</p><h4 id="-164" tabindex="-1"><a class="header-anchor" href="#-164">#</a> \u68C0\u67E5\u5668\u9519\u8BEF\u62A5\u544A</h4><p>\u68C0\u67E5\u5668\u4F7F\u7528\u672C\u5730\u7684 <code>error</code> \u51FD\u6570\u62A5\u544A\u9519\u8BEF\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">error</span><span class="token punctuation">(</span>location<span class="token operator">:</span> Node<span class="token punctuation">,</span> message<span class="token operator">:</span> DiagnosticMessage<span class="token punctuation">,</span> arg0<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> arg1<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> arg2<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> diagnostic <span class="token operator">=</span> location
    <span class="token operator">?</span> <span class="token function">createDiagnosticForNode</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span> message<span class="token punctuation">,</span> arg0<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">createCompilerDiagnostic</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> arg0<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  diagnostics<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>diagnostic<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="-165" tabindex="-1"><a class="header-anchor" href="#-165">#</a> \u53D1\u5C04\u5668</h3><p>TypeScript \u7F16\u8BD1\u5668\u63D0\u4F9B\u4E86\u4E24\u4E2A\u53D1\u5C04\u5668\uFF1A</p><ul><li><code>emitter.ts</code>\uFF1A\u53EF\u80FD\u662F\u4F60\u6700\u611F\u5174\u8DA3\u7684\u53D1\u5C04\u5668\uFF0C\u5B83\u662F TS -&gt; JavaScript \u7684\u53D1\u5C04\u5668</li><li><code>declarationEmitter.ts</code>\uFF1A\u8FD9\u4E2A\u53D1\u5C04\u5668\u7528\u4E8E\u4E3A <strong>TypeScript \u6E90\u6587\u4EF6\uFF08<code>.ts</code>\uFF09</strong> \u521B\u5EFA<strong>\u58F0\u660E\u6587\u4EF6\uFF08<code>.d.ts</code>\uFF09</strong></li></ul><p>\u672C\u8282\u6211\u4EEC\u4ECB\u7ECD <code>emitter.ts</code></p><h4 id="promgram" tabindex="-1"><a class="header-anchor" href="#promgram">#</a> Promgram \u5BF9\u53D1\u5C04\u5668\u7684\u4F5C\u7528</h4><p>Program \u63D0\u4F9B\u4E86\u4E00\u4E2A <code>emit</code> \u51FD\u6570\u3002\u8BE5\u51FD\u6570\u4E3B\u8981\u5C06\u529F\u80FD\u59D4\u6258\u7ED9 <code>emitter.ts</code> \u4E2D\u7684 <code>emitFiles</code> \u51FD\u6570\u3002\u4E0B\u9762\u662F\u8C03\u7528\u6808\uFF1A</p><div class="language-shell"><pre><code>Program.emit -<span class="token operator">&gt;</span>
  <span class="token variable"><span class="token variable">\`</span>emitWorker<span class="token variable">\`</span></span> \uFF08\u5728 program.ts \u4E2D\u7684 createProgram\uFF09 -<span class="token operator">&gt;</span>
    <span class="token variable"><span class="token variable">\`</span>emitFiles<span class="token variable">\`</span></span> \uFF08emitter.ts \u4E2D\u7684\u51FD\u6570\uFF09
</code></pre></div><p><code>emitWorker</code>\uFF08\u901A\u8FC7 <code>emitFiles</code> \u53C2\u6570\uFF09\u7ED9\u53D1\u5C04\u5668\u63D0\u4F9B\u4E00\u4E2A <code>EmitResolver</code>\u3002 <code>EmitResolver</code> \u7531\u7A0B\u5E8F\u7684 <code>TypeChecker</code> \u63D0\u4F9B\uFF0C\u57FA\u672C\u4E0A\u5B83\u662F\u4E00\u4E2A\u6765\u81EA createChecker \u7684\u672C\u5730\u51FD\u6570\u7684\u5B50\u96C6\u3002</p><h4 id="-166" tabindex="-1"><a class="header-anchor" href="#-166">#</a> \u53D1\u5C04\u5668\u51FD\u6570</h4><h5 id="emitfiles" tabindex="-1"><a class="header-anchor" href="#emitfiles">#</a> <code>emitFiles</code></h5><p>\u5B9A\u4E49\u5728 <code>emitter.ts</code> \u4E2D\uFF0C\u4E0B\u9762\u662F\u8BE5\u51FD\u6570\u7684\u7B7E\u540D\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// targetSourceFile \u5F53\u7528\u6237\u60F3\u53D1\u5C04\u9879\u76EE\u4E2D\u7684\u67D0\u4E2A\u6587\u4EF6\u65F6\u6307\u5B9A\uFF0C\u4FDD\u5B58\u65F6\u7F16\u8BD1\uFF08compileOnSave\uFF09\u529F\u80FD\u4F7F\u7528\u6B64\u53C2\u6570</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">emitFiles</span><span class="token punctuation">(</span>resolver<span class="token operator">:</span> EmitResolver<span class="token punctuation">,</span> host<span class="token operator">:</span> EmitHost<span class="token punctuation">,</span> targetSourceFile<span class="token operator">?</span><span class="token operator">:</span> SourceFile<span class="token punctuation">)</span><span class="token operator">:</span> EmitResult <span class="token punctuation">{</span>
</code></pre></div><p><code>EmitHost</code> \u662F <code>CompilerHost</code> \u7684\u7B80\u5316\u7248\uFF08\u8FD0\u884C\u65F6\uFF0C\u5F88\u591A\u7528\u4F8B\u5B9E\u9645\u4E0A\u90FD\u662F <code>CompilerHost</code>\uFF09</p><p><code>emitFiles</code> \u4E2D\u7684\u6700\u6709\u8DA3\u7684\u8C03\u7528\u6808\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-shell"><pre><code>emitFiles -<span class="token operator">&gt;</span>
  emitFile<span class="token punctuation">(</span>jsFilePath, targetSourceFile<span class="token punctuation">)</span> -<span class="token operator">&gt;</span>
    emitJavaScript<span class="token punctuation">(</span>jsFilePath, targetSourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h5 id="emitjavascript" tabindex="-1"><a class="header-anchor" href="#emitjavascript">#</a> <code>emitJavaScript</code></h5><p>\u8BE5\u51FD\u6570\u6709\u826F\u597D\u7684\u6CE8\u91CA\uFF0C\u6211\u4EEC\u4E0B\u9762\u7ED9\u51FA\u5B83\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">emitJavaScript</span><span class="token punctuation">(</span>jsFilePath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> root<span class="token operator">?</span><span class="token operator">:</span> SourceFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> writer <span class="token operator">=</span> <span class="token function">createTextWriter</span><span class="token punctuation">(</span>newLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> write <span class="token operator">=</span> writer<span class="token punctuation">.</span>write<span class="token punctuation">;</span>
  <span class="token keyword">let</span> writeTextOfNode <span class="token operator">=</span> writer<span class="token punctuation">.</span>writeTextOfNode<span class="token punctuation">;</span>
  <span class="token keyword">let</span> writeLine <span class="token operator">=</span> writer<span class="token punctuation">.</span>writeLine<span class="token punctuation">;</span>
  <span class="token keyword">let</span> increaseIndent <span class="token operator">=</span> writer<span class="token punctuation">.</span>increaseIndent<span class="token punctuation">;</span>
  <span class="token keyword">let</span> decreaseIndent <span class="token operator">=</span> writer<span class="token punctuation">.</span>decreaseIndent<span class="token punctuation">;</span>

  <span class="token keyword">let</span> currentSourceFile<span class="token operator">:</span> SourceFile<span class="token punctuation">;</span>
  <span class="token comment">// \u5BFC\u51FA\u5668\u51FD\u6570\u7684\u540D\u79F0\uFF0C\u5982\u679C\u6587\u4EF6\u662F\u4E2A\u7CFB\u7EDF\u5916\u90E8\u6A21\u5757\u7684\u8BDD</span>
  <span class="token comment">// System.register([...], function (&lt;exporter&gt;) {...})</span>
  <span class="token comment">// System \u6A21\u5757\u4E2D\u7684\u5BFC\u51FA\u50CF\u8FD9\u6837\uFF1A</span>
  <span class="token comment">// export var x; ... x = 1</span>
  <span class="token comment">// =&gt;</span>
  <span class="token comment">// var x;... exporter(&quot;x&quot;, x = 1)</span>
  <span class="token keyword">let</span> exportFunctionForFile<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> generatedNameSet<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> nodeToGeneratedName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> computedPropertyNamesToGeneratedNames<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> extendsEmitted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> decorateEmitted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> paramEmitted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> awaiterEmitted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> tempFlags <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> tempVariables<span class="token operator">:</span> Identifier<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> tempParameters<span class="token operator">:</span> Identifier<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> externalImports<span class="token operator">:</span> <span class="token punctuation">(</span>ImportDeclaration <span class="token operator">|</span> ImportEqualsDeclaration <span class="token operator">|</span> ExportDeclaration<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> exportSpecifiers<span class="token operator">:</span> Map<span class="token operator">&lt;</span>ExportSpecifier<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> exportEquals<span class="token operator">:</span> ExportAssignment<span class="token punctuation">;</span>
  <span class="token keyword">let</span> hasExportStars<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>

  <span class="token comment">/** \u5C06\u53D1\u5C04\u8F93\u51FA\u5199\u5165\u78C1\u76D8 */</span>
  <span class="token keyword">let</span> writeEmittedFiles <span class="token operator">=</span> writeJavaScriptFile<span class="token punctuation">;</span>

  <span class="token keyword">let</span> detachedCommentsInfo<span class="token operator">:</span> <span class="token punctuation">{</span> nodePos<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> detachedCommentEndPos<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> writeComment <span class="token operator">=</span> writeCommentRange<span class="token punctuation">;</span>

  <span class="token comment">/** \u53D1\u5C04\u4E00\u4E2A\u8282\u70B9 */</span>
  <span class="token keyword">let</span> emit <span class="token operator">=</span> emitNodeWithoutSourceMap<span class="token punctuation">;</span>

  <span class="token comment">/** \u5728\u53D1\u5C04\u8282\u70B9\u524D\u8C03\u7528 */</span>
  <span class="token keyword">let</span> <span class="token function-variable function">emitStart</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">/** \u53D1\u5C04\u7ED3\u70B9\u5B8C\u6210\u540E\u8C03\u7528 */</span>
  <span class="token keyword">let</span> <span class="token function-variable function">emitEnd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">/** \u4ECE startPos \u4F4D\u7F6E\u5F00\u59CB\uFF0C\u4E3A\u6307\u5B9A\u7684 token \u53D1\u5C04\u6587\u672C\u3002\u9ED8\u8BA4\u5199\u5165\u7684\u6587\u672C\u7531 tokenKind \u63D0\u4F9B\uFF0C
   * \u4F46\u662F\u5982\u679C\u63D0\u4F9B\u4E86\u53EF\u9009\u7684 emitFn \u56DE\u8C03\uFF0C\u5C06\u4F7F\u7528\u8BE5\u56DE\u8C03\u6765\u4EE3\u66FF\u9ED8\u8BA4\u65B9\u5F0F\u53D1\u5C04\u6587\u672C\u3002
   * @param tokenKind \u8981\u641C\u7D22\u5E76\u53D1\u5C04\u7684 token \u7684\u7C7B\u522B
   * @param startPos \u6E90\u7801\u4E2D\u641C\u7D22 token \u7684\u8D77\u59CB\u4F4D\u7F6E
   * @param emitFn \u5982\u679C\u7ED9\u51FA\uFF0C\u4F1A\u88AB\u8C03\u7528\u6765\u8FDB\u884C\u6587\u672C\u7684\u53D1\u5C04\u3002
   */</span>
  <span class="token keyword">let</span> emitToken <span class="token operator">=</span> emitTokenText<span class="token punctuation">;</span>

  <span class="token comment">/** \u8BE5\u51FD\u6570\u7531\u4E8E\u8282\u70B9\u7684\u7F18\u6545\uFF0C\u5728\u88AB\u53D1\u5C04\u7684\u4EE3\u7801\u4E2D\u7684\u51FD\u6570\u6216\u7C7B\u4E2D\uFF0C\u4F1A\u5728\u542F\u7528\u8BCD\u6CD5\u4F5C\u7528\u57DF\u524D\u88AB\u8C03\u7528
   * @param scopeDeclaration \u542F\u52A8\u8BCD\u6CD5\u4F5C\u7528\u57DF\u7684\u8282\u70B9
   * @param scopeName \u53EF\u9009\u7684\u4F5C\u7528\u57DF\u7684\u540D\u79F0\uFF0C\u9ED8\u8BA4\u4ECE\u8282\u70B9\u58F0\u660E\u4E2D\u63A8\u5BFC
   */</span>
  <span class="token keyword">let</span> <span class="token function-variable function">scopeEmitStart</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>scopeDeclaration<span class="token operator">:</span> Node<span class="token punctuation">,</span> scopeName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">/** \u51FA\u4E86\u4F5C\u7528\u57DF\u540E\u8C03\u7528 */</span>
  <span class="token keyword">let</span> <span class="token function-variable function">scopeEmitEnd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">/** \u4F1A\u88AB\u7F16\u7801\u7684 Sourcemap \u6570\u636E */</span>
  <span class="token keyword">let</span> sourceMapData<span class="token operator">:</span> SourceMapData<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>compilerOptions<span class="token punctuation">.</span>sourceMap <span class="token operator">||</span> compilerOptions<span class="token punctuation">.</span>inlineSourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">initializeEmitterWithSourceMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0D\u8981\u76F4\u63A5\u8C03\u7528 emit\uFF0C\u90A3\u6837\u4E0D\u4F1A\u8BBE\u7F6E currentSourceFile</span>
    <span class="token function">emitSourceFile</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">forEach</span><span class="token punctuation">(</span>host<span class="token punctuation">.</span><span class="token function">getSourceFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sourceFile <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isExternalModuleOrDeclarationFile</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">emitSourceFile</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">writeLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">writeEmittedFiles</span><span class="token punctuation">(</span>writer<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">/*writeByteOrderMark*/</span> compilerOptions<span class="token punctuation">.</span>emitBOM<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>

  <span class="token comment">/// \u4E00\u6279\u672C\u5730\u51FD\u6570</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5B83\u4E3B\u8981\u8BBE\u7F6E\u4E86\u4E00\u6279\u672C\u5730\u53D8\u91CF\u548C\u51FD\u6570\uFF08\u8FD9\u4E9B\u51FD\u6570\u6784\u6210 <code>emitter.ts</code> \u7684\u5927\u90E8\u5206\u5185\u5BB9\uFF09\uFF0C\u63A5\u7740\u4EA4\u7ED9\u672C\u5730\u51FD\u6570 <code>emitSourceFile</code> \u53D1\u5C04\u6587\u672C\u3002<code>emitSourceFile</code> \u51FD\u6570\u8BBE\u7F6E <code>currentSourceFile</code> \u7136\u540E\u4EA4\u7ED9\u672C\u5730\u51FD\u6570 <code>emit</code> \u53BB\u5904\u7406\u3002</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">emitSourceFile</span><span class="token punctuation">(</span>sourceFile<span class="token operator">:</span> SourceFile<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  currentSourceFile <span class="token operator">=</span> sourceFile<span class="token punctuation">;</span>
  exportFunctionForFile <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token function">emit</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>emit</code> \u51FD\u6570\u5904\u7406 <strong>\u6CE8\u91CA</strong> \u548C <strong>\u5B9E\u9645 JavaScript</strong> \u7684\u53D1\u5C04\u3002<strong>\u5B9E\u9645 JavaScript</strong> \u7684\u53D1\u5C04\u662F emitJavaScriptWorker \u51FD\u6570\u7684\u5DE5\u4F5C\u3002</p><h5 id="emitjavascriptworker" tabindex="-1"><a class="header-anchor" href="#emitjavascriptworker">#</a> <code>emitJavaScriptWorker</code></h5><p>\u5B8C\u6574\u7684\u51FD\u6570\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">emitJavaScriptWorker</span><span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u68C0\u67E5\u8282\u70B9\u662F\u5426\u53EF\u4EE5\u5FFD\u7565 ScriptTarget \u53D1\u5C04</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>Identifier<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitIdentifier</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Identifier<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>Parameter<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitParameter</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ParameterDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>MethodDeclaration<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>MethodSignature<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitMethod</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>MethodDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>GetAccessor<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>SetAccessor<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitAccessor</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>AccessorDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ThisKeyword<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitThis</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>SuperKeyword<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitSuper</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>NullKeyword<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;null&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TrueKeyword<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>FalseKeyword<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;false&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>NumericLiteral<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>StringLiteral<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>RegularExpressionLiteral<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>NoSubstitutionTemplateLiteral<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TemplateHead<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TemplateMiddle<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TemplateTail<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitLiteral</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>LiteralExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TemplateExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitTemplateExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>TemplateExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TemplateSpan<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitTemplateSpan</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>TemplateSpan<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>JsxElement<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>JsxSelfClosingElement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitJsxElement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>JsxElement <span class="token operator">|</span> JsxSelfClosingElement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>JsxText<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitJsxText</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>JsxText<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>JsxExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitJsxExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>JsxExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>QualifiedName<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitQualifiedName</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>QualifiedName<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ObjectBindingPattern<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitObjectBindingPattern</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>BindingPattern<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ArrayBindingPattern<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitArrayBindingPattern</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>BindingPattern<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>BindingElement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitBindingElement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>BindingElement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ArrayLiteralExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitArrayLiteral</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ArrayLiteralExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ObjectLiteralExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitObjectLiteral</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ObjectLiteralExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>PropertyAssignment<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitPropertyAssignment</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>PropertyDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ShorthandPropertyAssignment<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitShorthandPropertyAssignment</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ShorthandPropertyAssignment<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ComputedPropertyName<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitComputedPropertyName</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ComputedPropertyName<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>PropertyAccessExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitPropertyAccess</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>PropertyAccessExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ElementAccessExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitIndexedAccess</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ElementAccessExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>CallExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitCallExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>CallExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>NewExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitNewExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>NewExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TaggedTemplateExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitTaggedTemplateExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>TaggedTemplateExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TypeAssertionExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>TypeAssertion<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>AsExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>AsExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ParenthesizedExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitParenExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ParenthesizedExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>FunctionDeclaration<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>FunctionExpression<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ArrowFunction<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitFunctionDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>FunctionLikeDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>DeleteExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitDeleteExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>DeleteExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TypeOfExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitTypeOfExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>TypeOfExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>VoidExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitVoidExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>VoidExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>AwaitExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitAwaitExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>AwaitExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>PrefixUnaryExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitPrefixUnaryExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>PrefixUnaryExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>PostfixUnaryExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitPostfixUnaryExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>PostfixUnaryExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>BinaryExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitBinaryExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>BinaryExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ConditionalExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitConditionalExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ConditionalExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>SpreadElementExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitSpreadElementExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>SpreadElementExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>YieldExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitYieldExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>YieldExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>OmittedExpression<span class="token operator">:</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>Block<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ModuleBlock<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitBlock</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Block<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>VariableStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitVariableStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>VariableStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>EmptyStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ExpressionStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitExpressionStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ExpressionStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>IfStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitIfStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>IfStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>DoStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitDoStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>DoStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>WhileStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitWhileStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>WhileStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ForStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitForStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ForStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ForOfStatement<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ForInStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitForInOrForOfStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ForInStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ContinueStatement<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>BreakStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitBreakOrContinueStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>BreakOrContinueStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ReturnStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitReturnStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ReturnStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>WithStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitWithStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>WithStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>SwitchStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitSwitchStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>SwitchStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>CaseClause<span class="token operator">:</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>DefaultClause<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitCaseOrDefaultClause</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>CaseOrDefaultClause<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>LabeledStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitLabelledStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>LabeledStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ThrowStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitThrowStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ThrowStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>TryStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitTryStatement</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>TryStatement<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>CatchClause<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitCatchClause</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>CatchClause<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>DebuggerStatement<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitDebuggerStatement</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>VariableDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitVariableDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>VariableDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ClassExpression<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitClassExpression</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ClassExpression<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ClassDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitClassDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ClassDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>InterfaceDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitInterfaceDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>InterfaceDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>EnumDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitEnumDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>EnumDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>EnumMember<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitEnumMember</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>EnumMember<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ModuleDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitModuleDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ModuleDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ImportDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitImportDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ImportDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ImportEqualsDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitImportEqualsDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ImportEqualsDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ExportDeclaration<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitExportDeclaration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ExportDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>ExportAssignment<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitExportAssignment</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ExportAssignment<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> SyntaxKind<span class="token punctuation">.</span>SourceFile<span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token function">emitSourceFileNode</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>SourceFile<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u901A\u8FC7\u7B80\u5355\u5730\u8C03\u7528\u76F8\u5E94\u7684 <code>emitXXX</code> \u51FD\u6570\u6765\u5B8C\u6210\u9012\u5F52\uFF0C\u4F8B\u5982 <code>emitFunctionDeclaration</code></p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">emitFunctionDeclaration</span><span class="token punctuation">(</span>node<span class="token operator">:</span> FunctionLikeDeclaration<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">nodeIsMissing</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">emitOnlyPinnedOrTripleSlashComments</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>kind <span class="token operator">!==</span> SyntaxKind<span class="token punctuation">.</span>MethodDeclaration <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>kind <span class="token operator">!==</span> SyntaxKind<span class="token punctuation">.</span>MethodSignature<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F1A\u628A\u6CE8\u91CA\u5F53\u505A\u65B9\u6CD5\u58F0\u660E\u7684\u4E00\u90E8\u5206\u53BB\u53D1\u5C04\u3002</span>
    <span class="token function">emitLeadingComments</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u76EE\u6807\u4E3A es6 \u4E4B\u524D\u65F6\uFF0C\u4F7F\u7528 function \u5173\u952E\u5B57\u6765\u53D1\u5C04\u7C7B\u51FD\u6570\uFF08functions-like\uFF09\u58F0\u660E\uFF0C\u5305\u62EC\u7BAD\u5934\u51FD\u6570</span>
  <span class="token comment">// \u76EE\u6807\u4E3A es6 \u65F6\uFF0C\u53EF\u4EE5\u53D1\u5C04\u539F\u751F\u7684 ES6 \u7BAD\u5934\u51FD\u6570\uFF0C\u5E76\u4F7F\u7528\u5BBD\u7BAD\u5934\u4EE3\u66FF function \u5173\u952E\u5B57.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">shouldEmitAsArrowFunction</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isES6ExportedDeclaration</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;export &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>flags <span class="token operator">&amp;</span> NodeFlags<span class="token punctuation">.</span>Default<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;default &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>languageVersion <span class="token operator">&gt;=</span> ScriptTarget<span class="token punctuation">.</span><span class="token constant">ES6</span> <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>asteriskToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldEmitFunctionName</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">emitDeclarationName</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">emitSignatureAndBody</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    languageVersion <span class="token operator">&lt;</span> ScriptTarget<span class="token punctuation">.</span><span class="token constant">ES6</span> <span class="token operator">&amp;&amp;</span>
    node<span class="token punctuation">.</span>kind <span class="token operator">===</span> SyntaxKind<span class="token punctuation">.</span>FunctionDeclaration <span class="token operator">&amp;&amp;</span>
    node<span class="token punctuation">.</span>parent <span class="token operator">===</span> currentSourceFile <span class="token operator">&amp;&amp;</span>
    node<span class="token punctuation">.</span>name
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">emitExportMemberAssignments</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>FunctionDeclaration<span class="token operator">&gt;</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>kind <span class="token operator">!==</span> SyntaxKind<span class="token punctuation">.</span>MethodDeclaration <span class="token operator">&amp;&amp;</span> node<span class="token punctuation">.</span>kind <span class="token operator">!==</span> SyntaxKind<span class="token punctuation">.</span>MethodSignature<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">emitTrailingComments</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="sourcemaps" tabindex="-1"><a class="header-anchor" href="#sourcemaps">#</a> \u53D1\u5C04\u5668\u6E90\u6620\u5C04\uFF08SourceMaps\uFF09</h4><p>\u5982\u524D\u6240\u8FF0 <code>emitter.ts</code> \u4E2D\u7684\u5927\u90E8\u5206\u4EE3\u7801\u662F\u51FD\u6570 <code>emitJavaScript</code>\uFF08\u6211\u4EEC\u4E4B\u524D\u5C55\u793A\u8FC7\u8BE5\u51FD\u6570\u7684\u521D\u59CB\u5316\u4F8B\u7A0B\uFF09\u3002 \u5B83\u4E3B\u8981\u662F\u8BBE\u7F6E\u4E00\u6279\u672C\u5730\u53D8\u91CF\u5E76\u4EA4\u7ED9 <code>emitSourceFile</code> \u5904\u7406\u3002\u4E0B\u9762\u6211\u4EEC\u518D\u770B\u4E00\u904D\u8FD9\u4E2A\u51FD\u6570\uFF0C\u8FD9\u6B21\u6211\u4EEC\u91CD\u70B9\u5173\u6CE8 <code>SourceMap</code> \u7684\u90E8\u5206\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token function">emitJavaScript</span><span class="token punctuation">(</span>jsFilePath<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> root<span class="token operator">?</span><span class="token operator">:</span> SourceFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u65E0\u5173\u4EE3\u7801 ........... \u5DF2\u79FB\u9664</span>
    <span class="token keyword">let</span> writeComment <span class="token operator">=</span> writeCommentRange<span class="token punctuation">;</span>

    <span class="token comment">/** \u5C06\u53D1\u5C04\u7684\u8F93\u51FA\u5199\u5230\u78C1\u76D8\u4E0A */</span>
    <span class="token keyword">let</span> writeEmittedFiles <span class="token operator">=</span> writeJavaScriptFile<span class="token punctuation">;</span>

    <span class="token comment">/** \u53D1\u5C04\u4E00\u4E2A\u8282\u70B9 */</span>
    <span class="token keyword">let</span> emit <span class="token operator">=</span> emitNodeWithoutSourceMap<span class="token punctuation">;</span>

    <span class="token comment">/** \u8282\u70B9\u53D1\u5C04\u524D\u8C03\u7528 */</span>
    <span class="token keyword">let</span> <span class="token function-variable function">emitStart</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/** \u8282\u70B9\u53D1\u5C04\u5B8C\u6210\u540E\u8C03\u7528 */</span>
    <span class="token keyword">let</span> <span class="token function-variable function">emitEnd</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> Node<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/** \u4ECE startPos \u4F4D\u7F6E\u5F00\u59CB\uFF0C\u4E3A\u6307\u5B9A\u7684 token \u53D1\u5C04\u6587\u672C\u3002\u9ED8\u8BA4\u5199\u5165\u7684\u6587\u672C\u7531 tokenKind \u63D0\u4F9B\uFF0C
      * \u4F46\u662F\u5982\u679C\u63D0\u4F9B\u4E86\u53EF\u9009\u7684 emitFn \u56DE\u8C03\uFF0C\u5C06\u4F7F\u7528\u8BE5\u56DE\u8C03\u6765\u4EE3\u66FF\u9ED8\u8BA4\u65B9\u5F0F\u53D1\u5C04\u6587\u672C\u3002
      * @param tokenKind \u8981\u641C\u7D22\u5E76\u53D1\u5C04\u7684 token \u7684\u7C7B\u522B
      * @param startPos \u6E90\u7801\u4E2D\u641C\u7D22 token \u7684\u8D77\u59CB\u4F4D\u7F6E
      * @param emitFn \u5982\u679C\u7ED9\u51FA\uFF0C\u4F1A\u88AB\u8C03\u7528\u6765\u8FDB\u884C\u6587\u672C\u7684\u53D1\u5C04\u3002*/</span>
    <span class="token keyword">let</span> emitToken <span class="token operator">=</span> emitTokenText<span class="token punctuation">;</span>

    <span class="token comment">/** \u8BE5\u51FD\u6570\u56E0\u4E3A\u8282\u70B9\uFF0C\u4F1A\u5728\u53D1\u5C04\u7684\u4EE3\u7801\u4E2D\u4E8E\u51FD\u6570\u6216\u7C7B\u4E2D\u542F\u7528\u8BCD\u6CD5\u4F5C\u7528\u57DF\u524D\u8C03\u7528
      * @param scopeDeclaration \u542F\u52A8\u8BCD\u6CD5\u4F5C\u7528\u57DF\u7684\u8282\u70B9
      * @param scopeName \u53EF\u9009\u7684\u4F5C\u7528\u57DF\u7684\u540D\u79F0\uFF0C\u800C\u4E0D\u662F\u4ECE\u8282\u70B9\u58F0\u660E\u4E2D\u63A8\u5BFC
      */</span>
    <span class="token keyword">let</span> <span class="token function-variable function">scopeEmitStart</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>scopeDeclaration<span class="token operator">:</span> Node<span class="token punctuation">,</span> scopeName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/** \u51FA\u4E86\u4F5C\u7528\u57DF\u540E\u8C03\u7528 */</span>
    <span class="token keyword">let</span> <span class="token function-variable function">scopeEmitEnd</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/** \u4F1A\u88AB\u7F16\u7801\u7684 Sourcemap \u6570\u636E */</span>
    <span class="token keyword">let</span> sourceMapData<span class="token operator">:</span> SourceMapData<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>compilerOptions<span class="token punctuation">.</span>sourceMap <span class="token operator">||</span> compilerOptions<span class="token punctuation">.</span>inlineSourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">initializeEmitterWithSourceMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u8981\u76F4\u63A5\u8C03\u7528 emit\uFF0C\u90A3\u6837\u4E0D\u4F1A\u8BBE\u7F6E currentSourceFile</span>
        <span class="token function">emitSourceFile</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">forEach</span><span class="token punctuation">(</span>host<span class="token punctuation">.</span><span class="token function">getSourceFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sourceFile <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isExternalModuleOrDeclarationFile</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">emitSourceFile</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">writeLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">writeEmittedFiles</span><span class="token punctuation">(</span>writer<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">/*writeByteOrderMark*/</span> compilerOptions<span class="token punctuation">.</span>emitBOM<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
</code></pre></div><p>\u91CD\u8981\u7684\u51FD\u6570\u8C03\u7528\uFF1A <code>initializeEmitterWithSourceMaps</code>\uFF0C\u8BE5\u51FD\u6570\u662F <code>emitJavaScript</code> \u7684\u672C\u5730\u51FD\u6570\uFF0C\u5B83\u8986\u76D6\u4E86\u90E8\u5206\u5DF2\u5B9A\u4E49\u7684\u672C\u5730\u51FD\u6570\u3002 \u8986\u76D6\u7684\u51FD\u6570\u53EF\u4EE5\u5728 <code>initalizeEmitterWithSourceMap</code> \u7684\u5E95\u90E8\u627E\u5230\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \`initializeEmitterWithSourceMaps\` \u51FD\u6570\u7684\u6700\u540E\u90E8\u5206</span>

writeEmittedFiles <span class="token operator">=</span> writeJavaScriptAndSourceMapFile<span class="token punctuation">;</span>
emit <span class="token operator">=</span> emitNodeWithSourceMap<span class="token punctuation">;</span>
emitStart <span class="token operator">=</span> recordEmitNodeStartSpan<span class="token punctuation">;</span>
emitEnd <span class="token operator">=</span> recordEmitNodeEndSpan<span class="token punctuation">;</span>
emitToken <span class="token operator">=</span> writeTextWithSpanRecord<span class="token punctuation">;</span>
scopeEmitStart <span class="token operator">=</span> recordScopeNameOfNode<span class="token punctuation">;</span>
scopeEmitEnd <span class="token operator">=</span> recordScopeNameEnd<span class="token punctuation">;</span>
writeComment <span class="token operator">=</span> writeCommentRangeWithMap<span class="token punctuation">;</span>
</code></pre></div><p>\u5C31\u662F\u8BF4\u5927\u90E8\u5206\u7684\u53D1\u5C04\u5668\u4EE3\u7801\u4E0D\u5173\u5FC3 <code>SourceMap</code>\uFF0C\u5B83\u4EEC\u4EE5\u76F8\u540C\u7684\u65B9\u5F0F\u4F7F\u7528\u8FD9\u4E9B\uFF08\u5E26\u6216\u4E0D\u5E26 SourceMap \u7684\uFF09\u672C\u5730\u51FD\u6570\u3002</p><p><cite><a href="https://jkchao.github.io/typescript-book-chinese/project/compilationContext.html#tsconfig-json" target="_blank" rel="noopener noreferrer">-- \u300A\u6DF1\u5165\u7406\u89E3 TypeScript\u300B</a></cite></p>`,1245),e=[o];function c(l,u,k,i,r,d){return a(),s("div",null,e)}var g=n(t,[["render",c]]);export{y as __pageData,g as default};
